/*
Beyond Compute Service(BCS) API

Beyond Compute Service API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bcs

import (
	"encoding/json"
	"fmt"
)

// checks if the AllowedAddressPairModelInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AllowedAddressPairModelInput{}

// AllowedAddressPairModelInput struct for AllowedAddressPairModelInput
type AllowedAddressPairModelInput struct {
	// 네트워크 인터페이스에 추가할 패킷 송신 허용 IP 주소
	IpAddress            string `json:"ip_address"`
	AdditionalProperties map[string]interface{}
}

type _AllowedAddressPairModelInput AllowedAddressPairModelInput

// NewAllowedAddressPairModelInput instantiates a new AllowedAddressPairModelInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAllowedAddressPairModelInput(ipAddress string) *AllowedAddressPairModelInput {
	this := AllowedAddressPairModelInput{}
	this.IpAddress = ipAddress
	return &this
}

// NewAllowedAddressPairModelInputWithDefaults instantiates a new AllowedAddressPairModelInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAllowedAddressPairModelInputWithDefaults() *AllowedAddressPairModelInput {
	this := AllowedAddressPairModelInput{}
	return &this
}

// GetIpAddress returns the IpAddress field value
func (o *AllowedAddressPairModelInput) GetIpAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value
// and a boolean to check if the value has been set.
func (o *AllowedAddressPairModelInput) GetIpAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IpAddress, true
}

// SetIpAddress sets field value
func (o *AllowedAddressPairModelInput) SetIpAddress(v string) {
	o.IpAddress = v
}

func (o AllowedAddressPairModelInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AllowedAddressPairModelInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ip_address"] = o.IpAddress

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AllowedAddressPairModelInput) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ip_address",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAllowedAddressPairModelInput := _AllowedAddressPairModelInput{}

	err = json.Unmarshal(data, &varAllowedAddressPairModelInput)

	if err != nil {
		return err
	}

	*o = AllowedAddressPairModelInput(varAllowedAddressPairModelInput)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ip_address")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAllowedAddressPairModelInput struct {
	value *AllowedAddressPairModelInput
	isSet bool
}

func (v NullableAllowedAddressPairModelInput) Get() *AllowedAddressPairModelInput {
	return v.value
}

func (v *NullableAllowedAddressPairModelInput) Set(val *AllowedAddressPairModelInput) {
	v.value = val
	v.isSet = true
}

func (v NullableAllowedAddressPairModelInput) IsSet() bool {
	return v.isSet
}

func (v *NullableAllowedAddressPairModelInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAllowedAddressPairModelInput(val *AllowedAddressPairModelInput) *NullableAllowedAddressPairModelInput {
	return &NullableAllowedAddressPairModelInput{value: val, isSet: true}
}

func (v NullableAllowedAddressPairModelInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAllowedAddressPairModelInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
