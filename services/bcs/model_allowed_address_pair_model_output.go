/*
Beyond Compute Service(BCS) API

Beyond Compute Service API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bcs

import (
	"encoding/json"
)

// checks if the AllowedAddressPairModelOutput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AllowedAddressPairModelOutput{}

// AllowedAddressPairModelOutput struct for AllowedAddressPairModelOutput
type AllowedAddressPairModelOutput struct {
	MacAddress           NullableString `json:"mac_address,omitempty"`
	IpAddress            NullableString `json:"ip_address,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AllowedAddressPairModelOutput AllowedAddressPairModelOutput

// NewAllowedAddressPairModelOutput instantiates a new AllowedAddressPairModelOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAllowedAddressPairModelOutput() *AllowedAddressPairModelOutput {
	this := AllowedAddressPairModelOutput{}
	return &this
}

// NewAllowedAddressPairModelOutputWithDefaults instantiates a new AllowedAddressPairModelOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAllowedAddressPairModelOutputWithDefaults() *AllowedAddressPairModelOutput {
	this := AllowedAddressPairModelOutput{}
	return &this
}

// GetMacAddress returns the MacAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AllowedAddressPairModelOutput) GetMacAddress() string {
	if o == nil || IsNil(o.MacAddress.Get()) {
		var ret string
		return ret
	}
	return *o.MacAddress.Get()
}

// GetMacAddressOk returns a tuple with the MacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AllowedAddressPairModelOutput) GetMacAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MacAddress.Get(), o.MacAddress.IsSet()
}

// HasMacAddress returns a boolean if a field has been set.
func (o *AllowedAddressPairModelOutput) HasMacAddress() bool {
	if o != nil && o.MacAddress.IsSet() {
		return true
	}

	return false
}

// SetMacAddress gets a reference to the given NullableString and assigns it to the MacAddress field.
func (o *AllowedAddressPairModelOutput) SetMacAddress(v string) {
	o.MacAddress.Set(&v)
}

// SetMacAddressNil sets the value for MacAddress to be an explicit nil
func (o *AllowedAddressPairModelOutput) SetMacAddressNil() {
	o.MacAddress.Set(nil)
}

// UnsetMacAddress ensures that no value is present for MacAddress, not even an explicit nil
func (o *AllowedAddressPairModelOutput) UnsetMacAddress() {
	o.MacAddress.Unset()
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AllowedAddressPairModelOutput) GetIpAddress() string {
	if o == nil || IsNil(o.IpAddress.Get()) {
		var ret string
		return ret
	}
	return *o.IpAddress.Get()
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AllowedAddressPairModelOutput) GetIpAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IpAddress.Get(), o.IpAddress.IsSet()
}

// HasIpAddress returns a boolean if a field has been set.
func (o *AllowedAddressPairModelOutput) HasIpAddress() bool {
	if o != nil && o.IpAddress.IsSet() {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given NullableString and assigns it to the IpAddress field.
func (o *AllowedAddressPairModelOutput) SetIpAddress(v string) {
	o.IpAddress.Set(&v)
}

// SetIpAddressNil sets the value for IpAddress to be an explicit nil
func (o *AllowedAddressPairModelOutput) SetIpAddressNil() {
	o.IpAddress.Set(nil)
}

// UnsetIpAddress ensures that no value is present for IpAddress, not even an explicit nil
func (o *AllowedAddressPairModelOutput) UnsetIpAddress() {
	o.IpAddress.Unset()
}

func (o AllowedAddressPairModelOutput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AllowedAddressPairModelOutput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.MacAddress.IsSet() {
		toSerialize["mac_address"] = o.MacAddress.Get()
	}
	if o.IpAddress.IsSet() {
		toSerialize["ip_address"] = o.IpAddress.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AllowedAddressPairModelOutput) UnmarshalJSON(data []byte) (err error) {
	varAllowedAddressPairModelOutput := _AllowedAddressPairModelOutput{}

	err = json.Unmarshal(data, &varAllowedAddressPairModelOutput)

	if err != nil {
		return err
	}

	*o = AllowedAddressPairModelOutput(varAllowedAddressPairModelOutput)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "mac_address")
		delete(additionalProperties, "ip_address")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAllowedAddressPairModelOutput struct {
	value *AllowedAddressPairModelOutput
	isSet bool
}

func (v NullableAllowedAddressPairModelOutput) Get() *AllowedAddressPairModelOutput {
	return v.value
}

func (v *NullableAllowedAddressPairModelOutput) Set(val *AllowedAddressPairModelOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableAllowedAddressPairModelOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableAllowedAddressPairModelOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAllowedAddressPairModelOutput(val *AllowedAddressPairModelOutput) *NullableAllowedAddressPairModelOutput {
	return &NullableAllowedAddressPairModelOutput{value: val, isSet: true}
}

func (v NullableAllowedAddressPairModelOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAllowedAddressPairModelOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
