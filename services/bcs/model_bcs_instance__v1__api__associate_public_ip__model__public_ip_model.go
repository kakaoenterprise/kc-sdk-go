/*
Beyond Compute Service(BCS) API

Beyond Compute Service API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bcs

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel{}

// BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel struct for BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel
type BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel struct {
	// 퍼블릭 IP의 고유 ID
	Id string `json:"id"`
	// 퍼블릭 IP에 대한 설명
	Description string `json:"description"`
	// 퍼블릭 IP의 현재 상태
	Status string `json:"status"`
	// 퍼블릭 IP가 속한 프로젝트의 ID
	ProjectId string `json:"project_id"`
	// 외부에서 접근 가능한 실제 퍼블릭 IP 주소
	PublicIp  string         `json:"public_ip"`
	PrivateIp NullableString `json:"private_ip,omitempty"`
	// 리소스가 생성된 시간 <br/> - ISO_8601 형식  <br/> - UTC 기준
	CreatedAt time.Time `json:"created_at"`
	// 리소스가 마지막으로 수정된 시간 <br/> - ISO_8601 형식  <br/> - UTC 기준
	UpdatedAt            time.Time `json:"updated_at"`
	AdditionalProperties map[string]interface{}
}

type _BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel

// NewBcsInstanceV1ApiAssociatePublicIpModelPublicIpModel instantiates a new BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBcsInstanceV1ApiAssociatePublicIpModelPublicIpModel(id string, description string, status string, projectId string, publicIp string, createdAt time.Time, updatedAt time.Time) *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel {
	this := BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel{}
	this.Id = id
	this.Description = description
	this.Status = status
	this.ProjectId = projectId
	this.PublicIp = publicIp
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewBcsInstanceV1ApiAssociatePublicIpModelPublicIpModelWithDefaults instantiates a new BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBcsInstanceV1ApiAssociatePublicIpModelPublicIpModelWithDefaults() *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel {
	this := BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel{}
	return &this
}

// GetId returns the Id field value
func (o *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) SetId(v string) {
	o.Id = v
}

// GetDescription returns the Description field value
func (o *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) SetDescription(v string) {
	o.Description = v
}

// GetStatus returns the Status field value
func (o *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) SetStatus(v string) {
	o.Status = v
}

// GetProjectId returns the ProjectId field value
func (o *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) SetProjectId(v string) {
	o.ProjectId = v
}

// GetPublicIp returns the PublicIp field value
func (o *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) GetPublicIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublicIp
}

// GetPublicIpOk returns a tuple with the PublicIp field value
// and a boolean to check if the value has been set.
func (o *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) GetPublicIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublicIp, true
}

// SetPublicIp sets field value
func (o *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) SetPublicIp(v string) {
	o.PublicIp = v
}

// GetPrivateIp returns the PrivateIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) GetPrivateIp() string {
	if o == nil || IsNil(o.PrivateIp.Get()) {
		var ret string
		return ret
	}
	return *o.PrivateIp.Get()
}

// GetPrivateIpOk returns a tuple with the PrivateIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) GetPrivateIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrivateIp.Get(), o.PrivateIp.IsSet()
}

// HasPrivateIp returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) HasPrivateIp() bool {
	if o != nil && o.PrivateIp.IsSet() {
		return true
	}

	return false
}

// SetPrivateIp gets a reference to the given NullableString and assigns it to the PrivateIp field.
func (o *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) SetPrivateIp(v string) {
	o.PrivateIp.Set(&v)
}

// SetPrivateIpNil sets the value for PrivateIp to be an explicit nil
func (o *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) SetPrivateIpNil() {
	o.PrivateIp.Set(nil)
}

// UnsetPrivateIp ensures that no value is present for PrivateIp, not even an explicit nil
func (o *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) UnsetPrivateIp() {
	o.PrivateIp.Unset()
}

// GetCreatedAt returns the CreatedAt field value
func (o *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["description"] = o.Description
	toSerialize["status"] = o.Status
	toSerialize["project_id"] = o.ProjectId
	toSerialize["public_ip"] = o.PublicIp
	if o.PrivateIp.IsSet() {
		toSerialize["private_ip"] = o.PrivateIp.Get()
	}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"description",
		"status",
		"project_id",
		"public_ip",
		"created_at",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBcsInstanceV1ApiAssociatePublicIpModelPublicIpModel := _BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel{}

	err = json.Unmarshal(data, &varBcsInstanceV1ApiAssociatePublicIpModelPublicIpModel)

	if err != nil {
		return err
	}

	*o = BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel(varBcsInstanceV1ApiAssociatePublicIpModelPublicIpModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "description")
		delete(additionalProperties, "status")
		delete(additionalProperties, "project_id")
		delete(additionalProperties, "public_ip")
		delete(additionalProperties, "private_ip")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBcsInstanceV1ApiAssociatePublicIpModelPublicIpModel struct {
	value *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel
	isSet bool
}

func (v NullableBcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) Get() *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel {
	return v.value
}

func (v *NullableBcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) Set(val *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBcsInstanceV1ApiAssociatePublicIpModelPublicIpModel(val *BcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) *NullableBcsInstanceV1ApiAssociatePublicIpModelPublicIpModel {
	return &NullableBcsInstanceV1ApiAssociatePublicIpModelPublicIpModel{value: val, isSet: true}
}

func (v NullableBcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBcsInstanceV1ApiAssociatePublicIpModelPublicIpModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
