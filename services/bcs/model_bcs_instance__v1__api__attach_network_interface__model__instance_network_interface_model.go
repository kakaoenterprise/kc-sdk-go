/*
Beyond Compute Service(BCS) API

Beyond Compute Service API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bcs

import (
	"encoding/json"
	"fmt"
)

// checks if the BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel{}

// BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel struct for BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel
type BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel struct {
	// 네트워크 인터페이스의 ID
	Id string `json:"id"`
	// 네트워크 인터페이스의 상태
	Status string `json:"status"`
	// 네트워크 인터페이스의 MAC 주소
	MacAddress string `json:"mac_address"`
	// 네트워크 인터페이스에 연결된 프라이빗 IP 목록
	PrivateIps           []FixedIpModel `json:"private_ips,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel

// NewBcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel instantiates a new BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel(id string, status string, macAddress string) *BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel {
	this := BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel{}
	this.Id = id
	this.Status = status
	this.MacAddress = macAddress
	return &this
}

// NewBcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModelWithDefaults instantiates a new BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModelWithDefaults() *BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel {
	this := BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel{}
	return &this
}

// GetId returns the Id field value
func (o *BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel) SetId(v string) {
	o.Id = v
}

// GetStatus returns the Status field value
func (o *BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel) SetStatus(v string) {
	o.Status = v
}

// GetMacAddress returns the MacAddress field value
func (o *BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel) GetMacAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value
// and a boolean to check if the value has been set.
func (o *BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel) GetMacAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MacAddress, true
}

// SetMacAddress sets field value
func (o *BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel) SetMacAddress(v string) {
	o.MacAddress = v
}

// GetPrivateIps returns the PrivateIps field value if set, zero value otherwise.
func (o *BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel) GetPrivateIps() []FixedIpModel {
	if o == nil || IsNil(o.PrivateIps) {
		var ret []FixedIpModel
		return ret
	}
	return o.PrivateIps
}

// GetPrivateIpsOk returns a tuple with the PrivateIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel) GetPrivateIpsOk() ([]FixedIpModel, bool) {
	if o == nil || IsNil(o.PrivateIps) {
		return nil, false
	}
	return o.PrivateIps, true
}

// HasPrivateIps returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel) HasPrivateIps() bool {
	if o != nil && !IsNil(o.PrivateIps) {
		return true
	}

	return false
}

// SetPrivateIps gets a reference to the given []FixedIpModel and assigns it to the PrivateIps field.
func (o *BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel) SetPrivateIps(v []FixedIpModel) {
	o.PrivateIps = v
}

func (o BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["status"] = o.Status
	toSerialize["mac_address"] = o.MacAddress
	if !IsNil(o.PrivateIps) {
		toSerialize["private_ips"] = o.PrivateIps
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"status",
		"mac_address",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel := _BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel{}

	err = json.Unmarshal(data, &varBcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel)

	if err != nil {
		return err
	}

	*o = BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel(varBcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "status")
		delete(additionalProperties, "mac_address")
		delete(additionalProperties, "private_ips")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel struct {
	value *BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel
	isSet bool
}

func (v NullableBcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel) Get() *BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel {
	return v.value
}

func (v *NullableBcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel) Set(val *BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel(val *BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel) *NullableBcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel {
	return &NullableBcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel{value: val, isSet: true}
}

func (v NullableBcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
