/*
Beyond Compute Service(BCS) API

Beyond Compute Service API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bcs

import (
	"encoding/json"
	"fmt"
)

// checks if the BcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel{}

// BcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel struct for BcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel
type BcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel struct {
	NetworkInterface     BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel `json:"network_interface"`
	AdditionalProperties map[string]interface{}
}

type _BcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel BcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel

// NewBcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel instantiates a new BcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel(networkInterface BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel) *BcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel {
	this := BcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel{}
	this.NetworkInterface = networkInterface
	return &this
}

// NewBcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModelWithDefaults instantiates a new BcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModelWithDefaults() *BcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel {
	this := BcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel{}
	return &this
}

// GetNetworkInterface returns the NetworkInterface field value
func (o *BcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel) GetNetworkInterface() BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel {
	if o == nil {
		var ret BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel
		return ret
	}

	return o.NetworkInterface
}

// GetNetworkInterfaceOk returns a tuple with the NetworkInterface field value
// and a boolean to check if the value has been set.
func (o *BcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel) GetNetworkInterfaceOk() (*BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkInterface, true
}

// SetNetworkInterface sets field value
func (o *BcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel) SetNetworkInterface(v BcsInstanceV1ApiAttachNetworkInterfaceModelInstanceNetworkInterfaceModel) {
	o.NetworkInterface = v
}

func (o BcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["network_interface"] = o.NetworkInterface

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"network_interface",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel := _BcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel{}

	err = json.Unmarshal(data, &varBcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel)

	if err != nil {
		return err
	}

	*o = BcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel(varBcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "network_interface")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel struct {
	value *BcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel
	isSet bool
}

func (v NullableBcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel) Get() *BcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel {
	return v.value
}

func (v *NullableBcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel) Set(val *BcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel(val *BcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel) *NullableBcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel {
	return &NullableBcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel{value: val, isSet: true}
}

func (v NullableBcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBcsInstanceV1ApiAttachNetworkInterfaceModelResponseInstanceNetworkInterfaceModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
