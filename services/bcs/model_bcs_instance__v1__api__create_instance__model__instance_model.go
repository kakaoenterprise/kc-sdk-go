/*
Beyond Compute Service(BCS) API

Beyond Compute Service API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bcs

import (
	"encoding/json"
	"fmt"
)

// checks if the BcsInstanceV1ApiCreateInstanceModelInstanceModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BcsInstanceV1ApiCreateInstanceModelInstanceModel{}

// BcsInstanceV1ApiCreateInstanceModelInstanceModel struct for BcsInstanceV1ApiCreateInstanceModelInstanceModel
type BcsInstanceV1ApiCreateInstanceModelInstanceModel struct {
	// 생성된 인스턴스의 ID
	Id string `json:"id"`
	// 인스턴스에 적용된 보안 그룹 목록
	SecurityGroups []CreateInstanceSecurityGroupModel `json:"security_groups"`
	AdminPass      NullableString                     `json:"admin_pass,omitempty"`
	// 디스크 설정 방식
	DiskConfig           string `json:"disk_config"`
	AdditionalProperties map[string]interface{}
}

type _BcsInstanceV1ApiCreateInstanceModelInstanceModel BcsInstanceV1ApiCreateInstanceModelInstanceModel

// NewBcsInstanceV1ApiCreateInstanceModelInstanceModel instantiates a new BcsInstanceV1ApiCreateInstanceModelInstanceModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBcsInstanceV1ApiCreateInstanceModelInstanceModel(id string, securityGroups []CreateInstanceSecurityGroupModel, diskConfig string) *BcsInstanceV1ApiCreateInstanceModelInstanceModel {
	this := BcsInstanceV1ApiCreateInstanceModelInstanceModel{}
	this.Id = id
	this.SecurityGroups = securityGroups
	this.DiskConfig = diskConfig
	return &this
}

// NewBcsInstanceV1ApiCreateInstanceModelInstanceModelWithDefaults instantiates a new BcsInstanceV1ApiCreateInstanceModelInstanceModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBcsInstanceV1ApiCreateInstanceModelInstanceModelWithDefaults() *BcsInstanceV1ApiCreateInstanceModelInstanceModel {
	this := BcsInstanceV1ApiCreateInstanceModelInstanceModel{}
	return &this
}

// GetId returns the Id field value
func (o *BcsInstanceV1ApiCreateInstanceModelInstanceModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BcsInstanceV1ApiCreateInstanceModelInstanceModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BcsInstanceV1ApiCreateInstanceModelInstanceModel) SetId(v string) {
	o.Id = v
}

// GetSecurityGroups returns the SecurityGroups field value
func (o *BcsInstanceV1ApiCreateInstanceModelInstanceModel) GetSecurityGroups() []CreateInstanceSecurityGroupModel {
	if o == nil {
		var ret []CreateInstanceSecurityGroupModel
		return ret
	}

	return o.SecurityGroups
}

// GetSecurityGroupsOk returns a tuple with the SecurityGroups field value
// and a boolean to check if the value has been set.
func (o *BcsInstanceV1ApiCreateInstanceModelInstanceModel) GetSecurityGroupsOk() ([]CreateInstanceSecurityGroupModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.SecurityGroups, true
}

// SetSecurityGroups sets field value
func (o *BcsInstanceV1ApiCreateInstanceModelInstanceModel) SetSecurityGroups(v []CreateInstanceSecurityGroupModel) {
	o.SecurityGroups = v
}

// GetAdminPass returns the AdminPass field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiCreateInstanceModelInstanceModel) GetAdminPass() string {
	if o == nil || IsNil(o.AdminPass.Get()) {
		var ret string
		return ret
	}
	return *o.AdminPass.Get()
}

// GetAdminPassOk returns a tuple with the AdminPass field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiCreateInstanceModelInstanceModel) GetAdminPassOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AdminPass.Get(), o.AdminPass.IsSet()
}

// HasAdminPass returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiCreateInstanceModelInstanceModel) HasAdminPass() bool {
	if o != nil && o.AdminPass.IsSet() {
		return true
	}

	return false
}

// SetAdminPass gets a reference to the given NullableString and assigns it to the AdminPass field.
func (o *BcsInstanceV1ApiCreateInstanceModelInstanceModel) SetAdminPass(v string) {
	o.AdminPass.Set(&v)
}

// SetAdminPassNil sets the value for AdminPass to be an explicit nil
func (o *BcsInstanceV1ApiCreateInstanceModelInstanceModel) SetAdminPassNil() {
	o.AdminPass.Set(nil)
}

// UnsetAdminPass ensures that no value is present for AdminPass, not even an explicit nil
func (o *BcsInstanceV1ApiCreateInstanceModelInstanceModel) UnsetAdminPass() {
	o.AdminPass.Unset()
}

// GetDiskConfig returns the DiskConfig field value
func (o *BcsInstanceV1ApiCreateInstanceModelInstanceModel) GetDiskConfig() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DiskConfig
}

// GetDiskConfigOk returns a tuple with the DiskConfig field value
// and a boolean to check if the value has been set.
func (o *BcsInstanceV1ApiCreateInstanceModelInstanceModel) GetDiskConfigOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiskConfig, true
}

// SetDiskConfig sets field value
func (o *BcsInstanceV1ApiCreateInstanceModelInstanceModel) SetDiskConfig(v string) {
	o.DiskConfig = v
}

func (o BcsInstanceV1ApiCreateInstanceModelInstanceModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BcsInstanceV1ApiCreateInstanceModelInstanceModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["security_groups"] = o.SecurityGroups
	if o.AdminPass.IsSet() {
		toSerialize["admin_pass"] = o.AdminPass.Get()
	}
	toSerialize["disk_config"] = o.DiskConfig

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BcsInstanceV1ApiCreateInstanceModelInstanceModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"security_groups",
		"disk_config",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBcsInstanceV1ApiCreateInstanceModelInstanceModel := _BcsInstanceV1ApiCreateInstanceModelInstanceModel{}

	err = json.Unmarshal(data, &varBcsInstanceV1ApiCreateInstanceModelInstanceModel)

	if err != nil {
		return err
	}

	*o = BcsInstanceV1ApiCreateInstanceModelInstanceModel(varBcsInstanceV1ApiCreateInstanceModelInstanceModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "security_groups")
		delete(additionalProperties, "admin_pass")
		delete(additionalProperties, "disk_config")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBcsInstanceV1ApiCreateInstanceModelInstanceModel struct {
	value *BcsInstanceV1ApiCreateInstanceModelInstanceModel
	isSet bool
}

func (v NullableBcsInstanceV1ApiCreateInstanceModelInstanceModel) Get() *BcsInstanceV1ApiCreateInstanceModelInstanceModel {
	return v.value
}

func (v *NullableBcsInstanceV1ApiCreateInstanceModelInstanceModel) Set(val *BcsInstanceV1ApiCreateInstanceModelInstanceModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBcsInstanceV1ApiCreateInstanceModelInstanceModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBcsInstanceV1ApiCreateInstanceModelInstanceModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBcsInstanceV1ApiCreateInstanceModelInstanceModel(val *BcsInstanceV1ApiCreateInstanceModelInstanceModel) *NullableBcsInstanceV1ApiCreateInstanceModelInstanceModel {
	return &NullableBcsInstanceV1ApiCreateInstanceModelInstanceModel{value: val, isSet: true}
}

func (v NullableBcsInstanceV1ApiCreateInstanceModelInstanceModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBcsInstanceV1ApiCreateInstanceModelInstanceModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
