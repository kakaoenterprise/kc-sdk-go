/*
Beyond Compute Service(BCS) API

Beyond Compute Service API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bcs

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the BcsInstanceV1ApiGetInstanceModelInstanceImageModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BcsInstanceV1ApiGetInstanceModelInstanceImageModel{}

// BcsInstanceV1ApiGetInstanceModelInstanceImageModel struct for BcsInstanceV1ApiGetInstanceModelInstanceImageModel
type BcsInstanceV1ApiGetInstanceModelInstanceImageModel struct {
	// 이미지의 고유 ID
	Id                   string               `json:"id"`
	Name                 NullableString       `json:"name,omitempty"`
	Description          NullableString       `json:"description,omitempty"`
	Owner                NullableString       `json:"owner,omitempty"`
	IsWindows            NullableBool         `json:"is_windows,omitempty"`
	Size                 NullableInt64        `json:"size,omitempty"`
	Status               NullableString       `json:"status,omitempty"`
	ImageType            NullableString       `json:"image_type,omitempty"`
	DiskFormat           NullableString       `json:"disk_format,omitempty"`
	InstanceType         NullableInstanceType `json:"instance_type,omitempty"`
	MemberStatus         NullableString       `json:"member_status,omitempty"`
	MinDisk              NullableInt32        `json:"min_disk,omitempty"`
	MinMemory            NullableInt32        `json:"min_memory,omitempty"`
	OsAdmin              NullableString       `json:"os_admin,omitempty"`
	OsDistro             NullableString       `json:"os_distro,omitempty"`
	OsType               NullableString       `json:"os_type,omitempty"`
	OsArchitecture       NullableString       `json:"os_architecture,omitempty"`
	CreatedAt            NullableTime         `json:"created_at,omitempty"`
	UpdatedAt            NullableTime         `json:"updated_at,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BcsInstanceV1ApiGetInstanceModelInstanceImageModel BcsInstanceV1ApiGetInstanceModelInstanceImageModel

// NewBcsInstanceV1ApiGetInstanceModelInstanceImageModel instantiates a new BcsInstanceV1ApiGetInstanceModelInstanceImageModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBcsInstanceV1ApiGetInstanceModelInstanceImageModel(id string) *BcsInstanceV1ApiGetInstanceModelInstanceImageModel {
	this := BcsInstanceV1ApiGetInstanceModelInstanceImageModel{}
	this.Id = id
	return &this
}

// NewBcsInstanceV1ApiGetInstanceModelInstanceImageModelWithDefaults instantiates a new BcsInstanceV1ApiGetInstanceModelInstanceImageModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBcsInstanceV1ApiGetInstanceModelInstanceImageModelWithDefaults() *BcsInstanceV1ApiGetInstanceModelInstanceImageModel {
	this := BcsInstanceV1ApiGetInstanceModelInstanceImageModel{}
	return &this
}

// GetId returns the Id field value
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) UnsetName() {
	o.Name.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) UnsetDescription() {
	o.Description.Unset()
}

// GetOwner returns the Owner field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetOwner() string {
	if o == nil || IsNil(o.Owner.Get()) {
		var ret string
		return ret
	}
	return *o.Owner.Get()
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetOwnerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Owner.Get(), o.Owner.IsSet()
}

// HasOwner returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) HasOwner() bool {
	if o != nil && o.Owner.IsSet() {
		return true
	}

	return false
}

// SetOwner gets a reference to the given NullableString and assigns it to the Owner field.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetOwner(v string) {
	o.Owner.Set(&v)
}

// SetOwnerNil sets the value for Owner to be an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetOwnerNil() {
	o.Owner.Set(nil)
}

// UnsetOwner ensures that no value is present for Owner, not even an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) UnsetOwner() {
	o.Owner.Unset()
}

// GetIsWindows returns the IsWindows field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetIsWindows() bool {
	if o == nil || IsNil(o.IsWindows.Get()) {
		var ret bool
		return ret
	}
	return *o.IsWindows.Get()
}

// GetIsWindowsOk returns a tuple with the IsWindows field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetIsWindowsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsWindows.Get(), o.IsWindows.IsSet()
}

// HasIsWindows returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) HasIsWindows() bool {
	if o != nil && o.IsWindows.IsSet() {
		return true
	}

	return false
}

// SetIsWindows gets a reference to the given NullableBool and assigns it to the IsWindows field.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetIsWindows(v bool) {
	o.IsWindows.Set(&v)
}

// SetIsWindowsNil sets the value for IsWindows to be an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetIsWindowsNil() {
	o.IsWindows.Set(nil)
}

// UnsetIsWindows ensures that no value is present for IsWindows, not even an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) UnsetIsWindows() {
	o.IsWindows.Unset()
}

// GetSize returns the Size field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetSize() int64 {
	if o == nil || IsNil(o.Size.Get()) {
		var ret int64
		return ret
	}
	return *o.Size.Get()
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Size.Get(), o.Size.IsSet()
}

// HasSize returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) HasSize() bool {
	if o != nil && o.Size.IsSet() {
		return true
	}

	return false
}

// SetSize gets a reference to the given NullableInt64 and assigns it to the Size field.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetSize(v int64) {
	o.Size.Set(&v)
}

// SetSizeNil sets the value for Size to be an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetSizeNil() {
	o.Size.Set(nil)
}

// UnsetSize ensures that no value is present for Size, not even an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) UnsetSize() {
	o.Size.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetStatus(v string) {
	o.Status.Set(&v)
}

// SetStatusNil sets the value for Status to be an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) UnsetStatus() {
	o.Status.Unset()
}

// GetImageType returns the ImageType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetImageType() string {
	if o == nil || IsNil(o.ImageType.Get()) {
		var ret string
		return ret
	}
	return *o.ImageType.Get()
}

// GetImageTypeOk returns a tuple with the ImageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetImageTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageType.Get(), o.ImageType.IsSet()
}

// HasImageType returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) HasImageType() bool {
	if o != nil && o.ImageType.IsSet() {
		return true
	}

	return false
}

// SetImageType gets a reference to the given NullableString and assigns it to the ImageType field.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetImageType(v string) {
	o.ImageType.Set(&v)
}

// SetImageTypeNil sets the value for ImageType to be an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetImageTypeNil() {
	o.ImageType.Set(nil)
}

// UnsetImageType ensures that no value is present for ImageType, not even an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) UnsetImageType() {
	o.ImageType.Unset()
}

// GetDiskFormat returns the DiskFormat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetDiskFormat() string {
	if o == nil || IsNil(o.DiskFormat.Get()) {
		var ret string
		return ret
	}
	return *o.DiskFormat.Get()
}

// GetDiskFormatOk returns a tuple with the DiskFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetDiskFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DiskFormat.Get(), o.DiskFormat.IsSet()
}

// HasDiskFormat returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) HasDiskFormat() bool {
	if o != nil && o.DiskFormat.IsSet() {
		return true
	}

	return false
}

// SetDiskFormat gets a reference to the given NullableString and assigns it to the DiskFormat field.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetDiskFormat(v string) {
	o.DiskFormat.Set(&v)
}

// SetDiskFormatNil sets the value for DiskFormat to be an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetDiskFormatNil() {
	o.DiskFormat.Set(nil)
}

// UnsetDiskFormat ensures that no value is present for DiskFormat, not even an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) UnsetDiskFormat() {
	o.DiskFormat.Unset()
}

// GetInstanceType returns the InstanceType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetInstanceType() InstanceType {
	if o == nil || IsNil(o.InstanceType.Get()) {
		var ret InstanceType
		return ret
	}
	return *o.InstanceType.Get()
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetInstanceTypeOk() (*InstanceType, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstanceType.Get(), o.InstanceType.IsSet()
}

// HasInstanceType returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) HasInstanceType() bool {
	if o != nil && o.InstanceType.IsSet() {
		return true
	}

	return false
}

// SetInstanceType gets a reference to the given NullableInstanceType and assigns it to the InstanceType field.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetInstanceType(v InstanceType) {
	o.InstanceType.Set(&v)
}

// SetInstanceTypeNil sets the value for InstanceType to be an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetInstanceTypeNil() {
	o.InstanceType.Set(nil)
}

// UnsetInstanceType ensures that no value is present for InstanceType, not even an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) UnsetInstanceType() {
	o.InstanceType.Unset()
}

// GetMemberStatus returns the MemberStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetMemberStatus() string {
	if o == nil || IsNil(o.MemberStatus.Get()) {
		var ret string
		return ret
	}
	return *o.MemberStatus.Get()
}

// GetMemberStatusOk returns a tuple with the MemberStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetMemberStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MemberStatus.Get(), o.MemberStatus.IsSet()
}

// HasMemberStatus returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) HasMemberStatus() bool {
	if o != nil && o.MemberStatus.IsSet() {
		return true
	}

	return false
}

// SetMemberStatus gets a reference to the given NullableString and assigns it to the MemberStatus field.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetMemberStatus(v string) {
	o.MemberStatus.Set(&v)
}

// SetMemberStatusNil sets the value for MemberStatus to be an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetMemberStatusNil() {
	o.MemberStatus.Set(nil)
}

// UnsetMemberStatus ensures that no value is present for MemberStatus, not even an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) UnsetMemberStatus() {
	o.MemberStatus.Unset()
}

// GetMinDisk returns the MinDisk field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetMinDisk() int32 {
	if o == nil || IsNil(o.MinDisk.Get()) {
		var ret int32
		return ret
	}
	return *o.MinDisk.Get()
}

// GetMinDiskOk returns a tuple with the MinDisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetMinDiskOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinDisk.Get(), o.MinDisk.IsSet()
}

// HasMinDisk returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) HasMinDisk() bool {
	if o != nil && o.MinDisk.IsSet() {
		return true
	}

	return false
}

// SetMinDisk gets a reference to the given NullableInt32 and assigns it to the MinDisk field.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetMinDisk(v int32) {
	o.MinDisk.Set(&v)
}

// SetMinDiskNil sets the value for MinDisk to be an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetMinDiskNil() {
	o.MinDisk.Set(nil)
}

// UnsetMinDisk ensures that no value is present for MinDisk, not even an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) UnsetMinDisk() {
	o.MinDisk.Unset()
}

// GetMinMemory returns the MinMemory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetMinMemory() int32 {
	if o == nil || IsNil(o.MinMemory.Get()) {
		var ret int32
		return ret
	}
	return *o.MinMemory.Get()
}

// GetMinMemoryOk returns a tuple with the MinMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetMinMemoryOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinMemory.Get(), o.MinMemory.IsSet()
}

// HasMinMemory returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) HasMinMemory() bool {
	if o != nil && o.MinMemory.IsSet() {
		return true
	}

	return false
}

// SetMinMemory gets a reference to the given NullableInt32 and assigns it to the MinMemory field.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetMinMemory(v int32) {
	o.MinMemory.Set(&v)
}

// SetMinMemoryNil sets the value for MinMemory to be an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetMinMemoryNil() {
	o.MinMemory.Set(nil)
}

// UnsetMinMemory ensures that no value is present for MinMemory, not even an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) UnsetMinMemory() {
	o.MinMemory.Unset()
}

// GetOsAdmin returns the OsAdmin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetOsAdmin() string {
	if o == nil || IsNil(o.OsAdmin.Get()) {
		var ret string
		return ret
	}
	return *o.OsAdmin.Get()
}

// GetOsAdminOk returns a tuple with the OsAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetOsAdminOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OsAdmin.Get(), o.OsAdmin.IsSet()
}

// HasOsAdmin returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) HasOsAdmin() bool {
	if o != nil && o.OsAdmin.IsSet() {
		return true
	}

	return false
}

// SetOsAdmin gets a reference to the given NullableString and assigns it to the OsAdmin field.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetOsAdmin(v string) {
	o.OsAdmin.Set(&v)
}

// SetOsAdminNil sets the value for OsAdmin to be an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetOsAdminNil() {
	o.OsAdmin.Set(nil)
}

// UnsetOsAdmin ensures that no value is present for OsAdmin, not even an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) UnsetOsAdmin() {
	o.OsAdmin.Unset()
}

// GetOsDistro returns the OsDistro field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetOsDistro() string {
	if o == nil || IsNil(o.OsDistro.Get()) {
		var ret string
		return ret
	}
	return *o.OsDistro.Get()
}

// GetOsDistroOk returns a tuple with the OsDistro field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetOsDistroOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OsDistro.Get(), o.OsDistro.IsSet()
}

// HasOsDistro returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) HasOsDistro() bool {
	if o != nil && o.OsDistro.IsSet() {
		return true
	}

	return false
}

// SetOsDistro gets a reference to the given NullableString and assigns it to the OsDistro field.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetOsDistro(v string) {
	o.OsDistro.Set(&v)
}

// SetOsDistroNil sets the value for OsDistro to be an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetOsDistroNil() {
	o.OsDistro.Set(nil)
}

// UnsetOsDistro ensures that no value is present for OsDistro, not even an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) UnsetOsDistro() {
	o.OsDistro.Unset()
}

// GetOsType returns the OsType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetOsType() string {
	if o == nil || IsNil(o.OsType.Get()) {
		var ret string
		return ret
	}
	return *o.OsType.Get()
}

// GetOsTypeOk returns a tuple with the OsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetOsTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OsType.Get(), o.OsType.IsSet()
}

// HasOsType returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) HasOsType() bool {
	if o != nil && o.OsType.IsSet() {
		return true
	}

	return false
}

// SetOsType gets a reference to the given NullableString and assigns it to the OsType field.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetOsType(v string) {
	o.OsType.Set(&v)
}

// SetOsTypeNil sets the value for OsType to be an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetOsTypeNil() {
	o.OsType.Set(nil)
}

// UnsetOsType ensures that no value is present for OsType, not even an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) UnsetOsType() {
	o.OsType.Unset()
}

// GetOsArchitecture returns the OsArchitecture field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetOsArchitecture() string {
	if o == nil || IsNil(o.OsArchitecture.Get()) {
		var ret string
		return ret
	}
	return *o.OsArchitecture.Get()
}

// GetOsArchitectureOk returns a tuple with the OsArchitecture field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetOsArchitectureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OsArchitecture.Get(), o.OsArchitecture.IsSet()
}

// HasOsArchitecture returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) HasOsArchitecture() bool {
	if o != nil && o.OsArchitecture.IsSet() {
		return true
	}

	return false
}

// SetOsArchitecture gets a reference to the given NullableString and assigns it to the OsArchitecture field.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetOsArchitecture(v string) {
	o.OsArchitecture.Set(&v)
}

// SetOsArchitectureNil sets the value for OsArchitecture to be an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetOsArchitectureNil() {
	o.OsArchitecture.Set(nil)
}

// UnsetOsArchitecture ensures that no value is present for OsArchitecture, not even an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) UnsetOsArchitecture() {
	o.OsArchitecture.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given NullableTime and assigns it to the CreatedAt field.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetCreatedAt(v time.Time) {
	o.CreatedAt.Set(&v)
}

// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetCreatedAtNil() {
	o.CreatedAt.Set(nil)
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableTime and assigns it to the UpdatedAt field.
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetUpdatedAt(v time.Time) {
	o.UpdatedAt.Set(&v)
}

// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) SetUpdatedAtNil() {
	o.UpdatedAt.Set(nil)
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

func (o BcsInstanceV1ApiGetInstanceModelInstanceImageModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BcsInstanceV1ApiGetInstanceModelInstanceImageModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Owner.IsSet() {
		toSerialize["owner"] = o.Owner.Get()
	}
	if o.IsWindows.IsSet() {
		toSerialize["is_windows"] = o.IsWindows.Get()
	}
	if o.Size.IsSet() {
		toSerialize["size"] = o.Size.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.ImageType.IsSet() {
		toSerialize["image_type"] = o.ImageType.Get()
	}
	if o.DiskFormat.IsSet() {
		toSerialize["disk_format"] = o.DiskFormat.Get()
	}
	if o.InstanceType.IsSet() {
		toSerialize["instance_type"] = o.InstanceType.Get()
	}
	if o.MemberStatus.IsSet() {
		toSerialize["member_status"] = o.MemberStatus.Get()
	}
	if o.MinDisk.IsSet() {
		toSerialize["min_disk"] = o.MinDisk.Get()
	}
	if o.MinMemory.IsSet() {
		toSerialize["min_memory"] = o.MinMemory.Get()
	}
	if o.OsAdmin.IsSet() {
		toSerialize["os_admin"] = o.OsAdmin.Get()
	}
	if o.OsDistro.IsSet() {
		toSerialize["os_distro"] = o.OsDistro.Get()
	}
	if o.OsType.IsSet() {
		toSerialize["os_type"] = o.OsType.Get()
	}
	if o.OsArchitecture.IsSet() {
		toSerialize["os_architecture"] = o.OsArchitecture.Get()
	}
	if o.CreatedAt.IsSet() {
		toSerialize["created_at"] = o.CreatedAt.Get()
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["updated_at"] = o.UpdatedAt.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBcsInstanceV1ApiGetInstanceModelInstanceImageModel := _BcsInstanceV1ApiGetInstanceModelInstanceImageModel{}

	err = json.Unmarshal(data, &varBcsInstanceV1ApiGetInstanceModelInstanceImageModel)

	if err != nil {
		return err
	}

	*o = BcsInstanceV1ApiGetInstanceModelInstanceImageModel(varBcsInstanceV1ApiGetInstanceModelInstanceImageModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "owner")
		delete(additionalProperties, "is_windows")
		delete(additionalProperties, "size")
		delete(additionalProperties, "status")
		delete(additionalProperties, "image_type")
		delete(additionalProperties, "disk_format")
		delete(additionalProperties, "instance_type")
		delete(additionalProperties, "member_status")
		delete(additionalProperties, "min_disk")
		delete(additionalProperties, "min_memory")
		delete(additionalProperties, "os_admin")
		delete(additionalProperties, "os_distro")
		delete(additionalProperties, "os_type")
		delete(additionalProperties, "os_architecture")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBcsInstanceV1ApiGetInstanceModelInstanceImageModel struct {
	value *BcsInstanceV1ApiGetInstanceModelInstanceImageModel
	isSet bool
}

func (v NullableBcsInstanceV1ApiGetInstanceModelInstanceImageModel) Get() *BcsInstanceV1ApiGetInstanceModelInstanceImageModel {
	return v.value
}

func (v *NullableBcsInstanceV1ApiGetInstanceModelInstanceImageModel) Set(val *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBcsInstanceV1ApiGetInstanceModelInstanceImageModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBcsInstanceV1ApiGetInstanceModelInstanceImageModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBcsInstanceV1ApiGetInstanceModelInstanceImageModel(val *BcsInstanceV1ApiGetInstanceModelInstanceImageModel) *NullableBcsInstanceV1ApiGetInstanceModelInstanceImageModel {
	return &NullableBcsInstanceV1ApiGetInstanceModelInstanceImageModel{value: val, isSet: true}
}

func (v NullableBcsInstanceV1ApiGetInstanceModelInstanceImageModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBcsInstanceV1ApiGetInstanceModelInstanceImageModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
