/*
Beyond Compute Service(BCS) API

Beyond Compute Service API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bcs

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel{}

// BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel struct for BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel
type BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel struct {
	// 인스턴스에 연결된 볼륨의 ID
	Id         string         `json:"id"`
	Name       NullableString `json:"name,omitempty"`
	Status     NullableString `json:"status,omitempty"`
	MountPoint NullableString `json:"mount_point,omitempty"`
	Type       NullableString `json:"type,omitempty"`
	// 볼륨의 크기(GB 단위)
	Size                  int32        `json:"size"`
	IsDeleteOnTermination NullableBool `json:"is_delete_on_termination,omitempty"`
	CreatedAt             NullableTime `json:"created_at,omitempty"`
	IsRoot                NullableBool `json:"is_root,omitempty"`
	AdditionalProperties  map[string]interface{}
}

type _BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel

// NewBcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel instantiates a new BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel(id string, size int32) *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel {
	this := BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel{}
	this.Id = id
	this.Size = size
	return &this
}

// NewBcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModelWithDefaults instantiates a new BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModelWithDefaults() *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel {
	this := BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel{}
	return &this
}

// GetId returns the Id field value
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) UnsetName() {
	o.Name.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) SetStatus(v string) {
	o.Status.Set(&v)
}

// SetStatusNil sets the value for Status to be an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) UnsetStatus() {
	o.Status.Unset()
}

// GetMountPoint returns the MountPoint field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) GetMountPoint() string {
	if o == nil || IsNil(o.MountPoint.Get()) {
		var ret string
		return ret
	}
	return *o.MountPoint.Get()
}

// GetMountPointOk returns a tuple with the MountPoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) GetMountPointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MountPoint.Get(), o.MountPoint.IsSet()
}

// HasMountPoint returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) HasMountPoint() bool {
	if o != nil && o.MountPoint.IsSet() {
		return true
	}

	return false
}

// SetMountPoint gets a reference to the given NullableString and assigns it to the MountPoint field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) SetMountPoint(v string) {
	o.MountPoint.Set(&v)
}

// SetMountPointNil sets the value for MountPoint to be an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) SetMountPointNil() {
	o.MountPoint.Set(nil)
}

// UnsetMountPoint ensures that no value is present for MountPoint, not even an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) UnsetMountPoint() {
	o.MountPoint.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) SetType(v string) {
	o.Type.Set(&v)
}

// SetTypeNil sets the value for Type to be an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) UnsetType() {
	o.Type.Unset()
}

// GetSize returns the Size field value
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) GetSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) GetSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) SetSize(v int32) {
	o.Size = v
}

// GetIsDeleteOnTermination returns the IsDeleteOnTermination field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) GetIsDeleteOnTermination() bool {
	if o == nil || IsNil(o.IsDeleteOnTermination.Get()) {
		var ret bool
		return ret
	}
	return *o.IsDeleteOnTermination.Get()
}

// GetIsDeleteOnTerminationOk returns a tuple with the IsDeleteOnTermination field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) GetIsDeleteOnTerminationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsDeleteOnTermination.Get(), o.IsDeleteOnTermination.IsSet()
}

// HasIsDeleteOnTermination returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) HasIsDeleteOnTermination() bool {
	if o != nil && o.IsDeleteOnTermination.IsSet() {
		return true
	}

	return false
}

// SetIsDeleteOnTermination gets a reference to the given NullableBool and assigns it to the IsDeleteOnTermination field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) SetIsDeleteOnTermination(v bool) {
	o.IsDeleteOnTermination.Set(&v)
}

// SetIsDeleteOnTerminationNil sets the value for IsDeleteOnTermination to be an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) SetIsDeleteOnTerminationNil() {
	o.IsDeleteOnTermination.Set(nil)
}

// UnsetIsDeleteOnTermination ensures that no value is present for IsDeleteOnTermination, not even an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) UnsetIsDeleteOnTermination() {
	o.IsDeleteOnTermination.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given NullableTime and assigns it to the CreatedAt field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) SetCreatedAt(v time.Time) {
	o.CreatedAt.Set(&v)
}

// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) SetCreatedAtNil() {
	o.CreatedAt.Set(nil)
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetIsRoot returns the IsRoot field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) GetIsRoot() bool {
	if o == nil || IsNil(o.IsRoot.Get()) {
		var ret bool
		return ret
	}
	return *o.IsRoot.Get()
}

// GetIsRootOk returns a tuple with the IsRoot field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) GetIsRootOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsRoot.Get(), o.IsRoot.IsSet()
}

// HasIsRoot returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) HasIsRoot() bool {
	if o != nil && o.IsRoot.IsSet() {
		return true
	}

	return false
}

// SetIsRoot gets a reference to the given NullableBool and assigns it to the IsRoot field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) SetIsRoot(v bool) {
	o.IsRoot.Set(&v)
}

// SetIsRootNil sets the value for IsRoot to be an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) SetIsRootNil() {
	o.IsRoot.Set(nil)
}

// UnsetIsRoot ensures that no value is present for IsRoot, not even an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) UnsetIsRoot() {
	o.IsRoot.Unset()
}

func (o BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.MountPoint.IsSet() {
		toSerialize["mount_point"] = o.MountPoint.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	toSerialize["size"] = o.Size
	if o.IsDeleteOnTermination.IsSet() {
		toSerialize["is_delete_on_termination"] = o.IsDeleteOnTermination.Get()
	}
	if o.CreatedAt.IsSet() {
		toSerialize["created_at"] = o.CreatedAt.Get()
	}
	if o.IsRoot.IsSet() {
		toSerialize["is_root"] = o.IsRoot.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"size",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel := _BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel{}

	err = json.Unmarshal(data, &varBcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel)

	if err != nil {
		return err
	}

	*o = BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel(varBcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "status")
		delete(additionalProperties, "mount_point")
		delete(additionalProperties, "type")
		delete(additionalProperties, "size")
		delete(additionalProperties, "is_delete_on_termination")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "is_root")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel struct {
	value *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel
	isSet bool
}

func (v NullableBcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) Get() *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel {
	return v.value
}

func (v *NullableBcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) Set(val *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel(val *BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) *NullableBcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel {
	return &NullableBcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel{value: val, isSet: true}
}

func (v NullableBcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
