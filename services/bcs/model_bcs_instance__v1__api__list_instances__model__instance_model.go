/*
Beyond Compute Service(BCS) API

Beyond Compute Service API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bcs

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the BcsInstanceV1ApiListInstancesModelInstanceModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BcsInstanceV1ApiListInstancesModelInstanceModel{}

// BcsInstanceV1ApiListInstancesModelInstanceModel struct for BcsInstanceV1ApiListInstancesModelInstanceModel
type BcsInstanceV1ApiListInstancesModelInstanceModel struct {
	// 인스턴스의 ID
	Id                   string                                                          `json:"id"`
	Name                 NullableString                                                  `json:"name,omitempty"`
	Description          NullableString                                                  `json:"description,omitempty"`
	Metadata             map[string]string                                               `json:"metadata,omitempty"`
	Flavor               NullableBcsInstanceV1ApiListInstancesModelInstanceFlavorModel   `json:"flavor,omitempty"`
	Addresses            []BcsInstanceV1ApiListInstancesModelInstanceAddressModel        `json:"addresses,omitempty"`
	IsHyperThreading     NullableBool                                                    `json:"is_hyper_threading,omitempty"`
	IsHadoop             NullableBool                                                    `json:"is_hadoop,omitempty"`
	IsK8se               NullableBool                                                    `json:"is_k8se,omitempty"`
	Image                NullableBcsInstanceV1ApiListInstancesModelInstanceImageModel    `json:"image,omitempty"`
	VmState              NullableString                                                  `json:"vm_state,omitempty"`
	TaskState            NullableString                                                  `json:"task_state,omitempty"`
	PowerState           NullablePowerState                                              `json:"power_state,omitempty"`
	Status               NullableString                                                  `json:"status,omitempty"`
	UserId               NullableString                                                  `json:"user_id,omitempty"`
	ProjectId            NullableString                                                  `json:"project_id,omitempty"`
	KeyName              NullableString                                                  `json:"key_name,omitempty"`
	Hostname             NullableString                                                  `json:"hostname,omitempty"`
	AvailabilityZone     NullableAvailabilityZone                                        `json:"availability_zone,omitempty"`
	AttachedVolumes      []BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel `json:"attached_volumes,omitempty"`
	AttachedVolumeCount  NullableInt64                                                   `json:"attached_volume_count,omitempty"`
	SecurityGroups       []BcsInstanceV1ApiListInstancesModelInstanceSecurityGroupModel  `json:"security_groups,omitempty"`
	SecurityGroupCount   NullableInt64                                                   `json:"security_group_count,omitempty"`
	InstanceType         NullableString                                                  `json:"instance_type,omitempty"`
	CreatedAt            NullableTime                                                    `json:"created_at,omitempty"`
	UpdatedAt            NullableTime                                                    `json:"updated_at,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BcsInstanceV1ApiListInstancesModelInstanceModel BcsInstanceV1ApiListInstancesModelInstanceModel

// NewBcsInstanceV1ApiListInstancesModelInstanceModel instantiates a new BcsInstanceV1ApiListInstancesModelInstanceModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBcsInstanceV1ApiListInstancesModelInstanceModel(id string) *BcsInstanceV1ApiListInstancesModelInstanceModel {
	this := BcsInstanceV1ApiListInstancesModelInstanceModel{}
	this.Id = id
	return &this
}

// NewBcsInstanceV1ApiListInstancesModelInstanceModelWithDefaults instantiates a new BcsInstanceV1ApiListInstancesModelInstanceModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBcsInstanceV1ApiListInstancesModelInstanceModelWithDefaults() *BcsInstanceV1ApiListInstancesModelInstanceModel {
	this := BcsInstanceV1ApiListInstancesModelInstanceModel{}
	return &this
}

// GetId returns the Id field value
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) UnsetName() {
	o.Name.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) UnsetDescription() {
	o.Description.Unset()
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetMetadata() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetMetadataOk() (map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]string{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetMetadata(v map[string]string) {
	o.Metadata = v
}

// GetFlavor returns the Flavor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetFlavor() BcsInstanceV1ApiListInstancesModelInstanceFlavorModel {
	if o == nil || IsNil(o.Flavor.Get()) {
		var ret BcsInstanceV1ApiListInstancesModelInstanceFlavorModel
		return ret
	}
	return *o.Flavor.Get()
}

// GetFlavorOk returns a tuple with the Flavor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetFlavorOk() (*BcsInstanceV1ApiListInstancesModelInstanceFlavorModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Flavor.Get(), o.Flavor.IsSet()
}

// HasFlavor returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) HasFlavor() bool {
	if o != nil && o.Flavor.IsSet() {
		return true
	}

	return false
}

// SetFlavor gets a reference to the given NullableBcsInstanceV1ApiListInstancesModelInstanceFlavorModel and assigns it to the Flavor field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetFlavor(v BcsInstanceV1ApiListInstancesModelInstanceFlavorModel) {
	o.Flavor.Set(&v)
}

// SetFlavorNil sets the value for Flavor to be an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetFlavorNil() {
	o.Flavor.Set(nil)
}

// UnsetFlavor ensures that no value is present for Flavor, not even an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) UnsetFlavor() {
	o.Flavor.Unset()
}

// GetAddresses returns the Addresses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetAddresses() []BcsInstanceV1ApiListInstancesModelInstanceAddressModel {
	if o == nil {
		var ret []BcsInstanceV1ApiListInstancesModelInstanceAddressModel
		return ret
	}
	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetAddressesOk() ([]BcsInstanceV1ApiListInstancesModelInstanceAddressModel, bool) {
	if o == nil || IsNil(o.Addresses) {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) HasAddresses() bool {
	if o != nil && !IsNil(o.Addresses) {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []BcsInstanceV1ApiListInstancesModelInstanceAddressModel and assigns it to the Addresses field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetAddresses(v []BcsInstanceV1ApiListInstancesModelInstanceAddressModel) {
	o.Addresses = v
}

// GetIsHyperThreading returns the IsHyperThreading field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetIsHyperThreading() bool {
	if o == nil || IsNil(o.IsHyperThreading.Get()) {
		var ret bool
		return ret
	}
	return *o.IsHyperThreading.Get()
}

// GetIsHyperThreadingOk returns a tuple with the IsHyperThreading field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetIsHyperThreadingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsHyperThreading.Get(), o.IsHyperThreading.IsSet()
}

// HasIsHyperThreading returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) HasIsHyperThreading() bool {
	if o != nil && o.IsHyperThreading.IsSet() {
		return true
	}

	return false
}

// SetIsHyperThreading gets a reference to the given NullableBool and assigns it to the IsHyperThreading field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetIsHyperThreading(v bool) {
	o.IsHyperThreading.Set(&v)
}

// SetIsHyperThreadingNil sets the value for IsHyperThreading to be an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetIsHyperThreadingNil() {
	o.IsHyperThreading.Set(nil)
}

// UnsetIsHyperThreading ensures that no value is present for IsHyperThreading, not even an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) UnsetIsHyperThreading() {
	o.IsHyperThreading.Unset()
}

// GetIsHadoop returns the IsHadoop field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetIsHadoop() bool {
	if o == nil || IsNil(o.IsHadoop.Get()) {
		var ret bool
		return ret
	}
	return *o.IsHadoop.Get()
}

// GetIsHadoopOk returns a tuple with the IsHadoop field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetIsHadoopOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsHadoop.Get(), o.IsHadoop.IsSet()
}

// HasIsHadoop returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) HasIsHadoop() bool {
	if o != nil && o.IsHadoop.IsSet() {
		return true
	}

	return false
}

// SetIsHadoop gets a reference to the given NullableBool and assigns it to the IsHadoop field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetIsHadoop(v bool) {
	o.IsHadoop.Set(&v)
}

// SetIsHadoopNil sets the value for IsHadoop to be an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetIsHadoopNil() {
	o.IsHadoop.Set(nil)
}

// UnsetIsHadoop ensures that no value is present for IsHadoop, not even an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) UnsetIsHadoop() {
	o.IsHadoop.Unset()
}

// GetIsK8se returns the IsK8se field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetIsK8se() bool {
	if o == nil || IsNil(o.IsK8se.Get()) {
		var ret bool
		return ret
	}
	return *o.IsK8se.Get()
}

// GetIsK8seOk returns a tuple with the IsK8se field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetIsK8seOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsK8se.Get(), o.IsK8se.IsSet()
}

// HasIsK8se returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) HasIsK8se() bool {
	if o != nil && o.IsK8se.IsSet() {
		return true
	}

	return false
}

// SetIsK8se gets a reference to the given NullableBool and assigns it to the IsK8se field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetIsK8se(v bool) {
	o.IsK8se.Set(&v)
}

// SetIsK8seNil sets the value for IsK8se to be an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetIsK8seNil() {
	o.IsK8se.Set(nil)
}

// UnsetIsK8se ensures that no value is present for IsK8se, not even an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) UnsetIsK8se() {
	o.IsK8se.Unset()
}

// GetImage returns the Image field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetImage() BcsInstanceV1ApiListInstancesModelInstanceImageModel {
	if o == nil || IsNil(o.Image.Get()) {
		var ret BcsInstanceV1ApiListInstancesModelInstanceImageModel
		return ret
	}
	return *o.Image.Get()
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetImageOk() (*BcsInstanceV1ApiListInstancesModelInstanceImageModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Image.Get(), o.Image.IsSet()
}

// HasImage returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) HasImage() bool {
	if o != nil && o.Image.IsSet() {
		return true
	}

	return false
}

// SetImage gets a reference to the given NullableBcsInstanceV1ApiListInstancesModelInstanceImageModel and assigns it to the Image field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetImage(v BcsInstanceV1ApiListInstancesModelInstanceImageModel) {
	o.Image.Set(&v)
}

// SetImageNil sets the value for Image to be an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetImageNil() {
	o.Image.Set(nil)
}

// UnsetImage ensures that no value is present for Image, not even an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) UnsetImage() {
	o.Image.Unset()
}

// GetVmState returns the VmState field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetVmState() string {
	if o == nil || IsNil(o.VmState.Get()) {
		var ret string
		return ret
	}
	return *o.VmState.Get()
}

// GetVmStateOk returns a tuple with the VmState field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetVmStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VmState.Get(), o.VmState.IsSet()
}

// HasVmState returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) HasVmState() bool {
	if o != nil && o.VmState.IsSet() {
		return true
	}

	return false
}

// SetVmState gets a reference to the given NullableString and assigns it to the VmState field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetVmState(v string) {
	o.VmState.Set(&v)
}

// SetVmStateNil sets the value for VmState to be an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetVmStateNil() {
	o.VmState.Set(nil)
}

// UnsetVmState ensures that no value is present for VmState, not even an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) UnsetVmState() {
	o.VmState.Unset()
}

// GetTaskState returns the TaskState field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetTaskState() string {
	if o == nil || IsNil(o.TaskState.Get()) {
		var ret string
		return ret
	}
	return *o.TaskState.Get()
}

// GetTaskStateOk returns a tuple with the TaskState field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetTaskStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaskState.Get(), o.TaskState.IsSet()
}

// HasTaskState returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) HasTaskState() bool {
	if o != nil && o.TaskState.IsSet() {
		return true
	}

	return false
}

// SetTaskState gets a reference to the given NullableString and assigns it to the TaskState field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetTaskState(v string) {
	o.TaskState.Set(&v)
}

// SetTaskStateNil sets the value for TaskState to be an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetTaskStateNil() {
	o.TaskState.Set(nil)
}

// UnsetTaskState ensures that no value is present for TaskState, not even an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) UnsetTaskState() {
	o.TaskState.Unset()
}

// GetPowerState returns the PowerState field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetPowerState() PowerState {
	if o == nil || IsNil(o.PowerState.Get()) {
		var ret PowerState
		return ret
	}
	return *o.PowerState.Get()
}

// GetPowerStateOk returns a tuple with the PowerState field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetPowerStateOk() (*PowerState, bool) {
	if o == nil {
		return nil, false
	}
	return o.PowerState.Get(), o.PowerState.IsSet()
}

// HasPowerState returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) HasPowerState() bool {
	if o != nil && o.PowerState.IsSet() {
		return true
	}

	return false
}

// SetPowerState gets a reference to the given NullablePowerState and assigns it to the PowerState field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetPowerState(v PowerState) {
	o.PowerState.Set(&v)
}

// SetPowerStateNil sets the value for PowerState to be an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetPowerStateNil() {
	o.PowerState.Set(nil)
}

// UnsetPowerState ensures that no value is present for PowerState, not even an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) UnsetPowerState() {
	o.PowerState.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetStatus(v string) {
	o.Status.Set(&v)
}

// SetStatusNil sets the value for Status to be an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) UnsetStatus() {
	o.Status.Unset()
}

// GetUserId returns the UserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetUserId() string {
	if o == nil || IsNil(o.UserId.Get()) {
		var ret string
		return ret
	}
	return *o.UserId.Get()
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserId.Get(), o.UserId.IsSet()
}

// HasUserId returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) HasUserId() bool {
	if o != nil && o.UserId.IsSet() {
		return true
	}

	return false
}

// SetUserId gets a reference to the given NullableString and assigns it to the UserId field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetUserId(v string) {
	o.UserId.Set(&v)
}

// SetUserIdNil sets the value for UserId to be an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetUserIdNil() {
	o.UserId.Set(nil)
}

// UnsetUserId ensures that no value is present for UserId, not even an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) UnsetUserId() {
	o.UserId.Unset()
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId.Get()) {
		var ret string
		return ret
	}
	return *o.ProjectId.Get()
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectId.Get(), o.ProjectId.IsSet()
}

// HasProjectId returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) HasProjectId() bool {
	if o != nil && o.ProjectId.IsSet() {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given NullableString and assigns it to the ProjectId field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetProjectId(v string) {
	o.ProjectId.Set(&v)
}

// SetProjectIdNil sets the value for ProjectId to be an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetProjectIdNil() {
	o.ProjectId.Set(nil)
}

// UnsetProjectId ensures that no value is present for ProjectId, not even an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) UnsetProjectId() {
	o.ProjectId.Unset()
}

// GetKeyName returns the KeyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetKeyName() string {
	if o == nil || IsNil(o.KeyName.Get()) {
		var ret string
		return ret
	}
	return *o.KeyName.Get()
}

// GetKeyNameOk returns a tuple with the KeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetKeyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KeyName.Get(), o.KeyName.IsSet()
}

// HasKeyName returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) HasKeyName() bool {
	if o != nil && o.KeyName.IsSet() {
		return true
	}

	return false
}

// SetKeyName gets a reference to the given NullableString and assigns it to the KeyName field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetKeyName(v string) {
	o.KeyName.Set(&v)
}

// SetKeyNameNil sets the value for KeyName to be an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetKeyNameNil() {
	o.KeyName.Set(nil)
}

// UnsetKeyName ensures that no value is present for KeyName, not even an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) UnsetKeyName() {
	o.KeyName.Unset()
}

// GetHostname returns the Hostname field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetHostname() string {
	if o == nil || IsNil(o.Hostname.Get()) {
		var ret string
		return ret
	}
	return *o.Hostname.Get()
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetHostnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Hostname.Get(), o.Hostname.IsSet()
}

// HasHostname returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) HasHostname() bool {
	if o != nil && o.Hostname.IsSet() {
		return true
	}

	return false
}

// SetHostname gets a reference to the given NullableString and assigns it to the Hostname field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetHostname(v string) {
	o.Hostname.Set(&v)
}

// SetHostnameNil sets the value for Hostname to be an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetHostnameNil() {
	o.Hostname.Set(nil)
}

// UnsetHostname ensures that no value is present for Hostname, not even an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) UnsetHostname() {
	o.Hostname.Unset()
}

// GetAvailabilityZone returns the AvailabilityZone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetAvailabilityZone() AvailabilityZone {
	if o == nil || IsNil(o.AvailabilityZone.Get()) {
		var ret AvailabilityZone
		return ret
	}
	return *o.AvailabilityZone.Get()
}

// GetAvailabilityZoneOk returns a tuple with the AvailabilityZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetAvailabilityZoneOk() (*AvailabilityZone, bool) {
	if o == nil {
		return nil, false
	}
	return o.AvailabilityZone.Get(), o.AvailabilityZone.IsSet()
}

// HasAvailabilityZone returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) HasAvailabilityZone() bool {
	if o != nil && o.AvailabilityZone.IsSet() {
		return true
	}

	return false
}

// SetAvailabilityZone gets a reference to the given NullableAvailabilityZone and assigns it to the AvailabilityZone field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetAvailabilityZone(v AvailabilityZone) {
	o.AvailabilityZone.Set(&v)
}

// SetAvailabilityZoneNil sets the value for AvailabilityZone to be an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetAvailabilityZoneNil() {
	o.AvailabilityZone.Set(nil)
}

// UnsetAvailabilityZone ensures that no value is present for AvailabilityZone, not even an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) UnsetAvailabilityZone() {
	o.AvailabilityZone.Unset()
}

// GetAttachedVolumes returns the AttachedVolumes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetAttachedVolumes() []BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel {
	if o == nil {
		var ret []BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel
		return ret
	}
	return o.AttachedVolumes
}

// GetAttachedVolumesOk returns a tuple with the AttachedVolumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetAttachedVolumesOk() ([]BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel, bool) {
	if o == nil || IsNil(o.AttachedVolumes) {
		return nil, false
	}
	return o.AttachedVolumes, true
}

// HasAttachedVolumes returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) HasAttachedVolumes() bool {
	if o != nil && !IsNil(o.AttachedVolumes) {
		return true
	}

	return false
}

// SetAttachedVolumes gets a reference to the given []BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel and assigns it to the AttachedVolumes field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetAttachedVolumes(v []BcsInstanceV1ApiListInstancesModelInstanceAttachedVolumeModel) {
	o.AttachedVolumes = v
}

// GetAttachedVolumeCount returns the AttachedVolumeCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetAttachedVolumeCount() int64 {
	if o == nil || IsNil(o.AttachedVolumeCount.Get()) {
		var ret int64
		return ret
	}
	return *o.AttachedVolumeCount.Get()
}

// GetAttachedVolumeCountOk returns a tuple with the AttachedVolumeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetAttachedVolumeCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.AttachedVolumeCount.Get(), o.AttachedVolumeCount.IsSet()
}

// HasAttachedVolumeCount returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) HasAttachedVolumeCount() bool {
	if o != nil && o.AttachedVolumeCount.IsSet() {
		return true
	}

	return false
}

// SetAttachedVolumeCount gets a reference to the given NullableInt64 and assigns it to the AttachedVolumeCount field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetAttachedVolumeCount(v int64) {
	o.AttachedVolumeCount.Set(&v)
}

// SetAttachedVolumeCountNil sets the value for AttachedVolumeCount to be an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetAttachedVolumeCountNil() {
	o.AttachedVolumeCount.Set(nil)
}

// UnsetAttachedVolumeCount ensures that no value is present for AttachedVolumeCount, not even an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) UnsetAttachedVolumeCount() {
	o.AttachedVolumeCount.Unset()
}

// GetSecurityGroups returns the SecurityGroups field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetSecurityGroups() []BcsInstanceV1ApiListInstancesModelInstanceSecurityGroupModel {
	if o == nil {
		var ret []BcsInstanceV1ApiListInstancesModelInstanceSecurityGroupModel
		return ret
	}
	return o.SecurityGroups
}

// GetSecurityGroupsOk returns a tuple with the SecurityGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetSecurityGroupsOk() ([]BcsInstanceV1ApiListInstancesModelInstanceSecurityGroupModel, bool) {
	if o == nil || IsNil(o.SecurityGroups) {
		return nil, false
	}
	return o.SecurityGroups, true
}

// HasSecurityGroups returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) HasSecurityGroups() bool {
	if o != nil && !IsNil(o.SecurityGroups) {
		return true
	}

	return false
}

// SetSecurityGroups gets a reference to the given []BcsInstanceV1ApiListInstancesModelInstanceSecurityGroupModel and assigns it to the SecurityGroups field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetSecurityGroups(v []BcsInstanceV1ApiListInstancesModelInstanceSecurityGroupModel) {
	o.SecurityGroups = v
}

// GetSecurityGroupCount returns the SecurityGroupCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetSecurityGroupCount() int64 {
	if o == nil || IsNil(o.SecurityGroupCount.Get()) {
		var ret int64
		return ret
	}
	return *o.SecurityGroupCount.Get()
}

// GetSecurityGroupCountOk returns a tuple with the SecurityGroupCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetSecurityGroupCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SecurityGroupCount.Get(), o.SecurityGroupCount.IsSet()
}

// HasSecurityGroupCount returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) HasSecurityGroupCount() bool {
	if o != nil && o.SecurityGroupCount.IsSet() {
		return true
	}

	return false
}

// SetSecurityGroupCount gets a reference to the given NullableInt64 and assigns it to the SecurityGroupCount field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetSecurityGroupCount(v int64) {
	o.SecurityGroupCount.Set(&v)
}

// SetSecurityGroupCountNil sets the value for SecurityGroupCount to be an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetSecurityGroupCountNil() {
	o.SecurityGroupCount.Set(nil)
}

// UnsetSecurityGroupCount ensures that no value is present for SecurityGroupCount, not even an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) UnsetSecurityGroupCount() {
	o.SecurityGroupCount.Unset()
}

// GetInstanceType returns the InstanceType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetInstanceType() string {
	if o == nil || IsNil(o.InstanceType.Get()) {
		var ret string
		return ret
	}
	return *o.InstanceType.Get()
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetInstanceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstanceType.Get(), o.InstanceType.IsSet()
}

// HasInstanceType returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) HasInstanceType() bool {
	if o != nil && o.InstanceType.IsSet() {
		return true
	}

	return false
}

// SetInstanceType gets a reference to the given NullableString and assigns it to the InstanceType field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetInstanceType(v string) {
	o.InstanceType.Set(&v)
}

// SetInstanceTypeNil sets the value for InstanceType to be an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetInstanceTypeNil() {
	o.InstanceType.Set(nil)
}

// UnsetInstanceType ensures that no value is present for InstanceType, not even an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) UnsetInstanceType() {
	o.InstanceType.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given NullableTime and assigns it to the CreatedAt field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetCreatedAt(v time.Time) {
	o.CreatedAt.Set(&v)
}

// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetCreatedAtNil() {
	o.CreatedAt.Set(nil)
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableTime and assigns it to the UpdatedAt field.
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetUpdatedAt(v time.Time) {
	o.UpdatedAt.Set(&v)
}

// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) SetUpdatedAtNil() {
	o.UpdatedAt.Set(nil)
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

func (o BcsInstanceV1ApiListInstancesModelInstanceModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BcsInstanceV1ApiListInstancesModelInstanceModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Flavor.IsSet() {
		toSerialize["flavor"] = o.Flavor.Get()
	}
	if o.Addresses != nil {
		toSerialize["addresses"] = o.Addresses
	}
	if o.IsHyperThreading.IsSet() {
		toSerialize["is_hyper_threading"] = o.IsHyperThreading.Get()
	}
	if o.IsHadoop.IsSet() {
		toSerialize["is_hadoop"] = o.IsHadoop.Get()
	}
	if o.IsK8se.IsSet() {
		toSerialize["is_k8se"] = o.IsK8se.Get()
	}
	if o.Image.IsSet() {
		toSerialize["image"] = o.Image.Get()
	}
	if o.VmState.IsSet() {
		toSerialize["vm_state"] = o.VmState.Get()
	}
	if o.TaskState.IsSet() {
		toSerialize["task_state"] = o.TaskState.Get()
	}
	if o.PowerState.IsSet() {
		toSerialize["power_state"] = o.PowerState.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.UserId.IsSet() {
		toSerialize["user_id"] = o.UserId.Get()
	}
	if o.ProjectId.IsSet() {
		toSerialize["project_id"] = o.ProjectId.Get()
	}
	if o.KeyName.IsSet() {
		toSerialize["key_name"] = o.KeyName.Get()
	}
	if o.Hostname.IsSet() {
		toSerialize["hostname"] = o.Hostname.Get()
	}
	if o.AvailabilityZone.IsSet() {
		toSerialize["availability_zone"] = o.AvailabilityZone.Get()
	}
	if o.AttachedVolumes != nil {
		toSerialize["attached_volumes"] = o.AttachedVolumes
	}
	if o.AttachedVolumeCount.IsSet() {
		toSerialize["attached_volume_count"] = o.AttachedVolumeCount.Get()
	}
	if o.SecurityGroups != nil {
		toSerialize["security_groups"] = o.SecurityGroups
	}
	if o.SecurityGroupCount.IsSet() {
		toSerialize["security_group_count"] = o.SecurityGroupCount.Get()
	}
	if o.InstanceType.IsSet() {
		toSerialize["instance_type"] = o.InstanceType.Get()
	}
	if o.CreatedAt.IsSet() {
		toSerialize["created_at"] = o.CreatedAt.Get()
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["updated_at"] = o.UpdatedAt.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BcsInstanceV1ApiListInstancesModelInstanceModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBcsInstanceV1ApiListInstancesModelInstanceModel := _BcsInstanceV1ApiListInstancesModelInstanceModel{}

	err = json.Unmarshal(data, &varBcsInstanceV1ApiListInstancesModelInstanceModel)

	if err != nil {
		return err
	}

	*o = BcsInstanceV1ApiListInstancesModelInstanceModel(varBcsInstanceV1ApiListInstancesModelInstanceModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "metadata")
		delete(additionalProperties, "flavor")
		delete(additionalProperties, "addresses")
		delete(additionalProperties, "is_hyper_threading")
		delete(additionalProperties, "is_hadoop")
		delete(additionalProperties, "is_k8se")
		delete(additionalProperties, "image")
		delete(additionalProperties, "vm_state")
		delete(additionalProperties, "task_state")
		delete(additionalProperties, "power_state")
		delete(additionalProperties, "status")
		delete(additionalProperties, "user_id")
		delete(additionalProperties, "project_id")
		delete(additionalProperties, "key_name")
		delete(additionalProperties, "hostname")
		delete(additionalProperties, "availability_zone")
		delete(additionalProperties, "attached_volumes")
		delete(additionalProperties, "attached_volume_count")
		delete(additionalProperties, "security_groups")
		delete(additionalProperties, "security_group_count")
		delete(additionalProperties, "instance_type")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBcsInstanceV1ApiListInstancesModelInstanceModel struct {
	value *BcsInstanceV1ApiListInstancesModelInstanceModel
	isSet bool
}

func (v NullableBcsInstanceV1ApiListInstancesModelInstanceModel) Get() *BcsInstanceV1ApiListInstancesModelInstanceModel {
	return v.value
}

func (v *NullableBcsInstanceV1ApiListInstancesModelInstanceModel) Set(val *BcsInstanceV1ApiListInstancesModelInstanceModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBcsInstanceV1ApiListInstancesModelInstanceModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBcsInstanceV1ApiListInstancesModelInstanceModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBcsInstanceV1ApiListInstancesModelInstanceModel(val *BcsInstanceV1ApiListInstancesModelInstanceModel) *NullableBcsInstanceV1ApiListInstancesModelInstanceModel {
	return &NullableBcsInstanceV1ApiListInstancesModelInstanceModel{value: val, isSet: true}
}

func (v NullableBcsInstanceV1ApiListInstancesModelInstanceModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBcsInstanceV1ApiListInstancesModelInstanceModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
