/*
Beyond Compute Service(BCS) API

Beyond Compute Service API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bcs

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the BcsInstanceV1ApiListKeypairsModelKeypairModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BcsInstanceV1ApiListKeypairsModelKeypairModel{}

// BcsInstanceV1ApiListKeypairsModelKeypairModel struct for BcsInstanceV1ApiListKeypairsModelKeypairModel
type BcsInstanceV1ApiListKeypairsModelKeypairModel struct {
	// í‚¤ ID
	Id                   string         `json:"id"`
	Name                 NullableString `json:"name,omitempty"`
	UserId               NullableString `json:"user_id,omitempty"`
	Fingerprint          NullableString `json:"fingerprint,omitempty"`
	PublicKey            NullableString `json:"public_key,omitempty"`
	Type                 NullableString `json:"type,omitempty"`
	CreatedAt            NullableTime   `json:"created_at,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BcsInstanceV1ApiListKeypairsModelKeypairModel BcsInstanceV1ApiListKeypairsModelKeypairModel

// NewBcsInstanceV1ApiListKeypairsModelKeypairModel instantiates a new BcsInstanceV1ApiListKeypairsModelKeypairModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBcsInstanceV1ApiListKeypairsModelKeypairModel(id string) *BcsInstanceV1ApiListKeypairsModelKeypairModel {
	this := BcsInstanceV1ApiListKeypairsModelKeypairModel{}
	this.Id = id
	return &this
}

// NewBcsInstanceV1ApiListKeypairsModelKeypairModelWithDefaults instantiates a new BcsInstanceV1ApiListKeypairsModelKeypairModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBcsInstanceV1ApiListKeypairsModelKeypairModelWithDefaults() *BcsInstanceV1ApiListKeypairsModelKeypairModel {
	this := BcsInstanceV1ApiListKeypairsModelKeypairModel{}
	return &this
}

// GetId returns the Id field value
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) UnsetName() {
	o.Name.Unset()
}

// GetUserId returns the UserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) GetUserId() string {
	if o == nil || IsNil(o.UserId.Get()) {
		var ret string
		return ret
	}
	return *o.UserId.Get()
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserId.Get(), o.UserId.IsSet()
}

// HasUserId returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) HasUserId() bool {
	if o != nil && o.UserId.IsSet() {
		return true
	}

	return false
}

// SetUserId gets a reference to the given NullableString and assigns it to the UserId field.
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) SetUserId(v string) {
	o.UserId.Set(&v)
}

// SetUserIdNil sets the value for UserId to be an explicit nil
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) SetUserIdNil() {
	o.UserId.Set(nil)
}

// UnsetUserId ensures that no value is present for UserId, not even an explicit nil
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) UnsetUserId() {
	o.UserId.Unset()
}

// GetFingerprint returns the Fingerprint field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) GetFingerprint() string {
	if o == nil || IsNil(o.Fingerprint.Get()) {
		var ret string
		return ret
	}
	return *o.Fingerprint.Get()
}

// GetFingerprintOk returns a tuple with the Fingerprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) GetFingerprintOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Fingerprint.Get(), o.Fingerprint.IsSet()
}

// HasFingerprint returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) HasFingerprint() bool {
	if o != nil && o.Fingerprint.IsSet() {
		return true
	}

	return false
}

// SetFingerprint gets a reference to the given NullableString and assigns it to the Fingerprint field.
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) SetFingerprint(v string) {
	o.Fingerprint.Set(&v)
}

// SetFingerprintNil sets the value for Fingerprint to be an explicit nil
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) SetFingerprintNil() {
	o.Fingerprint.Set(nil)
}

// UnsetFingerprint ensures that no value is present for Fingerprint, not even an explicit nil
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) UnsetFingerprint() {
	o.Fingerprint.Unset()
}

// GetPublicKey returns the PublicKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) GetPublicKey() string {
	if o == nil || IsNil(o.PublicKey.Get()) {
		var ret string
		return ret
	}
	return *o.PublicKey.Get()
}

// GetPublicKeyOk returns a tuple with the PublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) GetPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PublicKey.Get(), o.PublicKey.IsSet()
}

// HasPublicKey returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) HasPublicKey() bool {
	if o != nil && o.PublicKey.IsSet() {
		return true
	}

	return false
}

// SetPublicKey gets a reference to the given NullableString and assigns it to the PublicKey field.
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) SetPublicKey(v string) {
	o.PublicKey.Set(&v)
}

// SetPublicKeyNil sets the value for PublicKey to be an explicit nil
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) SetPublicKeyNil() {
	o.PublicKey.Set(nil)
}

// UnsetPublicKey ensures that no value is present for PublicKey, not even an explicit nil
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) UnsetPublicKey() {
	o.PublicKey.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) SetType(v string) {
	o.Type.Set(&v)
}

// SetTypeNil sets the value for Type to be an explicit nil
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) UnsetType() {
	o.Type.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given NullableTime and assigns it to the CreatedAt field.
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) SetCreatedAt(v time.Time) {
	o.CreatedAt.Set(&v)
}

// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) SetCreatedAtNil() {
	o.CreatedAt.Set(nil)
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

func (o BcsInstanceV1ApiListKeypairsModelKeypairModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BcsInstanceV1ApiListKeypairsModelKeypairModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.UserId.IsSet() {
		toSerialize["user_id"] = o.UserId.Get()
	}
	if o.Fingerprint.IsSet() {
		toSerialize["fingerprint"] = o.Fingerprint.Get()
	}
	if o.PublicKey.IsSet() {
		toSerialize["public_key"] = o.PublicKey.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.CreatedAt.IsSet() {
		toSerialize["created_at"] = o.CreatedAt.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BcsInstanceV1ApiListKeypairsModelKeypairModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBcsInstanceV1ApiListKeypairsModelKeypairModel := _BcsInstanceV1ApiListKeypairsModelKeypairModel{}

	err = json.Unmarshal(data, &varBcsInstanceV1ApiListKeypairsModelKeypairModel)

	if err != nil {
		return err
	}

	*o = BcsInstanceV1ApiListKeypairsModelKeypairModel(varBcsInstanceV1ApiListKeypairsModelKeypairModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "user_id")
		delete(additionalProperties, "fingerprint")
		delete(additionalProperties, "public_key")
		delete(additionalProperties, "type")
		delete(additionalProperties, "created_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBcsInstanceV1ApiListKeypairsModelKeypairModel struct {
	value *BcsInstanceV1ApiListKeypairsModelKeypairModel
	isSet bool
}

func (v NullableBcsInstanceV1ApiListKeypairsModelKeypairModel) Get() *BcsInstanceV1ApiListKeypairsModelKeypairModel {
	return v.value
}

func (v *NullableBcsInstanceV1ApiListKeypairsModelKeypairModel) Set(val *BcsInstanceV1ApiListKeypairsModelKeypairModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBcsInstanceV1ApiListKeypairsModelKeypairModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBcsInstanceV1ApiListKeypairsModelKeypairModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBcsInstanceV1ApiListKeypairsModelKeypairModel(val *BcsInstanceV1ApiListKeypairsModelKeypairModel) *NullableBcsInstanceV1ApiListKeypairsModelKeypairModel {
	return &NullableBcsInstanceV1ApiListKeypairsModelKeypairModel{value: val, isSet: true}
}

func (v NullableBcsInstanceV1ApiListKeypairsModelKeypairModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBcsInstanceV1ApiListKeypairsModelKeypairModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
