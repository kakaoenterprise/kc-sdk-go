/*
Beyond Compute Service(BCS) API

Beyond Compute Service API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bcs

import (
	"encoding/json"
	"fmt"
)

// checks if the BcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel{}

// BcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel struct for BcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel
type BcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel struct {
	// 볼륨의 고유 ID
	VolumeId string `json:"volume_id"`
	// 인스턴스가 삭제될 때 해당 볼륨이 자동으로 삭제되는지 여부
	IsDeleteOnTermination bool `json:"is_delete_on_termination"`
	AdditionalProperties  map[string]interface{}
}

type _BcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel BcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel

// NewBcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel instantiates a new BcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel(volumeId string, isDeleteOnTermination bool) *BcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel {
	this := BcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel{}
	this.VolumeId = volumeId
	this.IsDeleteOnTermination = isDeleteOnTermination
	return &this
}

// NewBcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModelWithDefaults instantiates a new BcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModelWithDefaults() *BcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel {
	this := BcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel{}
	return &this
}

// GetVolumeId returns the VolumeId field value
func (o *BcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel) GetVolumeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VolumeId
}

// GetVolumeIdOk returns a tuple with the VolumeId field value
// and a boolean to check if the value has been set.
func (o *BcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel) GetVolumeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VolumeId, true
}

// SetVolumeId sets field value
func (o *BcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel) SetVolumeId(v string) {
	o.VolumeId = v
}

// GetIsDeleteOnTermination returns the IsDeleteOnTermination field value
func (o *BcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel) GetIsDeleteOnTermination() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDeleteOnTermination
}

// GetIsDeleteOnTerminationOk returns a tuple with the IsDeleteOnTermination field value
// and a boolean to check if the value has been set.
func (o *BcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel) GetIsDeleteOnTerminationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsDeleteOnTermination, true
}

// SetIsDeleteOnTermination sets field value
func (o *BcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel) SetIsDeleteOnTermination(v bool) {
	o.IsDeleteOnTermination = v
}

func (o BcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["volume_id"] = o.VolumeId
	toSerialize["is_delete_on_termination"] = o.IsDeleteOnTermination

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"volume_id",
		"is_delete_on_termination",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel := _BcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel{}

	err = json.Unmarshal(data, &varBcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel)

	if err != nil {
		return err
	}

	*o = BcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel(varBcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "volume_id")
		delete(additionalProperties, "is_delete_on_termination")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel struct {
	value *BcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel
	isSet bool
}

func (v NullableBcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel) Get() *BcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel {
	return v.value
}

func (v *NullableBcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel) Set(val *BcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel(val *BcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel) *NullableBcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel {
	return &NullableBcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel{value: val, isSet: true}
}

func (v NullableBcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBcsInstanceV1ApiRebuildInstanceModelInstanceAttachedVolumeModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
