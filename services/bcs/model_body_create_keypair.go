/*
Beyond Compute Service(BCS) API

Beyond Compute Service API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bcs

import (
	"encoding/json"
	"fmt"
)

// checks if the BodyCreateKeypair type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BodyCreateKeypair{}

// BodyCreateKeypair struct for BodyCreateKeypair
type BodyCreateKeypair struct {
	Keypair              CreateKeypairModel `json:"keypair"`
	AdditionalProperties map[string]interface{}
}

type _BodyCreateKeypair BodyCreateKeypair

// NewBodyCreateKeypair instantiates a new BodyCreateKeypair object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBodyCreateKeypair(keypair CreateKeypairModel) *BodyCreateKeypair {
	this := BodyCreateKeypair{}
	this.Keypair = keypair
	return &this
}

// NewBodyCreateKeypairWithDefaults instantiates a new BodyCreateKeypair object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBodyCreateKeypairWithDefaults() *BodyCreateKeypair {
	this := BodyCreateKeypair{}
	return &this
}

// GetKeypair returns the Keypair field value
func (o *BodyCreateKeypair) GetKeypair() CreateKeypairModel {
	if o == nil {
		var ret CreateKeypairModel
		return ret
	}

	return o.Keypair
}

// GetKeypairOk returns a tuple with the Keypair field value
// and a boolean to check if the value has been set.
func (o *BodyCreateKeypair) GetKeypairOk() (*CreateKeypairModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Keypair, true
}

// SetKeypair sets field value
func (o *BodyCreateKeypair) SetKeypair(v CreateKeypairModel) {
	o.Keypair = v
}

func (o BodyCreateKeypair) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BodyCreateKeypair) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["keypair"] = o.Keypair

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BodyCreateKeypair) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"keypair",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBodyCreateKeypair := _BodyCreateKeypair{}

	err = json.Unmarshal(data, &varBodyCreateKeypair)

	if err != nil {
		return err
	}

	*o = BodyCreateKeypair(varBodyCreateKeypair)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "keypair")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBodyCreateKeypair struct {
	value *BodyCreateKeypair
	isSet bool
}

func (v NullableBodyCreateKeypair) Get() *BodyCreateKeypair {
	return v.value
}

func (v *NullableBodyCreateKeypair) Set(val *BodyCreateKeypair) {
	v.value = val
	v.isSet = true
}

func (v NullableBodyCreateKeypair) IsSet() bool {
	return v.isSet
}

func (v *NullableBodyCreateKeypair) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBodyCreateKeypair(val *BodyCreateKeypair) *NullableBodyCreateKeypair {
	return &NullableBodyCreateKeypair{value: val, isSet: true}
}

func (v NullableBodyCreateKeypair) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBodyCreateKeypair) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
