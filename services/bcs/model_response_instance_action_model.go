/*
Beyond Compute Service(BCS) API

Beyond Compute Service API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bcs

import (
	"encoding/json"
	"fmt"
)

// checks if the ResponseInstanceActionModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseInstanceActionModel{}

// ResponseInstanceActionModel struct for ResponseInstanceActionModel
type ResponseInstanceActionModel struct {
	// 인스턴스에 수행한 작업
	Actions              []InstanceActionModel `json:"actions"`
	AdditionalProperties map[string]interface{}
}

type _ResponseInstanceActionModel ResponseInstanceActionModel

// NewResponseInstanceActionModel instantiates a new ResponseInstanceActionModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseInstanceActionModel(actions []InstanceActionModel) *ResponseInstanceActionModel {
	this := ResponseInstanceActionModel{}
	this.Actions = actions
	return &this
}

// NewResponseInstanceActionModelWithDefaults instantiates a new ResponseInstanceActionModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseInstanceActionModelWithDefaults() *ResponseInstanceActionModel {
	this := ResponseInstanceActionModel{}
	return &this
}

// GetActions returns the Actions field value
func (o *ResponseInstanceActionModel) GetActions() []InstanceActionModel {
	if o == nil {
		var ret []InstanceActionModel
		return ret
	}

	return o.Actions
}

// GetActionsOk returns a tuple with the Actions field value
// and a boolean to check if the value has been set.
func (o *ResponseInstanceActionModel) GetActionsOk() ([]InstanceActionModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Actions, true
}

// SetActions sets field value
func (o *ResponseInstanceActionModel) SetActions(v []InstanceActionModel) {
	o.Actions = v
}

func (o ResponseInstanceActionModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseInstanceActionModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["actions"] = o.Actions

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ResponseInstanceActionModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"actions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varResponseInstanceActionModel := _ResponseInstanceActionModel{}

	err = json.Unmarshal(data, &varResponseInstanceActionModel)

	if err != nil {
		return err
	}

	*o = ResponseInstanceActionModel(varResponseInstanceActionModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "actions")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableResponseInstanceActionModel struct {
	value *ResponseInstanceActionModel
	isSet bool
}

func (v NullableResponseInstanceActionModel) Get() *ResponseInstanceActionModel {
	return v.value
}

func (v *NullableResponseInstanceActionModel) Set(val *ResponseInstanceActionModel) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseInstanceActionModel) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseInstanceActionModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseInstanceActionModel(val *ResponseInstanceActionModel) *NullableResponseInstanceActionModel {
	return &NullableResponseInstanceActionModel{value: val, isSet: true}
}

func (v NullableResponseInstanceActionModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseInstanceActionModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
