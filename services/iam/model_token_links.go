/*
Cloud-IAM API

IAM service API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iam

import (
	"encoding/json"
)

// checks if the TokenLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TokenLinks{}

// TokenLinks struct for TokenLinks
type TokenLinks struct {
	Next                 *string `json:"next,omitempty"`
	Previous             *string `json:"previous,omitempty"`
	Self                 *string `json:"self,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TokenLinks TokenLinks

// NewTokenLinks instantiates a new TokenLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenLinks() *TokenLinks {
	this := TokenLinks{}
	return &this
}

// NewTokenLinksWithDefaults instantiates a new TokenLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenLinksWithDefaults() *TokenLinks {
	this := TokenLinks{}
	return &this
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *TokenLinks) GetNext() string {
	if o == nil || IsNil(o.Next) {
		var ret string
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenLinks) GetNextOk() (*string, bool) {
	if o == nil || IsNil(o.Next) {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *TokenLinks) HasNext() bool {
	if o != nil && !IsNil(o.Next) {
		return true
	}

	return false
}

// SetNext gets a reference to the given string and assigns it to the Next field.
func (o *TokenLinks) SetNext(v string) {
	o.Next = &v
}

// GetPrevious returns the Previous field value if set, zero value otherwise.
func (o *TokenLinks) GetPrevious() string {
	if o == nil || IsNil(o.Previous) {
		var ret string
		return ret
	}
	return *o.Previous
}

// GetPreviousOk returns a tuple with the Previous field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenLinks) GetPreviousOk() (*string, bool) {
	if o == nil || IsNil(o.Previous) {
		return nil, false
	}
	return o.Previous, true
}

// HasPrevious returns a boolean if a field has been set.
func (o *TokenLinks) HasPrevious() bool {
	if o != nil && !IsNil(o.Previous) {
		return true
	}

	return false
}

// SetPrevious gets a reference to the given string and assigns it to the Previous field.
func (o *TokenLinks) SetPrevious(v string) {
	o.Previous = &v
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *TokenLinks) GetSelf() string {
	if o == nil || IsNil(o.Self) {
		var ret string
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenLinks) GetSelfOk() (*string, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *TokenLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given string and assigns it to the Self field.
func (o *TokenLinks) SetSelf(v string) {
	o.Self = &v
}

func (o TokenLinks) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokenLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Next) {
		toSerialize["next"] = o.Next
	}
	if !IsNil(o.Previous) {
		toSerialize["previous"] = o.Previous
	}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TokenLinks) UnmarshalJSON(data []byte) (err error) {
	varTokenLinks := _TokenLinks{}

	err = json.Unmarshal(data, &varTokenLinks)

	if err != nil {
		return err
	}

	*o = TokenLinks(varTokenLinks)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "next")
		delete(additionalProperties, "previous")
		delete(additionalProperties, "self")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTokenLinks struct {
	value *TokenLinks
	isSet bool
}

func (v NullableTokenLinks) Get() *TokenLinks {
	return v.value
}

func (v *NullableTokenLinks) Set(val *TokenLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenLinks(val *TokenLinks) *NullableTokenLinks {
	return &NullableTokenLinks{value: val, isSet: true}
}

func (v NullableTokenLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
