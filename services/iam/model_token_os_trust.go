/*
Cloud-IAM API

IAM service API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iam

import (
	"encoding/json"
)

// checks if the TokenOSTrust type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TokenOSTrust{}

// TokenOSTrust struct for TokenOSTrust
type TokenOSTrust struct {
	Id                   *string         `json:"id,omitempty"`
	Impersonation        *bool           `json:"impersonation,omitempty"`
	Links                *TokenLinks     `json:"links,omitempty"`
	TrusteeUser          *TokenTrustUser `json:"trustee_user,omitempty"`
	TrustorUser          *TokenTrustUser `json:"trustor_user,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TokenOSTrust TokenOSTrust

// NewTokenOSTrust instantiates a new TokenOSTrust object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenOSTrust() *TokenOSTrust {
	this := TokenOSTrust{}
	return &this
}

// NewTokenOSTrustWithDefaults instantiates a new TokenOSTrust object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenOSTrustWithDefaults() *TokenOSTrust {
	this := TokenOSTrust{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TokenOSTrust) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenOSTrust) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TokenOSTrust) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *TokenOSTrust) SetId(v string) {
	o.Id = &v
}

// GetImpersonation returns the Impersonation field value if set, zero value otherwise.
func (o *TokenOSTrust) GetImpersonation() bool {
	if o == nil || IsNil(o.Impersonation) {
		var ret bool
		return ret
	}
	return *o.Impersonation
}

// GetImpersonationOk returns a tuple with the Impersonation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenOSTrust) GetImpersonationOk() (*bool, bool) {
	if o == nil || IsNil(o.Impersonation) {
		return nil, false
	}
	return o.Impersonation, true
}

// HasImpersonation returns a boolean if a field has been set.
func (o *TokenOSTrust) HasImpersonation() bool {
	if o != nil && !IsNil(o.Impersonation) {
		return true
	}

	return false
}

// SetImpersonation gets a reference to the given bool and assigns it to the Impersonation field.
func (o *TokenOSTrust) SetImpersonation(v bool) {
	o.Impersonation = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *TokenOSTrust) GetLinks() TokenLinks {
	if o == nil || IsNil(o.Links) {
		var ret TokenLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenOSTrust) GetLinksOk() (*TokenLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *TokenOSTrust) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given TokenLinks and assigns it to the Links field.
func (o *TokenOSTrust) SetLinks(v TokenLinks) {
	o.Links = &v
}

// GetTrusteeUser returns the TrusteeUser field value if set, zero value otherwise.
func (o *TokenOSTrust) GetTrusteeUser() TokenTrustUser {
	if o == nil || IsNil(o.TrusteeUser) {
		var ret TokenTrustUser
		return ret
	}
	return *o.TrusteeUser
}

// GetTrusteeUserOk returns a tuple with the TrusteeUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenOSTrust) GetTrusteeUserOk() (*TokenTrustUser, bool) {
	if o == nil || IsNil(o.TrusteeUser) {
		return nil, false
	}
	return o.TrusteeUser, true
}

// HasTrusteeUser returns a boolean if a field has been set.
func (o *TokenOSTrust) HasTrusteeUser() bool {
	if o != nil && !IsNil(o.TrusteeUser) {
		return true
	}

	return false
}

// SetTrusteeUser gets a reference to the given TokenTrustUser and assigns it to the TrusteeUser field.
func (o *TokenOSTrust) SetTrusteeUser(v TokenTrustUser) {
	o.TrusteeUser = &v
}

// GetTrustorUser returns the TrustorUser field value if set, zero value otherwise.
func (o *TokenOSTrust) GetTrustorUser() TokenTrustUser {
	if o == nil || IsNil(o.TrustorUser) {
		var ret TokenTrustUser
		return ret
	}
	return *o.TrustorUser
}

// GetTrustorUserOk returns a tuple with the TrustorUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenOSTrust) GetTrustorUserOk() (*TokenTrustUser, bool) {
	if o == nil || IsNil(o.TrustorUser) {
		return nil, false
	}
	return o.TrustorUser, true
}

// HasTrustorUser returns a boolean if a field has been set.
func (o *TokenOSTrust) HasTrustorUser() bool {
	if o != nil && !IsNil(o.TrustorUser) {
		return true
	}

	return false
}

// SetTrustorUser gets a reference to the given TokenTrustUser and assigns it to the TrustorUser field.
func (o *TokenOSTrust) SetTrustorUser(v TokenTrustUser) {
	o.TrustorUser = &v
}

func (o TokenOSTrust) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokenOSTrust) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Impersonation) {
		toSerialize["impersonation"] = o.Impersonation
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.TrusteeUser) {
		toSerialize["trustee_user"] = o.TrusteeUser
	}
	if !IsNil(o.TrustorUser) {
		toSerialize["trustor_user"] = o.TrustorUser
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TokenOSTrust) UnmarshalJSON(data []byte) (err error) {
	varTokenOSTrust := _TokenOSTrust{}

	err = json.Unmarshal(data, &varTokenOSTrust)

	if err != nil {
		return err
	}

	*o = TokenOSTrust(varTokenOSTrust)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "impersonation")
		delete(additionalProperties, "links")
		delete(additionalProperties, "trustee_user")
		delete(additionalProperties, "trustor_user")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTokenOSTrust struct {
	value *TokenOSTrust
	isSet bool
}

func (v NullableTokenOSTrust) Get() *TokenOSTrust {
	return v.value
}

func (v *NullableTokenOSTrust) Set(val *TokenOSTrust) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenOSTrust) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenOSTrust) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenOSTrust(val *TokenOSTrust) *NullableTokenOSTrust {
	return &NullableTokenOSTrust{value: val, isSet: true}
}

func (v NullableTokenOSTrust) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenOSTrust) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
