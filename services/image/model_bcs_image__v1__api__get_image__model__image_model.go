/*
Beyond Compute Service(BCS) Image API

Beyond Compute Service Image API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package image

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the BcsImageV1ApiGetImageModelImageModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BcsImageV1ApiGetImageModelImageModel{}

// BcsImageV1ApiGetImageModelImageModel struct for BcsImageV1ApiGetImageModelImageModel
type BcsImageV1ApiGetImageModelImageModel struct {
	// 이미지의 고유 ID
	Id                   string                                        `json:"id"`
	Name                 NullableString                                `json:"name,omitempty"`
	Size                 NullableInt64                                 `json:"size,omitempty"`
	Status               NullableString                                `json:"status,omitempty"`
	Owner                NullableString                                `json:"owner,omitempty"`
	Visibility           NullableString                                `json:"visibility,omitempty"`
	Description          NullableString                                `json:"description,omitempty"`
	IsShared             NullableBool                                  `json:"is_shared,omitempty"`
	DiskFormat           NullableString                                `json:"disk_format,omitempty"`
	ContainerFormat      NullableString                                `json:"container_format,omitempty"`
	MinDisk              NullableInt32                                 `json:"min_disk,omitempty"`
	MinRam               NullableInt32                                 `json:"min_ram,omitempty"`
	VirtualSize          NullableInt64                                 `json:"virtual_size,omitempty"`
	InstanceType         NullableInstanceType                          `json:"instance_type,omitempty"`
	ImageMemberStatus    NullableString                                `json:"image_member_status,omitempty"`
	ProjectId            NullableString                                `json:"project_id,omitempty"`
	OsInfo               NullableBcsImageV1ApiGetImageModelOsInfoModel `json:"os_info,omitempty"`
	CreatedAt            NullableTime                                  `json:"created_at,omitempty"`
	UpdatedAt            NullableTime                                  `json:"updated_at,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BcsImageV1ApiGetImageModelImageModel BcsImageV1ApiGetImageModelImageModel

// NewBcsImageV1ApiGetImageModelImageModel instantiates a new BcsImageV1ApiGetImageModelImageModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBcsImageV1ApiGetImageModelImageModel(id string) *BcsImageV1ApiGetImageModelImageModel {
	this := BcsImageV1ApiGetImageModelImageModel{}
	this.Id = id
	return &this
}

// NewBcsImageV1ApiGetImageModelImageModelWithDefaults instantiates a new BcsImageV1ApiGetImageModelImageModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBcsImageV1ApiGetImageModelImageModelWithDefaults() *BcsImageV1ApiGetImageModelImageModel {
	this := BcsImageV1ApiGetImageModelImageModel{}
	return &this
}

// GetId returns the Id field value
func (o *BcsImageV1ApiGetImageModelImageModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BcsImageV1ApiGetImageModelImageModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BcsImageV1ApiGetImageModelImageModel) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsImageV1ApiGetImageModelImageModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsImageV1ApiGetImageModelImageModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *BcsImageV1ApiGetImageModelImageModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *BcsImageV1ApiGetImageModelImageModel) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) UnsetName() {
	o.Name.Unset()
}

// GetSize returns the Size field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsImageV1ApiGetImageModelImageModel) GetSize() int64 {
	if o == nil || IsNil(o.Size.Get()) {
		var ret int64
		return ret
	}
	return *o.Size.Get()
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsImageV1ApiGetImageModelImageModel) GetSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Size.Get(), o.Size.IsSet()
}

// HasSize returns a boolean if a field has been set.
func (o *BcsImageV1ApiGetImageModelImageModel) HasSize() bool {
	if o != nil && o.Size.IsSet() {
		return true
	}

	return false
}

// SetSize gets a reference to the given NullableInt64 and assigns it to the Size field.
func (o *BcsImageV1ApiGetImageModelImageModel) SetSize(v int64) {
	o.Size.Set(&v)
}

// SetSizeNil sets the value for Size to be an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) SetSizeNil() {
	o.Size.Set(nil)
}

// UnsetSize ensures that no value is present for Size, not even an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) UnsetSize() {
	o.Size.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsImageV1ApiGetImageModelImageModel) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsImageV1ApiGetImageModelImageModel) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *BcsImageV1ApiGetImageModelImageModel) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *BcsImageV1ApiGetImageModelImageModel) SetStatus(v string) {
	o.Status.Set(&v)
}

// SetStatusNil sets the value for Status to be an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) UnsetStatus() {
	o.Status.Unset()
}

// GetOwner returns the Owner field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsImageV1ApiGetImageModelImageModel) GetOwner() string {
	if o == nil || IsNil(o.Owner.Get()) {
		var ret string
		return ret
	}
	return *o.Owner.Get()
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsImageV1ApiGetImageModelImageModel) GetOwnerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Owner.Get(), o.Owner.IsSet()
}

// HasOwner returns a boolean if a field has been set.
func (o *BcsImageV1ApiGetImageModelImageModel) HasOwner() bool {
	if o != nil && o.Owner.IsSet() {
		return true
	}

	return false
}

// SetOwner gets a reference to the given NullableString and assigns it to the Owner field.
func (o *BcsImageV1ApiGetImageModelImageModel) SetOwner(v string) {
	o.Owner.Set(&v)
}

// SetOwnerNil sets the value for Owner to be an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) SetOwnerNil() {
	o.Owner.Set(nil)
}

// UnsetOwner ensures that no value is present for Owner, not even an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) UnsetOwner() {
	o.Owner.Unset()
}

// GetVisibility returns the Visibility field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsImageV1ApiGetImageModelImageModel) GetVisibility() string {
	if o == nil || IsNil(o.Visibility.Get()) {
		var ret string
		return ret
	}
	return *o.Visibility.Get()
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsImageV1ApiGetImageModelImageModel) GetVisibilityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Visibility.Get(), o.Visibility.IsSet()
}

// HasVisibility returns a boolean if a field has been set.
func (o *BcsImageV1ApiGetImageModelImageModel) HasVisibility() bool {
	if o != nil && o.Visibility.IsSet() {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given NullableString and assigns it to the Visibility field.
func (o *BcsImageV1ApiGetImageModelImageModel) SetVisibility(v string) {
	o.Visibility.Set(&v)
}

// SetVisibilityNil sets the value for Visibility to be an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) SetVisibilityNil() {
	o.Visibility.Set(nil)
}

// UnsetVisibility ensures that no value is present for Visibility, not even an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) UnsetVisibility() {
	o.Visibility.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsImageV1ApiGetImageModelImageModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsImageV1ApiGetImageModelImageModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *BcsImageV1ApiGetImageModelImageModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *BcsImageV1ApiGetImageModelImageModel) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) UnsetDescription() {
	o.Description.Unset()
}

// GetIsShared returns the IsShared field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsImageV1ApiGetImageModelImageModel) GetIsShared() bool {
	if o == nil || IsNil(o.IsShared.Get()) {
		var ret bool
		return ret
	}
	return *o.IsShared.Get()
}

// GetIsSharedOk returns a tuple with the IsShared field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsImageV1ApiGetImageModelImageModel) GetIsSharedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsShared.Get(), o.IsShared.IsSet()
}

// HasIsShared returns a boolean if a field has been set.
func (o *BcsImageV1ApiGetImageModelImageModel) HasIsShared() bool {
	if o != nil && o.IsShared.IsSet() {
		return true
	}

	return false
}

// SetIsShared gets a reference to the given NullableBool and assigns it to the IsShared field.
func (o *BcsImageV1ApiGetImageModelImageModel) SetIsShared(v bool) {
	o.IsShared.Set(&v)
}

// SetIsSharedNil sets the value for IsShared to be an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) SetIsSharedNil() {
	o.IsShared.Set(nil)
}

// UnsetIsShared ensures that no value is present for IsShared, not even an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) UnsetIsShared() {
	o.IsShared.Unset()
}

// GetDiskFormat returns the DiskFormat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsImageV1ApiGetImageModelImageModel) GetDiskFormat() string {
	if o == nil || IsNil(o.DiskFormat.Get()) {
		var ret string
		return ret
	}
	return *o.DiskFormat.Get()
}

// GetDiskFormatOk returns a tuple with the DiskFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsImageV1ApiGetImageModelImageModel) GetDiskFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DiskFormat.Get(), o.DiskFormat.IsSet()
}

// HasDiskFormat returns a boolean if a field has been set.
func (o *BcsImageV1ApiGetImageModelImageModel) HasDiskFormat() bool {
	if o != nil && o.DiskFormat.IsSet() {
		return true
	}

	return false
}

// SetDiskFormat gets a reference to the given NullableString and assigns it to the DiskFormat field.
func (o *BcsImageV1ApiGetImageModelImageModel) SetDiskFormat(v string) {
	o.DiskFormat.Set(&v)
}

// SetDiskFormatNil sets the value for DiskFormat to be an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) SetDiskFormatNil() {
	o.DiskFormat.Set(nil)
}

// UnsetDiskFormat ensures that no value is present for DiskFormat, not even an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) UnsetDiskFormat() {
	o.DiskFormat.Unset()
}

// GetContainerFormat returns the ContainerFormat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsImageV1ApiGetImageModelImageModel) GetContainerFormat() string {
	if o == nil || IsNil(o.ContainerFormat.Get()) {
		var ret string
		return ret
	}
	return *o.ContainerFormat.Get()
}

// GetContainerFormatOk returns a tuple with the ContainerFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsImageV1ApiGetImageModelImageModel) GetContainerFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContainerFormat.Get(), o.ContainerFormat.IsSet()
}

// HasContainerFormat returns a boolean if a field has been set.
func (o *BcsImageV1ApiGetImageModelImageModel) HasContainerFormat() bool {
	if o != nil && o.ContainerFormat.IsSet() {
		return true
	}

	return false
}

// SetContainerFormat gets a reference to the given NullableString and assigns it to the ContainerFormat field.
func (o *BcsImageV1ApiGetImageModelImageModel) SetContainerFormat(v string) {
	o.ContainerFormat.Set(&v)
}

// SetContainerFormatNil sets the value for ContainerFormat to be an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) SetContainerFormatNil() {
	o.ContainerFormat.Set(nil)
}

// UnsetContainerFormat ensures that no value is present for ContainerFormat, not even an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) UnsetContainerFormat() {
	o.ContainerFormat.Unset()
}

// GetMinDisk returns the MinDisk field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsImageV1ApiGetImageModelImageModel) GetMinDisk() int32 {
	if o == nil || IsNil(o.MinDisk.Get()) {
		var ret int32
		return ret
	}
	return *o.MinDisk.Get()
}

// GetMinDiskOk returns a tuple with the MinDisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsImageV1ApiGetImageModelImageModel) GetMinDiskOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinDisk.Get(), o.MinDisk.IsSet()
}

// HasMinDisk returns a boolean if a field has been set.
func (o *BcsImageV1ApiGetImageModelImageModel) HasMinDisk() bool {
	if o != nil && o.MinDisk.IsSet() {
		return true
	}

	return false
}

// SetMinDisk gets a reference to the given NullableInt32 and assigns it to the MinDisk field.
func (o *BcsImageV1ApiGetImageModelImageModel) SetMinDisk(v int32) {
	o.MinDisk.Set(&v)
}

// SetMinDiskNil sets the value for MinDisk to be an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) SetMinDiskNil() {
	o.MinDisk.Set(nil)
}

// UnsetMinDisk ensures that no value is present for MinDisk, not even an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) UnsetMinDisk() {
	o.MinDisk.Unset()
}

// GetMinRam returns the MinRam field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsImageV1ApiGetImageModelImageModel) GetMinRam() int32 {
	if o == nil || IsNil(o.MinRam.Get()) {
		var ret int32
		return ret
	}
	return *o.MinRam.Get()
}

// GetMinRamOk returns a tuple with the MinRam field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsImageV1ApiGetImageModelImageModel) GetMinRamOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinRam.Get(), o.MinRam.IsSet()
}

// HasMinRam returns a boolean if a field has been set.
func (o *BcsImageV1ApiGetImageModelImageModel) HasMinRam() bool {
	if o != nil && o.MinRam.IsSet() {
		return true
	}

	return false
}

// SetMinRam gets a reference to the given NullableInt32 and assigns it to the MinRam field.
func (o *BcsImageV1ApiGetImageModelImageModel) SetMinRam(v int32) {
	o.MinRam.Set(&v)
}

// SetMinRamNil sets the value for MinRam to be an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) SetMinRamNil() {
	o.MinRam.Set(nil)
}

// UnsetMinRam ensures that no value is present for MinRam, not even an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) UnsetMinRam() {
	o.MinRam.Unset()
}

// GetVirtualSize returns the VirtualSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsImageV1ApiGetImageModelImageModel) GetVirtualSize() int64 {
	if o == nil || IsNil(o.VirtualSize.Get()) {
		var ret int64
		return ret
	}
	return *o.VirtualSize.Get()
}

// GetVirtualSizeOk returns a tuple with the VirtualSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsImageV1ApiGetImageModelImageModel) GetVirtualSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.VirtualSize.Get(), o.VirtualSize.IsSet()
}

// HasVirtualSize returns a boolean if a field has been set.
func (o *BcsImageV1ApiGetImageModelImageModel) HasVirtualSize() bool {
	if o != nil && o.VirtualSize.IsSet() {
		return true
	}

	return false
}

// SetVirtualSize gets a reference to the given NullableInt64 and assigns it to the VirtualSize field.
func (o *BcsImageV1ApiGetImageModelImageModel) SetVirtualSize(v int64) {
	o.VirtualSize.Set(&v)
}

// SetVirtualSizeNil sets the value for VirtualSize to be an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) SetVirtualSizeNil() {
	o.VirtualSize.Set(nil)
}

// UnsetVirtualSize ensures that no value is present for VirtualSize, not even an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) UnsetVirtualSize() {
	o.VirtualSize.Unset()
}

// GetInstanceType returns the InstanceType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsImageV1ApiGetImageModelImageModel) GetInstanceType() InstanceType {
	if o == nil || IsNil(o.InstanceType.Get()) {
		var ret InstanceType
		return ret
	}
	return *o.InstanceType.Get()
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsImageV1ApiGetImageModelImageModel) GetInstanceTypeOk() (*InstanceType, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstanceType.Get(), o.InstanceType.IsSet()
}

// HasInstanceType returns a boolean if a field has been set.
func (o *BcsImageV1ApiGetImageModelImageModel) HasInstanceType() bool {
	if o != nil && o.InstanceType.IsSet() {
		return true
	}

	return false
}

// SetInstanceType gets a reference to the given NullableInstanceType and assigns it to the InstanceType field.
func (o *BcsImageV1ApiGetImageModelImageModel) SetInstanceType(v InstanceType) {
	o.InstanceType.Set(&v)
}

// SetInstanceTypeNil sets the value for InstanceType to be an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) SetInstanceTypeNil() {
	o.InstanceType.Set(nil)
}

// UnsetInstanceType ensures that no value is present for InstanceType, not even an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) UnsetInstanceType() {
	o.InstanceType.Unset()
}

// GetImageMemberStatus returns the ImageMemberStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsImageV1ApiGetImageModelImageModel) GetImageMemberStatus() string {
	if o == nil || IsNil(o.ImageMemberStatus.Get()) {
		var ret string
		return ret
	}
	return *o.ImageMemberStatus.Get()
}

// GetImageMemberStatusOk returns a tuple with the ImageMemberStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsImageV1ApiGetImageModelImageModel) GetImageMemberStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageMemberStatus.Get(), o.ImageMemberStatus.IsSet()
}

// HasImageMemberStatus returns a boolean if a field has been set.
func (o *BcsImageV1ApiGetImageModelImageModel) HasImageMemberStatus() bool {
	if o != nil && o.ImageMemberStatus.IsSet() {
		return true
	}

	return false
}

// SetImageMemberStatus gets a reference to the given NullableString and assigns it to the ImageMemberStatus field.
func (o *BcsImageV1ApiGetImageModelImageModel) SetImageMemberStatus(v string) {
	o.ImageMemberStatus.Set(&v)
}

// SetImageMemberStatusNil sets the value for ImageMemberStatus to be an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) SetImageMemberStatusNil() {
	o.ImageMemberStatus.Set(nil)
}

// UnsetImageMemberStatus ensures that no value is present for ImageMemberStatus, not even an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) UnsetImageMemberStatus() {
	o.ImageMemberStatus.Unset()
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsImageV1ApiGetImageModelImageModel) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId.Get()) {
		var ret string
		return ret
	}
	return *o.ProjectId.Get()
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsImageV1ApiGetImageModelImageModel) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectId.Get(), o.ProjectId.IsSet()
}

// HasProjectId returns a boolean if a field has been set.
func (o *BcsImageV1ApiGetImageModelImageModel) HasProjectId() bool {
	if o != nil && o.ProjectId.IsSet() {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given NullableString and assigns it to the ProjectId field.
func (o *BcsImageV1ApiGetImageModelImageModel) SetProjectId(v string) {
	o.ProjectId.Set(&v)
}

// SetProjectIdNil sets the value for ProjectId to be an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) SetProjectIdNil() {
	o.ProjectId.Set(nil)
}

// UnsetProjectId ensures that no value is present for ProjectId, not even an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) UnsetProjectId() {
	o.ProjectId.Unset()
}

// GetOsInfo returns the OsInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsImageV1ApiGetImageModelImageModel) GetOsInfo() BcsImageV1ApiGetImageModelOsInfoModel {
	if o == nil || IsNil(o.OsInfo.Get()) {
		var ret BcsImageV1ApiGetImageModelOsInfoModel
		return ret
	}
	return *o.OsInfo.Get()
}

// GetOsInfoOk returns a tuple with the OsInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsImageV1ApiGetImageModelImageModel) GetOsInfoOk() (*BcsImageV1ApiGetImageModelOsInfoModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.OsInfo.Get(), o.OsInfo.IsSet()
}

// HasOsInfo returns a boolean if a field has been set.
func (o *BcsImageV1ApiGetImageModelImageModel) HasOsInfo() bool {
	if o != nil && o.OsInfo.IsSet() {
		return true
	}

	return false
}

// SetOsInfo gets a reference to the given NullableBcsImageV1ApiGetImageModelOsInfoModel and assigns it to the OsInfo field.
func (o *BcsImageV1ApiGetImageModelImageModel) SetOsInfo(v BcsImageV1ApiGetImageModelOsInfoModel) {
	o.OsInfo.Set(&v)
}

// SetOsInfoNil sets the value for OsInfo to be an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) SetOsInfoNil() {
	o.OsInfo.Set(nil)
}

// UnsetOsInfo ensures that no value is present for OsInfo, not even an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) UnsetOsInfo() {
	o.OsInfo.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsImageV1ApiGetImageModelImageModel) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsImageV1ApiGetImageModelImageModel) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *BcsImageV1ApiGetImageModelImageModel) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given NullableTime and assigns it to the CreatedAt field.
func (o *BcsImageV1ApiGetImageModelImageModel) SetCreatedAt(v time.Time) {
	o.CreatedAt.Set(&v)
}

// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) SetCreatedAtNil() {
	o.CreatedAt.Set(nil)
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsImageV1ApiGetImageModelImageModel) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsImageV1ApiGetImageModelImageModel) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *BcsImageV1ApiGetImageModelImageModel) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableTime and assigns it to the UpdatedAt field.
func (o *BcsImageV1ApiGetImageModelImageModel) SetUpdatedAt(v time.Time) {
	o.UpdatedAt.Set(&v)
}

// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) SetUpdatedAtNil() {
	o.UpdatedAt.Set(nil)
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *BcsImageV1ApiGetImageModelImageModel) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

func (o BcsImageV1ApiGetImageModelImageModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BcsImageV1ApiGetImageModelImageModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Size.IsSet() {
		toSerialize["size"] = o.Size.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.Owner.IsSet() {
		toSerialize["owner"] = o.Owner.Get()
	}
	if o.Visibility.IsSet() {
		toSerialize["visibility"] = o.Visibility.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.IsShared.IsSet() {
		toSerialize["is_shared"] = o.IsShared.Get()
	}
	if o.DiskFormat.IsSet() {
		toSerialize["disk_format"] = o.DiskFormat.Get()
	}
	if o.ContainerFormat.IsSet() {
		toSerialize["container_format"] = o.ContainerFormat.Get()
	}
	if o.MinDisk.IsSet() {
		toSerialize["min_disk"] = o.MinDisk.Get()
	}
	if o.MinRam.IsSet() {
		toSerialize["min_ram"] = o.MinRam.Get()
	}
	if o.VirtualSize.IsSet() {
		toSerialize["virtual_size"] = o.VirtualSize.Get()
	}
	if o.InstanceType.IsSet() {
		toSerialize["instance_type"] = o.InstanceType.Get()
	}
	if o.ImageMemberStatus.IsSet() {
		toSerialize["image_member_status"] = o.ImageMemberStatus.Get()
	}
	if o.ProjectId.IsSet() {
		toSerialize["project_id"] = o.ProjectId.Get()
	}
	if o.OsInfo.IsSet() {
		toSerialize["os_info"] = o.OsInfo.Get()
	}
	if o.CreatedAt.IsSet() {
		toSerialize["created_at"] = o.CreatedAt.Get()
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["updated_at"] = o.UpdatedAt.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BcsImageV1ApiGetImageModelImageModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBcsImageV1ApiGetImageModelImageModel := _BcsImageV1ApiGetImageModelImageModel{}

	err = json.Unmarshal(data, &varBcsImageV1ApiGetImageModelImageModel)

	if err != nil {
		return err
	}

	*o = BcsImageV1ApiGetImageModelImageModel(varBcsImageV1ApiGetImageModelImageModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "size")
		delete(additionalProperties, "status")
		delete(additionalProperties, "owner")
		delete(additionalProperties, "visibility")
		delete(additionalProperties, "description")
		delete(additionalProperties, "is_shared")
		delete(additionalProperties, "disk_format")
		delete(additionalProperties, "container_format")
		delete(additionalProperties, "min_disk")
		delete(additionalProperties, "min_ram")
		delete(additionalProperties, "virtual_size")
		delete(additionalProperties, "instance_type")
		delete(additionalProperties, "image_member_status")
		delete(additionalProperties, "project_id")
		delete(additionalProperties, "os_info")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBcsImageV1ApiGetImageModelImageModel struct {
	value *BcsImageV1ApiGetImageModelImageModel
	isSet bool
}

func (v NullableBcsImageV1ApiGetImageModelImageModel) Get() *BcsImageV1ApiGetImageModelImageModel {
	return v.value
}

func (v *NullableBcsImageV1ApiGetImageModelImageModel) Set(val *BcsImageV1ApiGetImageModelImageModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBcsImageV1ApiGetImageModelImageModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBcsImageV1ApiGetImageModelImageModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBcsImageV1ApiGetImageModelImageModel(val *BcsImageV1ApiGetImageModelImageModel) *NullableBcsImageV1ApiGetImageModelImageModel {
	return &NullableBcsImageV1ApiGetImageModelImageModel{value: val, isSet: true}
}

func (v NullableBcsImageV1ApiGetImageModelImageModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBcsImageV1ApiGetImageModelImageModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
