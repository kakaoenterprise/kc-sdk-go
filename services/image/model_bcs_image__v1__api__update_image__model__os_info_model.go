/*
Beyond Compute Service(BCS) Image API

Beyond Compute Service Image API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package image

import (
	"encoding/json"
)

// checks if the BcsImageV1ApiUpdateImageModelOsInfoModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BcsImageV1ApiUpdateImageModelOsInfoModel{}

// BcsImageV1ApiUpdateImageModelOsInfoModel struct for BcsImageV1ApiUpdateImageModelOsInfoModel
type BcsImageV1ApiUpdateImageModelOsInfoModel struct {
	Type                 NullableString `json:"type,omitempty"`
	Distro               NullableString `json:"distro,omitempty"`
	Architecture         NullableString `json:"architecture,omitempty"`
	AdminUser            NullableString `json:"admin_user,omitempty"`
	IsHidden             NullableBool   `json:"is_hidden,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BcsImageV1ApiUpdateImageModelOsInfoModel BcsImageV1ApiUpdateImageModelOsInfoModel

// NewBcsImageV1ApiUpdateImageModelOsInfoModel instantiates a new BcsImageV1ApiUpdateImageModelOsInfoModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBcsImageV1ApiUpdateImageModelOsInfoModel() *BcsImageV1ApiUpdateImageModelOsInfoModel {
	this := BcsImageV1ApiUpdateImageModelOsInfoModel{}
	return &this
}

// NewBcsImageV1ApiUpdateImageModelOsInfoModelWithDefaults instantiates a new BcsImageV1ApiUpdateImageModelOsInfoModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBcsImageV1ApiUpdateImageModelOsInfoModelWithDefaults() *BcsImageV1ApiUpdateImageModelOsInfoModel {
	this := BcsImageV1ApiUpdateImageModelOsInfoModel{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) SetType(v string) {
	o.Type.Set(&v)
}

// SetTypeNil sets the value for Type to be an explicit nil
func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) UnsetType() {
	o.Type.Unset()
}

// GetDistro returns the Distro field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) GetDistro() string {
	if o == nil || IsNil(o.Distro.Get()) {
		var ret string
		return ret
	}
	return *o.Distro.Get()
}

// GetDistroOk returns a tuple with the Distro field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) GetDistroOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Distro.Get(), o.Distro.IsSet()
}

// HasDistro returns a boolean if a field has been set.
func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) HasDistro() bool {
	if o != nil && o.Distro.IsSet() {
		return true
	}

	return false
}

// SetDistro gets a reference to the given NullableString and assigns it to the Distro field.
func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) SetDistro(v string) {
	o.Distro.Set(&v)
}

// SetDistroNil sets the value for Distro to be an explicit nil
func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) SetDistroNil() {
	o.Distro.Set(nil)
}

// UnsetDistro ensures that no value is present for Distro, not even an explicit nil
func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) UnsetDistro() {
	o.Distro.Unset()
}

// GetArchitecture returns the Architecture field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) GetArchitecture() string {
	if o == nil || IsNil(o.Architecture.Get()) {
		var ret string
		return ret
	}
	return *o.Architecture.Get()
}

// GetArchitectureOk returns a tuple with the Architecture field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) GetArchitectureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Architecture.Get(), o.Architecture.IsSet()
}

// HasArchitecture returns a boolean if a field has been set.
func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) HasArchitecture() bool {
	if o != nil && o.Architecture.IsSet() {
		return true
	}

	return false
}

// SetArchitecture gets a reference to the given NullableString and assigns it to the Architecture field.
func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) SetArchitecture(v string) {
	o.Architecture.Set(&v)
}

// SetArchitectureNil sets the value for Architecture to be an explicit nil
func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) SetArchitectureNil() {
	o.Architecture.Set(nil)
}

// UnsetArchitecture ensures that no value is present for Architecture, not even an explicit nil
func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) UnsetArchitecture() {
	o.Architecture.Unset()
}

// GetAdminUser returns the AdminUser field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) GetAdminUser() string {
	if o == nil || IsNil(o.AdminUser.Get()) {
		var ret string
		return ret
	}
	return *o.AdminUser.Get()
}

// GetAdminUserOk returns a tuple with the AdminUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) GetAdminUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AdminUser.Get(), o.AdminUser.IsSet()
}

// HasAdminUser returns a boolean if a field has been set.
func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) HasAdminUser() bool {
	if o != nil && o.AdminUser.IsSet() {
		return true
	}

	return false
}

// SetAdminUser gets a reference to the given NullableString and assigns it to the AdminUser field.
func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) SetAdminUser(v string) {
	o.AdminUser.Set(&v)
}

// SetAdminUserNil sets the value for AdminUser to be an explicit nil
func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) SetAdminUserNil() {
	o.AdminUser.Set(nil)
}

// UnsetAdminUser ensures that no value is present for AdminUser, not even an explicit nil
func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) UnsetAdminUser() {
	o.AdminUser.Unset()
}

// GetIsHidden returns the IsHidden field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) GetIsHidden() bool {
	if o == nil || IsNil(o.IsHidden.Get()) {
		var ret bool
		return ret
	}
	return *o.IsHidden.Get()
}

// GetIsHiddenOk returns a tuple with the IsHidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) GetIsHiddenOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsHidden.Get(), o.IsHidden.IsSet()
}

// HasIsHidden returns a boolean if a field has been set.
func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) HasIsHidden() bool {
	if o != nil && o.IsHidden.IsSet() {
		return true
	}

	return false
}

// SetIsHidden gets a reference to the given NullableBool and assigns it to the IsHidden field.
func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) SetIsHidden(v bool) {
	o.IsHidden.Set(&v)
}

// SetIsHiddenNil sets the value for IsHidden to be an explicit nil
func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) SetIsHiddenNil() {
	o.IsHidden.Set(nil)
}

// UnsetIsHidden ensures that no value is present for IsHidden, not even an explicit nil
func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) UnsetIsHidden() {
	o.IsHidden.Unset()
}

func (o BcsImageV1ApiUpdateImageModelOsInfoModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BcsImageV1ApiUpdateImageModelOsInfoModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.Distro.IsSet() {
		toSerialize["distro"] = o.Distro.Get()
	}
	if o.Architecture.IsSet() {
		toSerialize["architecture"] = o.Architecture.Get()
	}
	if o.AdminUser.IsSet() {
		toSerialize["admin_user"] = o.AdminUser.Get()
	}
	if o.IsHidden.IsSet() {
		toSerialize["is_hidden"] = o.IsHidden.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BcsImageV1ApiUpdateImageModelOsInfoModel) UnmarshalJSON(data []byte) (err error) {
	varBcsImageV1ApiUpdateImageModelOsInfoModel := _BcsImageV1ApiUpdateImageModelOsInfoModel{}

	err = json.Unmarshal(data, &varBcsImageV1ApiUpdateImageModelOsInfoModel)

	if err != nil {
		return err
	}

	*o = BcsImageV1ApiUpdateImageModelOsInfoModel(varBcsImageV1ApiUpdateImageModelOsInfoModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "distro")
		delete(additionalProperties, "architecture")
		delete(additionalProperties, "admin_user")
		delete(additionalProperties, "is_hidden")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBcsImageV1ApiUpdateImageModelOsInfoModel struct {
	value *BcsImageV1ApiUpdateImageModelOsInfoModel
	isSet bool
}

func (v NullableBcsImageV1ApiUpdateImageModelOsInfoModel) Get() *BcsImageV1ApiUpdateImageModelOsInfoModel {
	return v.value
}

func (v *NullableBcsImageV1ApiUpdateImageModelOsInfoModel) Set(val *BcsImageV1ApiUpdateImageModelOsInfoModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBcsImageV1ApiUpdateImageModelOsInfoModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBcsImageV1ApiUpdateImageModelOsInfoModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBcsImageV1ApiUpdateImageModelOsInfoModel(val *BcsImageV1ApiUpdateImageModelOsInfoModel) *NullableBcsImageV1ApiUpdateImageModelOsInfoModel {
	return &NullableBcsImageV1ApiUpdateImageModelOsInfoModel{value: val, isSet: true}
}

func (v NullableBcsImageV1ApiUpdateImageModelOsInfoModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBcsImageV1ApiUpdateImageModelOsInfoModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
