/*
Beyond Compute Service(BCS) Image API

Beyond Compute Service Image API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package image

import (
	"encoding/json"
	"fmt"
)

// checks if the BcsImageV1ApiUpdateImageModelResponseImageModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BcsImageV1ApiUpdateImageModelResponseImageModel{}

// BcsImageV1ApiUpdateImageModelResponseImageModel struct for BcsImageV1ApiUpdateImageModelResponseImageModel
type BcsImageV1ApiUpdateImageModelResponseImageModel struct {
	Image                BcsImageV1ApiUpdateImageModelImageModel `json:"image"`
	AdditionalProperties map[string]interface{}
}

type _BcsImageV1ApiUpdateImageModelResponseImageModel BcsImageV1ApiUpdateImageModelResponseImageModel

// NewBcsImageV1ApiUpdateImageModelResponseImageModel instantiates a new BcsImageV1ApiUpdateImageModelResponseImageModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBcsImageV1ApiUpdateImageModelResponseImageModel(image BcsImageV1ApiUpdateImageModelImageModel) *BcsImageV1ApiUpdateImageModelResponseImageModel {
	this := BcsImageV1ApiUpdateImageModelResponseImageModel{}
	this.Image = image
	return &this
}

// NewBcsImageV1ApiUpdateImageModelResponseImageModelWithDefaults instantiates a new BcsImageV1ApiUpdateImageModelResponseImageModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBcsImageV1ApiUpdateImageModelResponseImageModelWithDefaults() *BcsImageV1ApiUpdateImageModelResponseImageModel {
	this := BcsImageV1ApiUpdateImageModelResponseImageModel{}
	return &this
}

// GetImage returns the Image field value
func (o *BcsImageV1ApiUpdateImageModelResponseImageModel) GetImage() BcsImageV1ApiUpdateImageModelImageModel {
	if o == nil {
		var ret BcsImageV1ApiUpdateImageModelImageModel
		return ret
	}

	return o.Image
}

// GetImageOk returns a tuple with the Image field value
// and a boolean to check if the value has been set.
func (o *BcsImageV1ApiUpdateImageModelResponseImageModel) GetImageOk() (*BcsImageV1ApiUpdateImageModelImageModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Image, true
}

// SetImage sets field value
func (o *BcsImageV1ApiUpdateImageModelResponseImageModel) SetImage(v BcsImageV1ApiUpdateImageModelImageModel) {
	o.Image = v
}

func (o BcsImageV1ApiUpdateImageModelResponseImageModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BcsImageV1ApiUpdateImageModelResponseImageModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["image"] = o.Image

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BcsImageV1ApiUpdateImageModelResponseImageModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"image",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBcsImageV1ApiUpdateImageModelResponseImageModel := _BcsImageV1ApiUpdateImageModelResponseImageModel{}

	err = json.Unmarshal(data, &varBcsImageV1ApiUpdateImageModelResponseImageModel)

	if err != nil {
		return err
	}

	*o = BcsImageV1ApiUpdateImageModelResponseImageModel(varBcsImageV1ApiUpdateImageModelResponseImageModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "image")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBcsImageV1ApiUpdateImageModelResponseImageModel struct {
	value *BcsImageV1ApiUpdateImageModelResponseImageModel
	isSet bool
}

func (v NullableBcsImageV1ApiUpdateImageModelResponseImageModel) Get() *BcsImageV1ApiUpdateImageModelResponseImageModel {
	return v.value
}

func (v *NullableBcsImageV1ApiUpdateImageModelResponseImageModel) Set(val *BcsImageV1ApiUpdateImageModelResponseImageModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBcsImageV1ApiUpdateImageModelResponseImageModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBcsImageV1ApiUpdateImageModelResponseImageModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBcsImageV1ApiUpdateImageModelResponseImageModel(val *BcsImageV1ApiUpdateImageModelResponseImageModel) *NullableBcsImageV1ApiUpdateImageModelResponseImageModel {
	return &NullableBcsImageV1ApiUpdateImageModelResponseImageModel{value: val, isSet: true}
}

func (v NullableBcsImageV1ApiUpdateImageModelResponseImageModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBcsImageV1ApiUpdateImageModelResponseImageModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
