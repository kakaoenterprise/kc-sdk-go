/*
kubernetes-engine API

kubernetes-engine API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kubernetesengine

import (
	"encoding/json"
	"fmt"
)

// ClusterNetworkCNI the model 'ClusterNetworkCNI'
type ClusterNetworkCNI string

// List of ClusterNetworkCNI
const (
	CLUSTERNETWORKCNI_CILIUM ClusterNetworkCNI = "cilium"
	CLUSTERNETWORKCNI_CALICO ClusterNetworkCNI = "calico"
)

// All allowed values of ClusterNetworkCNI enum
var AllowedClusterNetworkCNIEnumValues = []ClusterNetworkCNI{
	"cilium",
	"calico",
}

func (v *ClusterNetworkCNI) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ClusterNetworkCNI(value)
	for _, existing := range AllowedClusterNetworkCNIEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ClusterNetworkCNI", value)
}

// NewClusterNetworkCNIFromValue returns a pointer to a valid ClusterNetworkCNI
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewClusterNetworkCNIFromValue(v string) (*ClusterNetworkCNI, error) {
	ev := ClusterNetworkCNI(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ClusterNetworkCNI: valid values are %v", v, AllowedClusterNetworkCNIEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ClusterNetworkCNI) IsValid() bool {
	for _, existing := range AllowedClusterNetworkCNIEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ClusterNetworkCNI value
func (v ClusterNetworkCNI) Ptr() *ClusterNetworkCNI {
	return &v
}

type NullableClusterNetworkCNI struct {
	value *ClusterNetworkCNI
	isSet bool
}

func (v NullableClusterNetworkCNI) Get() *ClusterNetworkCNI {
	return v.value
}

func (v *NullableClusterNetworkCNI) Set(val *ClusterNetworkCNI) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterNetworkCNI) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterNetworkCNI) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterNetworkCNI(val *ClusterNetworkCNI) *NullableClusterNetworkCNI {
	return &NullableClusterNetworkCNI{value: val, isSet: true}
}

func (v NullableClusterNetworkCNI) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterNetworkCNI) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
