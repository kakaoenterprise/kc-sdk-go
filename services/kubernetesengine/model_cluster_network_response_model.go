/*
kubernetes-engine API

kubernetes-engine API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kubernetesengine

import (
	"encoding/json"
	"fmt"
)

// checks if the ClusterNetworkResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterNetworkResponseModel{}

// ClusterNetworkResponseModel struct for ClusterNetworkResponseModel
type ClusterNetworkResponseModel struct {
	// 사용 중인 CNI(Container Network Interface) 플러그인 <br/> - `cilium`: eBPF 기반의 고성능 CNI, 낮은 지연과 강력한 보안 정책 지원  <br/> - `calico`: 가장 널리 쓰이는 CNI, 단순한 설정과 다양한 네트워크 모드 제공
	Cni ClusterNetworkCNI `json:"cni"`
	// 파드가 수신하는 IP
	PodCidr string `json:"pod_cidr"`
	// 클러스터의 서비스 객체가 수신하는 IP
	ServiceCidr          string `json:"service_cidr"`
	AdditionalProperties map[string]interface{}
}

type _ClusterNetworkResponseModel ClusterNetworkResponseModel

// NewClusterNetworkResponseModel instantiates a new ClusterNetworkResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterNetworkResponseModel(cni ClusterNetworkCNI, podCidr string, serviceCidr string) *ClusterNetworkResponseModel {
	this := ClusterNetworkResponseModel{}
	this.Cni = cni
	this.PodCidr = podCidr
	this.ServiceCidr = serviceCidr
	return &this
}

// NewClusterNetworkResponseModelWithDefaults instantiates a new ClusterNetworkResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterNetworkResponseModelWithDefaults() *ClusterNetworkResponseModel {
	this := ClusterNetworkResponseModel{}
	return &this
}

// GetCni returns the Cni field value
func (o *ClusterNetworkResponseModel) GetCni() ClusterNetworkCNI {
	if o == nil {
		var ret ClusterNetworkCNI
		return ret
	}

	return o.Cni
}

// GetCniOk returns a tuple with the Cni field value
// and a boolean to check if the value has been set.
func (o *ClusterNetworkResponseModel) GetCniOk() (*ClusterNetworkCNI, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cni, true
}

// SetCni sets field value
func (o *ClusterNetworkResponseModel) SetCni(v ClusterNetworkCNI) {
	o.Cni = v
}

// GetPodCidr returns the PodCidr field value
func (o *ClusterNetworkResponseModel) GetPodCidr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PodCidr
}

// GetPodCidrOk returns a tuple with the PodCidr field value
// and a boolean to check if the value has been set.
func (o *ClusterNetworkResponseModel) GetPodCidrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PodCidr, true
}

// SetPodCidr sets field value
func (o *ClusterNetworkResponseModel) SetPodCidr(v string) {
	o.PodCidr = v
}

// GetServiceCidr returns the ServiceCidr field value
func (o *ClusterNetworkResponseModel) GetServiceCidr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceCidr
}

// GetServiceCidrOk returns a tuple with the ServiceCidr field value
// and a boolean to check if the value has been set.
func (o *ClusterNetworkResponseModel) GetServiceCidrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceCidr, true
}

// SetServiceCidr sets field value
func (o *ClusterNetworkResponseModel) SetServiceCidr(v string) {
	o.ServiceCidr = v
}

func (o ClusterNetworkResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterNetworkResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cni"] = o.Cni
	toSerialize["pod_cidr"] = o.PodCidr
	toSerialize["service_cidr"] = o.ServiceCidr

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ClusterNetworkResponseModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cni",
		"pod_cidr",
		"service_cidr",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClusterNetworkResponseModel := _ClusterNetworkResponseModel{}

	err = json.Unmarshal(data, &varClusterNetworkResponseModel)

	if err != nil {
		return err
	}

	*o = ClusterNetworkResponseModel(varClusterNetworkResponseModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "cni")
		delete(additionalProperties, "pod_cidr")
		delete(additionalProperties, "service_cidr")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableClusterNetworkResponseModel struct {
	value *ClusterNetworkResponseModel
	isSet bool
}

func (v NullableClusterNetworkResponseModel) Get() *ClusterNetworkResponseModel {
	return v.value
}

func (v *NullableClusterNetworkResponseModel) Set(val *ClusterNetworkResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterNetworkResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterNetworkResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterNetworkResponseModel(val *ClusterNetworkResponseModel) *NullableClusterNetworkResponseModel {
	return &NullableClusterNetworkResponseModel{value: val, isSet: true}
}

func (v NullableClusterNetworkResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterNetworkResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
