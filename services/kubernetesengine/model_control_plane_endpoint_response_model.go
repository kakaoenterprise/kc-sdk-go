/*
kubernetes-engine API

kubernetes-engine API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kubernetesengine

import (
	"encoding/json"
	"fmt"
)

// checks if the ControlPlaneEndpointResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ControlPlaneEndpointResponseModel{}

// ControlPlaneEndpointResponseModel struct for ControlPlaneEndpointResponseModel
type ControlPlaneEndpointResponseModel struct {
	// 컨트롤 플레인 접속 주소
	Host string `json:"host"`
	// 컨트롤 플레인 접속 포트
	Port                 int32 `json:"port"`
	AdditionalProperties map[string]interface{}
}

type _ControlPlaneEndpointResponseModel ControlPlaneEndpointResponseModel

// NewControlPlaneEndpointResponseModel instantiates a new ControlPlaneEndpointResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewControlPlaneEndpointResponseModel(host string, port int32) *ControlPlaneEndpointResponseModel {
	this := ControlPlaneEndpointResponseModel{}
	this.Host = host
	this.Port = port
	return &this
}

// NewControlPlaneEndpointResponseModelWithDefaults instantiates a new ControlPlaneEndpointResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewControlPlaneEndpointResponseModelWithDefaults() *ControlPlaneEndpointResponseModel {
	this := ControlPlaneEndpointResponseModel{}
	return &this
}

// GetHost returns the Host field value
func (o *ControlPlaneEndpointResponseModel) GetHost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Host
}

// GetHostOk returns a tuple with the Host field value
// and a boolean to check if the value has been set.
func (o *ControlPlaneEndpointResponseModel) GetHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Host, true
}

// SetHost sets field value
func (o *ControlPlaneEndpointResponseModel) SetHost(v string) {
	o.Host = v
}

// GetPort returns the Port field value
func (o *ControlPlaneEndpointResponseModel) GetPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *ControlPlaneEndpointResponseModel) GetPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *ControlPlaneEndpointResponseModel) SetPort(v int32) {
	o.Port = v
}

func (o ControlPlaneEndpointResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ControlPlaneEndpointResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["host"] = o.Host
	toSerialize["port"] = o.Port

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ControlPlaneEndpointResponseModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"host",
		"port",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varControlPlaneEndpointResponseModel := _ControlPlaneEndpointResponseModel{}

	err = json.Unmarshal(data, &varControlPlaneEndpointResponseModel)

	if err != nil {
		return err
	}

	*o = ControlPlaneEndpointResponseModel(varControlPlaneEndpointResponseModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "host")
		delete(additionalProperties, "port")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableControlPlaneEndpointResponseModel struct {
	value *ControlPlaneEndpointResponseModel
	isSet bool
}

func (v NullableControlPlaneEndpointResponseModel) Get() *ControlPlaneEndpointResponseModel {
	return v.value
}

func (v *NullableControlPlaneEndpointResponseModel) Set(val *ControlPlaneEndpointResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableControlPlaneEndpointResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableControlPlaneEndpointResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableControlPlaneEndpointResponseModel(val *ControlPlaneEndpointResponseModel) *NullableControlPlaneEndpointResponseModel {
	return &NullableControlPlaneEndpointResponseModel{value: val, isSet: true}
}

func (v NullableControlPlaneEndpointResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableControlPlaneEndpointResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
