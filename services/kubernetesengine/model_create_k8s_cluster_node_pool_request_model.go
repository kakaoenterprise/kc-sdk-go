/*
kubernetes-engine API

kubernetes-engine API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kubernetesengine

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateK8sClusterNodePoolRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateK8sClusterNodePoolRequestModel{}

// CreateK8sClusterNodePoolRequestModel struct for CreateK8sClusterNodePoolRequestModel
type CreateK8sClusterNodePoolRequestModel struct {
	// 대상 노드 풀
	NodePool             KubernetesEngineV1ApiCreateNodePoolModelNodePoolRequestModel `json:"node_pool"`
	AdditionalProperties map[string]interface{}
}

type _CreateK8sClusterNodePoolRequestModel CreateK8sClusterNodePoolRequestModel

// NewCreateK8sClusterNodePoolRequestModel instantiates a new CreateK8sClusterNodePoolRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateK8sClusterNodePoolRequestModel(nodePool KubernetesEngineV1ApiCreateNodePoolModelNodePoolRequestModel) *CreateK8sClusterNodePoolRequestModel {
	this := CreateK8sClusterNodePoolRequestModel{}
	this.NodePool = nodePool
	return &this
}

// NewCreateK8sClusterNodePoolRequestModelWithDefaults instantiates a new CreateK8sClusterNodePoolRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateK8sClusterNodePoolRequestModelWithDefaults() *CreateK8sClusterNodePoolRequestModel {
	this := CreateK8sClusterNodePoolRequestModel{}
	return &this
}

// GetNodePool returns the NodePool field value
func (o *CreateK8sClusterNodePoolRequestModel) GetNodePool() KubernetesEngineV1ApiCreateNodePoolModelNodePoolRequestModel {
	if o == nil {
		var ret KubernetesEngineV1ApiCreateNodePoolModelNodePoolRequestModel
		return ret
	}

	return o.NodePool
}

// GetNodePoolOk returns a tuple with the NodePool field value
// and a boolean to check if the value has been set.
func (o *CreateK8sClusterNodePoolRequestModel) GetNodePoolOk() (*KubernetesEngineV1ApiCreateNodePoolModelNodePoolRequestModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodePool, true
}

// SetNodePool sets field value
func (o *CreateK8sClusterNodePoolRequestModel) SetNodePool(v KubernetesEngineV1ApiCreateNodePoolModelNodePoolRequestModel) {
	o.NodePool = v
}

func (o CreateK8sClusterNodePoolRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateK8sClusterNodePoolRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["node_pool"] = o.NodePool

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateK8sClusterNodePoolRequestModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"node_pool",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateK8sClusterNodePoolRequestModel := _CreateK8sClusterNodePoolRequestModel{}

	err = json.Unmarshal(data, &varCreateK8sClusterNodePoolRequestModel)

	if err != nil {
		return err
	}

	*o = CreateK8sClusterNodePoolRequestModel(varCreateK8sClusterNodePoolRequestModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "node_pool")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateK8sClusterNodePoolRequestModel struct {
	value *CreateK8sClusterNodePoolRequestModel
	isSet bool
}

func (v NullableCreateK8sClusterNodePoolRequestModel) Get() *CreateK8sClusterNodePoolRequestModel {
	return v.value
}

func (v *NullableCreateK8sClusterNodePoolRequestModel) Set(val *CreateK8sClusterNodePoolRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateK8sClusterNodePoolRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateK8sClusterNodePoolRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateK8sClusterNodePoolRequestModel(val *CreateK8sClusterNodePoolRequestModel) *NullableCreateK8sClusterNodePoolRequestModel {
	return &NullableCreateK8sClusterNodePoolRequestModel{value: val, isSet: true}
}

func (v NullableCreateK8sClusterNodePoolRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateK8sClusterNodePoolRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
