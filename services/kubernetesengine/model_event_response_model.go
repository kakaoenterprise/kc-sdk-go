/*
kubernetes-engine API

kubernetes-engine API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kubernetesengine

import (
	"encoding/json"
	"fmt"
)

// checks if the EventResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EventResponseModel{}

// EventResponseModel struct for EventResponseModel
type EventResponseModel struct {
	// 이벤트를 발생시킨 컴포넌트
	Component string `json:"component"`
	// 이벤트 발생 시각
	CreationTimestamp string `json:"creation_timestamp"`
	// 이벤트 메시지
	Message string `json:"message"`
	// 이벤트 발생 원인
	Reason string `json:"reason"`
	// 이벤트 종류
	Type                 string `json:"type"`
	AdditionalProperties map[string]interface{}
}

type _EventResponseModel EventResponseModel

// NewEventResponseModel instantiates a new EventResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventResponseModel(component string, creationTimestamp string, message string, reason string, type_ string) *EventResponseModel {
	this := EventResponseModel{}
	this.Component = component
	this.CreationTimestamp = creationTimestamp
	this.Message = message
	this.Reason = reason
	this.Type = type_
	return &this
}

// NewEventResponseModelWithDefaults instantiates a new EventResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventResponseModelWithDefaults() *EventResponseModel {
	this := EventResponseModel{}
	return &this
}

// GetComponent returns the Component field value
func (o *EventResponseModel) GetComponent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Component
}

// GetComponentOk returns a tuple with the Component field value
// and a boolean to check if the value has been set.
func (o *EventResponseModel) GetComponentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Component, true
}

// SetComponent sets field value
func (o *EventResponseModel) SetComponent(v string) {
	o.Component = v
}

// GetCreationTimestamp returns the CreationTimestamp field value
func (o *EventResponseModel) GetCreationTimestamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreationTimestamp
}

// GetCreationTimestampOk returns a tuple with the CreationTimestamp field value
// and a boolean to check if the value has been set.
func (o *EventResponseModel) GetCreationTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreationTimestamp, true
}

// SetCreationTimestamp sets field value
func (o *EventResponseModel) SetCreationTimestamp(v string) {
	o.CreationTimestamp = v
}

// GetMessage returns the Message field value
func (o *EventResponseModel) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *EventResponseModel) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *EventResponseModel) SetMessage(v string) {
	o.Message = v
}

// GetReason returns the Reason field value
func (o *EventResponseModel) GetReason() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reason
}

// GetReasonOk returns a tuple with the Reason field value
// and a boolean to check if the value has been set.
func (o *EventResponseModel) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reason, true
}

// SetReason sets field value
func (o *EventResponseModel) SetReason(v string) {
	o.Reason = v
}

// GetType returns the Type field value
func (o *EventResponseModel) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *EventResponseModel) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *EventResponseModel) SetType(v string) {
	o.Type = v
}

func (o EventResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EventResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["component"] = o.Component
	toSerialize["creation_timestamp"] = o.CreationTimestamp
	toSerialize["message"] = o.Message
	toSerialize["reason"] = o.Reason
	toSerialize["type"] = o.Type

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EventResponseModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"component",
		"creation_timestamp",
		"message",
		"reason",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEventResponseModel := _EventResponseModel{}

	err = json.Unmarshal(data, &varEventResponseModel)

	if err != nil {
		return err
	}

	*o = EventResponseModel(varEventResponseModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "component")
		delete(additionalProperties, "creation_timestamp")
		delete(additionalProperties, "message")
		delete(additionalProperties, "reason")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEventResponseModel struct {
	value *EventResponseModel
	isSet bool
}

func (v NullableEventResponseModel) Get() *EventResponseModel {
	return v.value
}

func (v *NullableEventResponseModel) Set(val *EventResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableEventResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableEventResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventResponseModel(val *EventResponseModel) *NullableEventResponseModel {
	return &NullableEventResponseModel{value: val, isSet: true}
}

func (v NullableEventResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
