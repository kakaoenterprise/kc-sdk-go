/*
kubernetes-engine API

kubernetes-engine API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kubernetesengine

import (
	"encoding/json"
	"fmt"
)

// checks if the GetK8sImagesResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetK8sImagesResponseModel{}

// GetK8sImagesResponseModel struct for GetK8sImagesResponseModel
type GetK8sImagesResponseModel struct {
	// 이미지 정보
	Images               []ImageResponseModel `json:"images"`
	AdditionalProperties map[string]interface{}
}

type _GetK8sImagesResponseModel GetK8sImagesResponseModel

// NewGetK8sImagesResponseModel instantiates a new GetK8sImagesResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetK8sImagesResponseModel(images []ImageResponseModel) *GetK8sImagesResponseModel {
	this := GetK8sImagesResponseModel{}
	this.Images = images
	return &this
}

// NewGetK8sImagesResponseModelWithDefaults instantiates a new GetK8sImagesResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetK8sImagesResponseModelWithDefaults() *GetK8sImagesResponseModel {
	this := GetK8sImagesResponseModel{}
	return &this
}

// GetImages returns the Images field value
func (o *GetK8sImagesResponseModel) GetImages() []ImageResponseModel {
	if o == nil {
		var ret []ImageResponseModel
		return ret
	}

	return o.Images
}

// GetImagesOk returns a tuple with the Images field value
// and a boolean to check if the value has been set.
func (o *GetK8sImagesResponseModel) GetImagesOk() ([]ImageResponseModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Images, true
}

// SetImages sets field value
func (o *GetK8sImagesResponseModel) SetImages(v []ImageResponseModel) {
	o.Images = v
}

func (o GetK8sImagesResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetK8sImagesResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["images"] = o.Images

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetK8sImagesResponseModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"images",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetK8sImagesResponseModel := _GetK8sImagesResponseModel{}

	err = json.Unmarshal(data, &varGetK8sImagesResponseModel)

	if err != nil {
		return err
	}

	*o = GetK8sImagesResponseModel(varGetK8sImagesResponseModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "images")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetK8sImagesResponseModel struct {
	value *GetK8sImagesResponseModel
	isSet bool
}

func (v NullableGetK8sImagesResponseModel) Get() *GetK8sImagesResponseModel {
	return v.value
}

func (v *NullableGetK8sImagesResponseModel) Set(val *GetK8sImagesResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableGetK8sImagesResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableGetK8sImagesResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetK8sImagesResponseModel(val *GetK8sImagesResponseModel) *NullableGetK8sImagesResponseModel {
	return &NullableGetK8sImagesResponseModel{value: val, isSet: true}
}

func (v NullableGetK8sImagesResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetK8sImagesResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
