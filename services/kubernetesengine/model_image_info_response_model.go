/*
kubernetes-engine API

kubernetes-engine API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kubernetesengine

import (
	"encoding/json"
	"fmt"
)

// checks if the ImageInfoResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImageInfoResponseModel{}

// ImageInfoResponseModel struct for ImageInfoResponseModel
type ImageInfoResponseModel struct {
	// 이미지 아키텍처
	Architecture string `json:"architecture"`
	// GPU 지원 이미지 여부
	IsGpuType bool `json:"is_gpu_type"`
	// 이미지의 고유 ID
	Id string `json:"id"`
	// 이미지가 지원하는 인스턴스 유형
	InstanceType string `json:"instance_type"`
	// 커널 버전
	KernelVersion string `json:"kernel_version"`
	// 이미지에 포함된 키 패키지 정보
	KeyPackage string `json:"key_package"`
	// 이미지 이름
	Name string `json:"name"`
	// 운영체제 배포판
	OsDistro string `json:"os_distro"`
	// 운영체제 유형
	OsType string `json:"os_type"`
	// 운영체제 버전
	OsVersion            string `json:"os_version"`
	AdditionalProperties map[string]interface{}
}

type _ImageInfoResponseModel ImageInfoResponseModel

// NewImageInfoResponseModel instantiates a new ImageInfoResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageInfoResponseModel(architecture string, isGpuType bool, id string, instanceType string, kernelVersion string, keyPackage string, name string, osDistro string, osType string, osVersion string) *ImageInfoResponseModel {
	this := ImageInfoResponseModel{}
	this.Architecture = architecture
	this.IsGpuType = isGpuType
	this.Id = id
	this.InstanceType = instanceType
	this.KernelVersion = kernelVersion
	this.KeyPackage = keyPackage
	this.Name = name
	this.OsDistro = osDistro
	this.OsType = osType
	this.OsVersion = osVersion
	return &this
}

// NewImageInfoResponseModelWithDefaults instantiates a new ImageInfoResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageInfoResponseModelWithDefaults() *ImageInfoResponseModel {
	this := ImageInfoResponseModel{}
	return &this
}

// GetArchitecture returns the Architecture field value
func (o *ImageInfoResponseModel) GetArchitecture() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Architecture
}

// GetArchitectureOk returns a tuple with the Architecture field value
// and a boolean to check if the value has been set.
func (o *ImageInfoResponseModel) GetArchitectureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Architecture, true
}

// SetArchitecture sets field value
func (o *ImageInfoResponseModel) SetArchitecture(v string) {
	o.Architecture = v
}

// GetIsGpuType returns the IsGpuType field value
func (o *ImageInfoResponseModel) GetIsGpuType() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsGpuType
}

// GetIsGpuTypeOk returns a tuple with the IsGpuType field value
// and a boolean to check if the value has been set.
func (o *ImageInfoResponseModel) GetIsGpuTypeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsGpuType, true
}

// SetIsGpuType sets field value
func (o *ImageInfoResponseModel) SetIsGpuType(v bool) {
	o.IsGpuType = v
}

// GetId returns the Id field value
func (o *ImageInfoResponseModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ImageInfoResponseModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ImageInfoResponseModel) SetId(v string) {
	o.Id = v
}

// GetInstanceType returns the InstanceType field value
func (o *ImageInfoResponseModel) GetInstanceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceType
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value
// and a boolean to check if the value has been set.
func (o *ImageInfoResponseModel) GetInstanceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceType, true
}

// SetInstanceType sets field value
func (o *ImageInfoResponseModel) SetInstanceType(v string) {
	o.InstanceType = v
}

// GetKernelVersion returns the KernelVersion field value
func (o *ImageInfoResponseModel) GetKernelVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KernelVersion
}

// GetKernelVersionOk returns a tuple with the KernelVersion field value
// and a boolean to check if the value has been set.
func (o *ImageInfoResponseModel) GetKernelVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KernelVersion, true
}

// SetKernelVersion sets field value
func (o *ImageInfoResponseModel) SetKernelVersion(v string) {
	o.KernelVersion = v
}

// GetKeyPackage returns the KeyPackage field value
func (o *ImageInfoResponseModel) GetKeyPackage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeyPackage
}

// GetKeyPackageOk returns a tuple with the KeyPackage field value
// and a boolean to check if the value has been set.
func (o *ImageInfoResponseModel) GetKeyPackageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyPackage, true
}

// SetKeyPackage sets field value
func (o *ImageInfoResponseModel) SetKeyPackage(v string) {
	o.KeyPackage = v
}

// GetName returns the Name field value
func (o *ImageInfoResponseModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ImageInfoResponseModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ImageInfoResponseModel) SetName(v string) {
	o.Name = v
}

// GetOsDistro returns the OsDistro field value
func (o *ImageInfoResponseModel) GetOsDistro() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OsDistro
}

// GetOsDistroOk returns a tuple with the OsDistro field value
// and a boolean to check if the value has been set.
func (o *ImageInfoResponseModel) GetOsDistroOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OsDistro, true
}

// SetOsDistro sets field value
func (o *ImageInfoResponseModel) SetOsDistro(v string) {
	o.OsDistro = v
}

// GetOsType returns the OsType field value
func (o *ImageInfoResponseModel) GetOsType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OsType
}

// GetOsTypeOk returns a tuple with the OsType field value
// and a boolean to check if the value has been set.
func (o *ImageInfoResponseModel) GetOsTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OsType, true
}

// SetOsType sets field value
func (o *ImageInfoResponseModel) SetOsType(v string) {
	o.OsType = v
}

// GetOsVersion returns the OsVersion field value
func (o *ImageInfoResponseModel) GetOsVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OsVersion
}

// GetOsVersionOk returns a tuple with the OsVersion field value
// and a boolean to check if the value has been set.
func (o *ImageInfoResponseModel) GetOsVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OsVersion, true
}

// SetOsVersion sets field value
func (o *ImageInfoResponseModel) SetOsVersion(v string) {
	o.OsVersion = v
}

func (o ImageInfoResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImageInfoResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["architecture"] = o.Architecture
	toSerialize["is_gpu_type"] = o.IsGpuType
	toSerialize["id"] = o.Id
	toSerialize["instance_type"] = o.InstanceType
	toSerialize["kernel_version"] = o.KernelVersion
	toSerialize["key_package"] = o.KeyPackage
	toSerialize["name"] = o.Name
	toSerialize["os_distro"] = o.OsDistro
	toSerialize["os_type"] = o.OsType
	toSerialize["os_version"] = o.OsVersion

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ImageInfoResponseModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"architecture",
		"is_gpu_type",
		"id",
		"instance_type",
		"kernel_version",
		"key_package",
		"name",
		"os_distro",
		"os_type",
		"os_version",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varImageInfoResponseModel := _ImageInfoResponseModel{}

	err = json.Unmarshal(data, &varImageInfoResponseModel)

	if err != nil {
		return err
	}

	*o = ImageInfoResponseModel(varImageInfoResponseModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "architecture")
		delete(additionalProperties, "is_gpu_type")
		delete(additionalProperties, "id")
		delete(additionalProperties, "instance_type")
		delete(additionalProperties, "kernel_version")
		delete(additionalProperties, "key_package")
		delete(additionalProperties, "name")
		delete(additionalProperties, "os_distro")
		delete(additionalProperties, "os_type")
		delete(additionalProperties, "os_version")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableImageInfoResponseModel struct {
	value *ImageInfoResponseModel
	isSet bool
}

func (v NullableImageInfoResponseModel) Get() *ImageInfoResponseModel {
	return v.value
}

func (v *NullableImageInfoResponseModel) Set(val *ImageInfoResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableImageInfoResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableImageInfoResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageInfoResponseModel(val *ImageInfoResponseModel) *NullableImageInfoResponseModel {
	return &NullableImageInfoResponseModel{value: val, isSet: true}
}

func (v NullableImageInfoResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageInfoResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
