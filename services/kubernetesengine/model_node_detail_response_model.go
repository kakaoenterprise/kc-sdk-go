/*
kubernetes-engine API

kubernetes-engine API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kubernetesengine

import (
	"encoding/json"
	"fmt"
)

// checks if the NodeDetailResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NodeDetailResponseModel{}

// NodeDetailResponseModel struct for NodeDetailResponseModel
type NodeDetailResponseModel struct {
	// API 버전
	ApiVersion string               `json:"api_version"`
	Events     []EventResponseModel `json:"events,omitempty"`
	// 리소스 종류
	Kind                 string                                                                     `json:"kind"`
	Metadata             NullableMetadataResponseModel                                              `json:"metadata,omitempty"`
	Pods                 []PodResponseModel                                                         `json:"pods,omitempty"`
	Spec                 NullableSpecResponseModel                                                  `json:"spec,omitempty"`
	Status               NullableKubernetesEngineV1ApiGetClusterNodeDetailsModelStatusResponseModel `json:"status,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _NodeDetailResponseModel NodeDetailResponseModel

// NewNodeDetailResponseModel instantiates a new NodeDetailResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodeDetailResponseModel(apiVersion string, kind string) *NodeDetailResponseModel {
	this := NodeDetailResponseModel{}
	this.ApiVersion = apiVersion
	this.Kind = kind
	return &this
}

// NewNodeDetailResponseModelWithDefaults instantiates a new NodeDetailResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodeDetailResponseModelWithDefaults() *NodeDetailResponseModel {
	this := NodeDetailResponseModel{}
	return &this
}

// GetApiVersion returns the ApiVersion field value
func (o *NodeDetailResponseModel) GetApiVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value
// and a boolean to check if the value has been set.
func (o *NodeDetailResponseModel) GetApiVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiVersion, true
}

// SetApiVersion sets field value
func (o *NodeDetailResponseModel) SetApiVersion(v string) {
	o.ApiVersion = v
}

// GetEvents returns the Events field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NodeDetailResponseModel) GetEvents() []EventResponseModel {
	if o == nil {
		var ret []EventResponseModel
		return ret
	}
	return o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodeDetailResponseModel) GetEventsOk() ([]EventResponseModel, bool) {
	if o == nil || IsNil(o.Events) {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *NodeDetailResponseModel) HasEvents() bool {
	if o != nil && !IsNil(o.Events) {
		return true
	}

	return false
}

// SetEvents gets a reference to the given []EventResponseModel and assigns it to the Events field.
func (o *NodeDetailResponseModel) SetEvents(v []EventResponseModel) {
	o.Events = v
}

// GetKind returns the Kind field value
func (o *NodeDetailResponseModel) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *NodeDetailResponseModel) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *NodeDetailResponseModel) SetKind(v string) {
	o.Kind = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NodeDetailResponseModel) GetMetadata() MetadataResponseModel {
	if o == nil || IsNil(o.Metadata.Get()) {
		var ret MetadataResponseModel
		return ret
	}
	return *o.Metadata.Get()
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodeDetailResponseModel) GetMetadataOk() (*MetadataResponseModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Metadata.Get(), o.Metadata.IsSet()
}

// HasMetadata returns a boolean if a field has been set.
func (o *NodeDetailResponseModel) HasMetadata() bool {
	if o != nil && o.Metadata.IsSet() {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given NullableMetadataResponseModel and assigns it to the Metadata field.
func (o *NodeDetailResponseModel) SetMetadata(v MetadataResponseModel) {
	o.Metadata.Set(&v)
}

// SetMetadataNil sets the value for Metadata to be an explicit nil
func (o *NodeDetailResponseModel) SetMetadataNil() {
	o.Metadata.Set(nil)
}

// UnsetMetadata ensures that no value is present for Metadata, not even an explicit nil
func (o *NodeDetailResponseModel) UnsetMetadata() {
	o.Metadata.Unset()
}

// GetPods returns the Pods field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NodeDetailResponseModel) GetPods() []PodResponseModel {
	if o == nil {
		var ret []PodResponseModel
		return ret
	}
	return o.Pods
}

// GetPodsOk returns a tuple with the Pods field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodeDetailResponseModel) GetPodsOk() ([]PodResponseModel, bool) {
	if o == nil || IsNil(o.Pods) {
		return nil, false
	}
	return o.Pods, true
}

// HasPods returns a boolean if a field has been set.
func (o *NodeDetailResponseModel) HasPods() bool {
	if o != nil && !IsNil(o.Pods) {
		return true
	}

	return false
}

// SetPods gets a reference to the given []PodResponseModel and assigns it to the Pods field.
func (o *NodeDetailResponseModel) SetPods(v []PodResponseModel) {
	o.Pods = v
}

// GetSpec returns the Spec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NodeDetailResponseModel) GetSpec() SpecResponseModel {
	if o == nil || IsNil(o.Spec.Get()) {
		var ret SpecResponseModel
		return ret
	}
	return *o.Spec.Get()
}

// GetSpecOk returns a tuple with the Spec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodeDetailResponseModel) GetSpecOk() (*SpecResponseModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Spec.Get(), o.Spec.IsSet()
}

// HasSpec returns a boolean if a field has been set.
func (o *NodeDetailResponseModel) HasSpec() bool {
	if o != nil && o.Spec.IsSet() {
		return true
	}

	return false
}

// SetSpec gets a reference to the given NullableSpecResponseModel and assigns it to the Spec field.
func (o *NodeDetailResponseModel) SetSpec(v SpecResponseModel) {
	o.Spec.Set(&v)
}

// SetSpecNil sets the value for Spec to be an explicit nil
func (o *NodeDetailResponseModel) SetSpecNil() {
	o.Spec.Set(nil)
}

// UnsetSpec ensures that no value is present for Spec, not even an explicit nil
func (o *NodeDetailResponseModel) UnsetSpec() {
	o.Spec.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NodeDetailResponseModel) GetStatus() KubernetesEngineV1ApiGetClusterNodeDetailsModelStatusResponseModel {
	if o == nil || IsNil(o.Status.Get()) {
		var ret KubernetesEngineV1ApiGetClusterNodeDetailsModelStatusResponseModel
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodeDetailResponseModel) GetStatusOk() (*KubernetesEngineV1ApiGetClusterNodeDetailsModelStatusResponseModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *NodeDetailResponseModel) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableKubernetesEngineV1ApiGetClusterNodeDetailsModelStatusResponseModel and assigns it to the Status field.
func (o *NodeDetailResponseModel) SetStatus(v KubernetesEngineV1ApiGetClusterNodeDetailsModelStatusResponseModel) {
	o.Status.Set(&v)
}

// SetStatusNil sets the value for Status to be an explicit nil
func (o *NodeDetailResponseModel) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *NodeDetailResponseModel) UnsetStatus() {
	o.Status.Unset()
}

func (o NodeDetailResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NodeDetailResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["api_version"] = o.ApiVersion
	if o.Events != nil {
		toSerialize["events"] = o.Events
	}
	toSerialize["kind"] = o.Kind
	if o.Metadata.IsSet() {
		toSerialize["metadata"] = o.Metadata.Get()
	}
	if o.Pods != nil {
		toSerialize["pods"] = o.Pods
	}
	if o.Spec.IsSet() {
		toSerialize["spec"] = o.Spec.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *NodeDetailResponseModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"api_version",
		"kind",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNodeDetailResponseModel := _NodeDetailResponseModel{}

	err = json.Unmarshal(data, &varNodeDetailResponseModel)

	if err != nil {
		return err
	}

	*o = NodeDetailResponseModel(varNodeDetailResponseModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "api_version")
		delete(additionalProperties, "events")
		delete(additionalProperties, "kind")
		delete(additionalProperties, "metadata")
		delete(additionalProperties, "pods")
		delete(additionalProperties, "spec")
		delete(additionalProperties, "status")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableNodeDetailResponseModel struct {
	value *NodeDetailResponseModel
	isSet bool
}

func (v NullableNodeDetailResponseModel) Get() *NodeDetailResponseModel {
	return v.value
}

func (v *NullableNodeDetailResponseModel) Set(val *NodeDetailResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableNodeDetailResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableNodeDetailResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodeDetailResponseModel(val *NodeDetailResponseModel) *NullableNodeDetailResponseModel {
	return &NullableNodeDetailResponseModel{value: val, isSet: true}
}

func (v NullableNodeDetailResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodeDetailResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
