/*
kubernetes-engine API

kubernetes-engine API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kubernetesengine

import (
	"encoding/json"
	"fmt"
)

// checks if the NodePoolScriptRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NodePoolScriptRequestModel{}

// NodePoolScriptRequestModel struct for NodePoolScriptRequestModel
type NodePoolScriptRequestModel struct {
	// 노드 풀 내 노드 생성 시 실행할 사용자 스크립트(base64 인코딩 필요)
	UserData             string `json:"user_data"`
	AdditionalProperties map[string]interface{}
}

type _NodePoolScriptRequestModel NodePoolScriptRequestModel

// NewNodePoolScriptRequestModel instantiates a new NodePoolScriptRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodePoolScriptRequestModel(userData string) *NodePoolScriptRequestModel {
	this := NodePoolScriptRequestModel{}
	this.UserData = userData
	return &this
}

// NewNodePoolScriptRequestModelWithDefaults instantiates a new NodePoolScriptRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodePoolScriptRequestModelWithDefaults() *NodePoolScriptRequestModel {
	this := NodePoolScriptRequestModel{}
	return &this
}

// GetUserData returns the UserData field value
func (o *NodePoolScriptRequestModel) GetUserData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserData
}

// GetUserDataOk returns a tuple with the UserData field value
// and a boolean to check if the value has been set.
func (o *NodePoolScriptRequestModel) GetUserDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserData, true
}

// SetUserData sets field value
func (o *NodePoolScriptRequestModel) SetUserData(v string) {
	o.UserData = v
}

func (o NodePoolScriptRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NodePoolScriptRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["user_data"] = o.UserData

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *NodePoolScriptRequestModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"user_data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNodePoolScriptRequestModel := _NodePoolScriptRequestModel{}

	err = json.Unmarshal(data, &varNodePoolScriptRequestModel)

	if err != nil {
		return err
	}

	*o = NodePoolScriptRequestModel(varNodePoolScriptRequestModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "user_data")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableNodePoolScriptRequestModel struct {
	value *NodePoolScriptRequestModel
	isSet bool
}

func (v NullableNodePoolScriptRequestModel) Get() *NodePoolScriptRequestModel {
	return v.value
}

func (v *NullableNodePoolScriptRequestModel) Set(val *NodePoolScriptRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableNodePoolScriptRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableNodePoolScriptRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodePoolScriptRequestModel(val *NodePoolScriptRequestModel) *NullableNodePoolScriptRequestModel {
	return &NullableNodePoolScriptRequestModel{value: val, isSet: true}
}

func (v NullableNodePoolScriptRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodePoolScriptRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
