/*
kubernetes-engine API

kubernetes-engine API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kubernetesengine

import (
	"encoding/json"
	"fmt"
)

// checks if the OMTInfoResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OMTInfoResponseModel{}

// OMTInfoResponseModel struct for OMTInfoResponseModel
type OMTInfoResponseModel struct {
	// 해당 버전의 사용 중단 여부
	IsDeprecated bool `json:"is_deprecated"`
	// 지원 종료 시점(ISO 8601 형식, UTC)
	Eol string `json:"eol"`
	// Kubernetes 마이너 버전
	MinorVersion string `json:"minor_version"`
	// 업그레이드 가능한 다음 버전
	NextVersion string `json:"next_version"`
	// Kubernetes 패치 버전
	PatchVersion         string `json:"patch_version"`
	AdditionalProperties map[string]interface{}
}

type _OMTInfoResponseModel OMTInfoResponseModel

// NewOMTInfoResponseModel instantiates a new OMTInfoResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOMTInfoResponseModel(isDeprecated bool, eol string, minorVersion string, nextVersion string, patchVersion string) *OMTInfoResponseModel {
	this := OMTInfoResponseModel{}
	this.IsDeprecated = isDeprecated
	this.Eol = eol
	this.MinorVersion = minorVersion
	this.NextVersion = nextVersion
	this.PatchVersion = patchVersion
	return &this
}

// NewOMTInfoResponseModelWithDefaults instantiates a new OMTInfoResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOMTInfoResponseModelWithDefaults() *OMTInfoResponseModel {
	this := OMTInfoResponseModel{}
	return &this
}

// GetIsDeprecated returns the IsDeprecated field value
func (o *OMTInfoResponseModel) GetIsDeprecated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDeprecated
}

// GetIsDeprecatedOk returns a tuple with the IsDeprecated field value
// and a boolean to check if the value has been set.
func (o *OMTInfoResponseModel) GetIsDeprecatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsDeprecated, true
}

// SetIsDeprecated sets field value
func (o *OMTInfoResponseModel) SetIsDeprecated(v bool) {
	o.IsDeprecated = v
}

// GetEol returns the Eol field value
func (o *OMTInfoResponseModel) GetEol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Eol
}

// GetEolOk returns a tuple with the Eol field value
// and a boolean to check if the value has been set.
func (o *OMTInfoResponseModel) GetEolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Eol, true
}

// SetEol sets field value
func (o *OMTInfoResponseModel) SetEol(v string) {
	o.Eol = v
}

// GetMinorVersion returns the MinorVersion field value
func (o *OMTInfoResponseModel) GetMinorVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MinorVersion
}

// GetMinorVersionOk returns a tuple with the MinorVersion field value
// and a boolean to check if the value has been set.
func (o *OMTInfoResponseModel) GetMinorVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinorVersion, true
}

// SetMinorVersion sets field value
func (o *OMTInfoResponseModel) SetMinorVersion(v string) {
	o.MinorVersion = v
}

// GetNextVersion returns the NextVersion field value
func (o *OMTInfoResponseModel) GetNextVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NextVersion
}

// GetNextVersionOk returns a tuple with the NextVersion field value
// and a boolean to check if the value has been set.
func (o *OMTInfoResponseModel) GetNextVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NextVersion, true
}

// SetNextVersion sets field value
func (o *OMTInfoResponseModel) SetNextVersion(v string) {
	o.NextVersion = v
}

// GetPatchVersion returns the PatchVersion field value
func (o *OMTInfoResponseModel) GetPatchVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PatchVersion
}

// GetPatchVersionOk returns a tuple with the PatchVersion field value
// and a boolean to check if the value has been set.
func (o *OMTInfoResponseModel) GetPatchVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PatchVersion, true
}

// SetPatchVersion sets field value
func (o *OMTInfoResponseModel) SetPatchVersion(v string) {
	o.PatchVersion = v
}

func (o OMTInfoResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OMTInfoResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["is_deprecated"] = o.IsDeprecated
	toSerialize["eol"] = o.Eol
	toSerialize["minor_version"] = o.MinorVersion
	toSerialize["next_version"] = o.NextVersion
	toSerialize["patch_version"] = o.PatchVersion

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OMTInfoResponseModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"is_deprecated",
		"eol",
		"minor_version",
		"next_version",
		"patch_version",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOMTInfoResponseModel := _OMTInfoResponseModel{}

	err = json.Unmarshal(data, &varOMTInfoResponseModel)

	if err != nil {
		return err
	}

	*o = OMTInfoResponseModel(varOMTInfoResponseModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "is_deprecated")
		delete(additionalProperties, "eol")
		delete(additionalProperties, "minor_version")
		delete(additionalProperties, "next_version")
		delete(additionalProperties, "patch_version")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOMTInfoResponseModel struct {
	value *OMTInfoResponseModel
	isSet bool
}

func (v NullableOMTInfoResponseModel) Get() *OMTInfoResponseModel {
	return v.value
}

func (v *NullableOMTInfoResponseModel) Set(val *OMTInfoResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableOMTInfoResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableOMTInfoResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOMTInfoResponseModel(val *OMTInfoResponseModel) *NullableOMTInfoResponseModel {
	return &NullableOMTInfoResponseModel{value: val, isSet: true}
}

func (v NullableOMTInfoResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOMTInfoResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
