/*
kubernetes-engine API

kubernetes-engine API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kubernetesengine

import (
	"encoding/json"
	"fmt"
)

// checks if the PodResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PodResponseModel{}

// PodResponseModel struct for PodResponseModel
type PodResponseModel struct {
	// 파드 생성 시간(ISO 8601, UTC)
	CreationTimestamp string `json:"creation_timestamp"`
	// 파드의 IP 주소
	Ip string `json:"ip"`
	// 파드 이름
	Name string `json:"name"`
	// 파드의 네임스페이스
	Namespace string `json:"namespace"`
	// 파드 상태
	Status               string `json:"status"`
	AdditionalProperties map[string]interface{}
}

type _PodResponseModel PodResponseModel

// NewPodResponseModel instantiates a new PodResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPodResponseModel(creationTimestamp string, ip string, name string, namespace string, status string) *PodResponseModel {
	this := PodResponseModel{}
	this.CreationTimestamp = creationTimestamp
	this.Ip = ip
	this.Name = name
	this.Namespace = namespace
	this.Status = status
	return &this
}

// NewPodResponseModelWithDefaults instantiates a new PodResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPodResponseModelWithDefaults() *PodResponseModel {
	this := PodResponseModel{}
	return &this
}

// GetCreationTimestamp returns the CreationTimestamp field value
func (o *PodResponseModel) GetCreationTimestamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreationTimestamp
}

// GetCreationTimestampOk returns a tuple with the CreationTimestamp field value
// and a boolean to check if the value has been set.
func (o *PodResponseModel) GetCreationTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreationTimestamp, true
}

// SetCreationTimestamp sets field value
func (o *PodResponseModel) SetCreationTimestamp(v string) {
	o.CreationTimestamp = v
}

// GetIp returns the Ip field value
func (o *PodResponseModel) GetIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ip
}

// GetIpOk returns a tuple with the Ip field value
// and a boolean to check if the value has been set.
func (o *PodResponseModel) GetIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ip, true
}

// SetIp sets field value
func (o *PodResponseModel) SetIp(v string) {
	o.Ip = v
}

// GetName returns the Name field value
func (o *PodResponseModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PodResponseModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PodResponseModel) SetName(v string) {
	o.Name = v
}

// GetNamespace returns the Namespace field value
func (o *PodResponseModel) GetNamespace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value
// and a boolean to check if the value has been set.
func (o *PodResponseModel) GetNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Namespace, true
}

// SetNamespace sets field value
func (o *PodResponseModel) SetNamespace(v string) {
	o.Namespace = v
}

// GetStatus returns the Status field value
func (o *PodResponseModel) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *PodResponseModel) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *PodResponseModel) SetStatus(v string) {
	o.Status = v
}

func (o PodResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PodResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["creation_timestamp"] = o.CreationTimestamp
	toSerialize["ip"] = o.Ip
	toSerialize["name"] = o.Name
	toSerialize["namespace"] = o.Namespace
	toSerialize["status"] = o.Status

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PodResponseModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"creation_timestamp",
		"ip",
		"name",
		"namespace",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPodResponseModel := _PodResponseModel{}

	err = json.Unmarshal(data, &varPodResponseModel)

	if err != nil {
		return err
	}

	*o = PodResponseModel(varPodResponseModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "creation_timestamp")
		delete(additionalProperties, "ip")
		delete(additionalProperties, "name")
		delete(additionalProperties, "namespace")
		delete(additionalProperties, "status")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePodResponseModel struct {
	value *PodResponseModel
	isSet bool
}

func (v NullablePodResponseModel) Get() *PodResponseModel {
	return v.value
}

func (v *NullablePodResponseModel) Set(val *PodResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePodResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePodResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePodResponseModel(val *PodResponseModel) *NullablePodResponseModel {
	return &NullablePodResponseModel{value: val, isSet: true}
}

func (v NullablePodResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePodResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
