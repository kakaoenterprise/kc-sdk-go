/*
kubernetes-engine API

kubernetes-engine API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kubernetesengine

import (
	"encoding/json"
	"fmt"
)

// checks if the ScheduleRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScheduleRequestModel{}

// ScheduleRequestModel struct for ScheduleRequestModel
type ScheduleRequestModel struct {
	// 예약 기반 오토스케일링 규칙 이름
	Name string `json:"name"`
	// 예약 기반 오토스케일링 반복 설정<br/>- `cron`: 주기적 실행(CRON 표현식 기반)<br/>- `once`: 지정된 시작 시간에 한 번만 실행
	ScheduleType SchedulingType `json:"schedule_type"`
	Schedule     NullableString `json:"schedule,omitempty"`
	// 예약 기반 오토스케일링이 수행될 때 원하는 노드 수 설정
	DesiredNodes int32 `json:"desired_nodes"`
	// 예약 기반 오토스케일링이 실제로 실행될 수 있는 기준 시각 (ISO 8601, UTC) <br/> - 지정한 `start_time` 이후부터 설정된 주기에 따라 규칙 실행 <br/> - 분 단위까지 설정 가능하며, 초 단위는 설정할 수 없음
	StartTime            string `json:"start_time"`
	AdditionalProperties map[string]interface{}
}

type _ScheduleRequestModel ScheduleRequestModel

// NewScheduleRequestModel instantiates a new ScheduleRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScheduleRequestModel(name string, scheduleType SchedulingType, desiredNodes int32, startTime string) *ScheduleRequestModel {
	this := ScheduleRequestModel{}
	this.Name = name
	this.ScheduleType = scheduleType
	this.DesiredNodes = desiredNodes
	this.StartTime = startTime
	return &this
}

// NewScheduleRequestModelWithDefaults instantiates a new ScheduleRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduleRequestModelWithDefaults() *ScheduleRequestModel {
	this := ScheduleRequestModel{}
	return &this
}

// GetName returns the Name field value
func (o *ScheduleRequestModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ScheduleRequestModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ScheduleRequestModel) SetName(v string) {
	o.Name = v
}

// GetScheduleType returns the ScheduleType field value
func (o *ScheduleRequestModel) GetScheduleType() SchedulingType {
	if o == nil {
		var ret SchedulingType
		return ret
	}

	return o.ScheduleType
}

// GetScheduleTypeOk returns a tuple with the ScheduleType field value
// and a boolean to check if the value has been set.
func (o *ScheduleRequestModel) GetScheduleTypeOk() (*SchedulingType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScheduleType, true
}

// SetScheduleType sets field value
func (o *ScheduleRequestModel) SetScheduleType(v SchedulingType) {
	o.ScheduleType = v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ScheduleRequestModel) GetSchedule() string {
	if o == nil || IsNil(o.Schedule.Get()) {
		var ret string
		return ret
	}
	return *o.Schedule.Get()
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ScheduleRequestModel) GetScheduleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schedule.Get(), o.Schedule.IsSet()
}

// HasSchedule returns a boolean if a field has been set.
func (o *ScheduleRequestModel) HasSchedule() bool {
	if o != nil && o.Schedule.IsSet() {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given NullableString and assigns it to the Schedule field.
func (o *ScheduleRequestModel) SetSchedule(v string) {
	o.Schedule.Set(&v)
}

// SetScheduleNil sets the value for Schedule to be an explicit nil
func (o *ScheduleRequestModel) SetScheduleNil() {
	o.Schedule.Set(nil)
}

// UnsetSchedule ensures that no value is present for Schedule, not even an explicit nil
func (o *ScheduleRequestModel) UnsetSchedule() {
	o.Schedule.Unset()
}

// GetDesiredNodes returns the DesiredNodes field value
func (o *ScheduleRequestModel) GetDesiredNodes() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DesiredNodes
}

// GetDesiredNodesOk returns a tuple with the DesiredNodes field value
// and a boolean to check if the value has been set.
func (o *ScheduleRequestModel) GetDesiredNodesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DesiredNodes, true
}

// SetDesiredNodes sets field value
func (o *ScheduleRequestModel) SetDesiredNodes(v int32) {
	o.DesiredNodes = v
}

// GetStartTime returns the StartTime field value
func (o *ScheduleRequestModel) GetStartTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value
// and a boolean to check if the value has been set.
func (o *ScheduleRequestModel) GetStartTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTime, true
}

// SetStartTime sets field value
func (o *ScheduleRequestModel) SetStartTime(v string) {
	o.StartTime = v
}

func (o ScheduleRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScheduleRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["schedule_type"] = o.ScheduleType
	if o.Schedule.IsSet() {
		toSerialize["schedule"] = o.Schedule.Get()
	}
	toSerialize["desired_nodes"] = o.DesiredNodes
	toSerialize["start_time"] = o.StartTime

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ScheduleRequestModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"schedule_type",
		"desired_nodes",
		"start_time",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varScheduleRequestModel := _ScheduleRequestModel{}

	err = json.Unmarshal(data, &varScheduleRequestModel)

	if err != nil {
		return err
	}

	*o = ScheduleRequestModel(varScheduleRequestModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "schedule_type")
		delete(additionalProperties, "schedule")
		delete(additionalProperties, "desired_nodes")
		delete(additionalProperties, "start_time")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableScheduleRequestModel struct {
	value *ScheduleRequestModel
	isSet bool
}

func (v NullableScheduleRequestModel) Get() *ScheduleRequestModel {
	return v.value
}

func (v *NullableScheduleRequestModel) Set(val *ScheduleRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableScheduleRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableScheduleRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScheduleRequestModel(val *ScheduleRequestModel) *NullableScheduleRequestModel {
	return &NullableScheduleRequestModel{value: val, isSet: true}
}

func (v NullableScheduleRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScheduleRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
