/*
Beyond Networking Service(BNS) Load Balancer API

BNS Load Balancer API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"encoding/json"
)

// checks if the AvailabilityZoneListModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AvailabilityZoneListModel{}

// AvailabilityZoneListModel struct for AvailabilityZoneListModel
type AvailabilityZoneListModel struct {
	AvailabilityZones    []AvailabilityZoneModel `json:"availability_zones,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AvailabilityZoneListModel AvailabilityZoneListModel

// NewAvailabilityZoneListModel instantiates a new AvailabilityZoneListModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAvailabilityZoneListModel() *AvailabilityZoneListModel {
	this := AvailabilityZoneListModel{}
	return &this
}

// NewAvailabilityZoneListModelWithDefaults instantiates a new AvailabilityZoneListModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAvailabilityZoneListModelWithDefaults() *AvailabilityZoneListModel {
	this := AvailabilityZoneListModel{}
	return &this
}

// GetAvailabilityZones returns the AvailabilityZones field value if set, zero value otherwise.
func (o *AvailabilityZoneListModel) GetAvailabilityZones() []AvailabilityZoneModel {
	if o == nil || IsNil(o.AvailabilityZones) {
		var ret []AvailabilityZoneModel
		return ret
	}
	return o.AvailabilityZones
}

// GetAvailabilityZonesOk returns a tuple with the AvailabilityZones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailabilityZoneListModel) GetAvailabilityZonesOk() ([]AvailabilityZoneModel, bool) {
	if o == nil || IsNil(o.AvailabilityZones) {
		return nil, false
	}
	return o.AvailabilityZones, true
}

// HasAvailabilityZones returns a boolean if a field has been set.
func (o *AvailabilityZoneListModel) HasAvailabilityZones() bool {
	if o != nil && !IsNil(o.AvailabilityZones) {
		return true
	}

	return false
}

// SetAvailabilityZones gets a reference to the given []AvailabilityZoneModel and assigns it to the AvailabilityZones field.
func (o *AvailabilityZoneListModel) SetAvailabilityZones(v []AvailabilityZoneModel) {
	o.AvailabilityZones = v
}

func (o AvailabilityZoneListModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AvailabilityZoneListModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AvailabilityZones) {
		toSerialize["availability_zones"] = o.AvailabilityZones
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AvailabilityZoneListModel) UnmarshalJSON(data []byte) (err error) {
	varAvailabilityZoneListModel := _AvailabilityZoneListModel{}

	err = json.Unmarshal(data, &varAvailabilityZoneListModel)

	if err != nil {
		return err
	}

	*o = AvailabilityZoneListModel(varAvailabilityZoneListModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "availability_zones")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAvailabilityZoneListModel struct {
	value *AvailabilityZoneListModel
	isSet bool
}

func (v NullableAvailabilityZoneListModel) Get() *AvailabilityZoneListModel {
	return v.value
}

func (v *NullableAvailabilityZoneListModel) Set(val *AvailabilityZoneListModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAvailabilityZoneListModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAvailabilityZoneListModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAvailabilityZoneListModel(val *AvailabilityZoneListModel) *NullableAvailabilityZoneListModel {
	return &NullableAvailabilityZoneListModel{value: val, isSet: true}
}

func (v NullableAvailabilityZoneListModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAvailabilityZoneListModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
