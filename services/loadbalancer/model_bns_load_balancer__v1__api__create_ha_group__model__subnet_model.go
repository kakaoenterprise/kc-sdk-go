/*
Beyond Networking Service(BNS) Load Balancer API

BNS Load Balancer API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"encoding/json"
	"fmt"
)

// checks if the BnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel{}

// BnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel struct for BnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel
type BnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel struct {
	// 해당 서브넷에 연결할 로드 밸런서 ID
	LoadBalancerId string `json:"load_balancer_id"`
	// 서브넷이 속한 가용 영역<br/> - `kr-central-2-a`: kr-central-2-a 가용 영역 <br/> - `kr-central-2-b`: kr-central-2-b 가용 영역 <br/> - `kr-central-2-c`: kr-central-2-c 가용 영역
	AvailabilityZone     AvailabilityZone `json:"availability_zone"`
	AdditionalProperties map[string]interface{}
}

type _BnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel BnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel

// NewBnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel instantiates a new BnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel(loadBalancerId string, availabilityZone AvailabilityZone) *BnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel {
	this := BnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel{}
	this.LoadBalancerId = loadBalancerId
	this.AvailabilityZone = availabilityZone
	return &this
}

// NewBnsLoadBalancerV1ApiCreateHaGroupModelSubnetModelWithDefaults instantiates a new BnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBnsLoadBalancerV1ApiCreateHaGroupModelSubnetModelWithDefaults() *BnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel {
	this := BnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel{}
	return &this
}

// GetLoadBalancerId returns the LoadBalancerId field value
func (o *BnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel) GetLoadBalancerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LoadBalancerId
}

// GetLoadBalancerIdOk returns a tuple with the LoadBalancerId field value
// and a boolean to check if the value has been set.
func (o *BnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel) GetLoadBalancerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LoadBalancerId, true
}

// SetLoadBalancerId sets field value
func (o *BnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel) SetLoadBalancerId(v string) {
	o.LoadBalancerId = v
}

// GetAvailabilityZone returns the AvailabilityZone field value
func (o *BnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel) GetAvailabilityZone() AvailabilityZone {
	if o == nil {
		var ret AvailabilityZone
		return ret
	}

	return o.AvailabilityZone
}

// GetAvailabilityZoneOk returns a tuple with the AvailabilityZone field value
// and a boolean to check if the value has been set.
func (o *BnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel) GetAvailabilityZoneOk() (*AvailabilityZone, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvailabilityZone, true
}

// SetAvailabilityZone sets field value
func (o *BnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel) SetAvailabilityZone(v AvailabilityZone) {
	o.AvailabilityZone = v
}

func (o BnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["load_balancer_id"] = o.LoadBalancerId
	toSerialize["availability_zone"] = o.AvailabilityZone

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"load_balancer_id",
		"availability_zone",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel := _BnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel{}

	err = json.Unmarshal(data, &varBnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel)

	if err != nil {
		return err
	}

	*o = BnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel(varBnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "load_balancer_id")
		delete(additionalProperties, "availability_zone")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel struct {
	value *BnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel
	isSet bool
}

func (v NullableBnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel) Get() *BnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel {
	return v.value
}

func (v *NullableBnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel) Set(val *BnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel(val *BnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel) *NullableBnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel {
	return &NullableBnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel{value: val, isSet: true}
}

func (v NullableBnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBnsLoadBalancerV1ApiCreateHaGroupModelSubnetModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
