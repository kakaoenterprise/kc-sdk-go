/*
Beyond Networking Service(BNS) Load Balancer API

BNS Load Balancer API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"encoding/json"
	"fmt"
)

// checks if the BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel{}

// BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel struct for BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel
type BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel struct {
	// 서브넷의 고유 ID
	Id                   string                   `json:"id"`
	Name                 NullableString           `json:"name,omitempty"`
	CidrBlock            NullableString           `json:"cidr_block,omitempty"`
	AvailabilityZone     NullableAvailabilityZone `json:"availability_zone,omitempty"`
	HealthCheckIps       []string                 `json:"health_check_ips,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel

// NewBnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel instantiates a new BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel(id string) *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel {
	this := BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel{}
	this.Id = id
	return &this
}

// NewBnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModelWithDefaults instantiates a new BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModelWithDefaults() *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel {
	this := BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel{}
	return &this
}

// GetId returns the Id field value
func (o *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) UnsetName() {
	o.Name.Unset()
}

// GetCidrBlock returns the CidrBlock field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) GetCidrBlock() string {
	if o == nil || IsNil(o.CidrBlock.Get()) {
		var ret string
		return ret
	}
	return *o.CidrBlock.Get()
}

// GetCidrBlockOk returns a tuple with the CidrBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) GetCidrBlockOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CidrBlock.Get(), o.CidrBlock.IsSet()
}

// HasCidrBlock returns a boolean if a field has been set.
func (o *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) HasCidrBlock() bool {
	if o != nil && o.CidrBlock.IsSet() {
		return true
	}

	return false
}

// SetCidrBlock gets a reference to the given NullableString and assigns it to the CidrBlock field.
func (o *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) SetCidrBlock(v string) {
	o.CidrBlock.Set(&v)
}

// SetCidrBlockNil sets the value for CidrBlock to be an explicit nil
func (o *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) SetCidrBlockNil() {
	o.CidrBlock.Set(nil)
}

// UnsetCidrBlock ensures that no value is present for CidrBlock, not even an explicit nil
func (o *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) UnsetCidrBlock() {
	o.CidrBlock.Unset()
}

// GetAvailabilityZone returns the AvailabilityZone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) GetAvailabilityZone() AvailabilityZone {
	if o == nil || IsNil(o.AvailabilityZone.Get()) {
		var ret AvailabilityZone
		return ret
	}
	return *o.AvailabilityZone.Get()
}

// GetAvailabilityZoneOk returns a tuple with the AvailabilityZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) GetAvailabilityZoneOk() (*AvailabilityZone, bool) {
	if o == nil {
		return nil, false
	}
	return o.AvailabilityZone.Get(), o.AvailabilityZone.IsSet()
}

// HasAvailabilityZone returns a boolean if a field has been set.
func (o *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) HasAvailabilityZone() bool {
	if o != nil && o.AvailabilityZone.IsSet() {
		return true
	}

	return false
}

// SetAvailabilityZone gets a reference to the given NullableAvailabilityZone and assigns it to the AvailabilityZone field.
func (o *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) SetAvailabilityZone(v AvailabilityZone) {
	o.AvailabilityZone.Set(&v)
}

// SetAvailabilityZoneNil sets the value for AvailabilityZone to be an explicit nil
func (o *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) SetAvailabilityZoneNil() {
	o.AvailabilityZone.Set(nil)
}

// UnsetAvailabilityZone ensures that no value is present for AvailabilityZone, not even an explicit nil
func (o *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) UnsetAvailabilityZone() {
	o.AvailabilityZone.Unset()
}

// GetHealthCheckIps returns the HealthCheckIps field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) GetHealthCheckIps() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.HealthCheckIps
}

// GetHealthCheckIpsOk returns a tuple with the HealthCheckIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) GetHealthCheckIpsOk() ([]string, bool) {
	if o == nil || IsNil(o.HealthCheckIps) {
		return nil, false
	}
	return o.HealthCheckIps, true
}

// HasHealthCheckIps returns a boolean if a field has been set.
func (o *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) HasHealthCheckIps() bool {
	if o != nil && !IsNil(o.HealthCheckIps) {
		return true
	}

	return false
}

// SetHealthCheckIps gets a reference to the given []string and assigns it to the HealthCheckIps field.
func (o *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) SetHealthCheckIps(v []string) {
	o.HealthCheckIps = v
}

func (o BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.CidrBlock.IsSet() {
		toSerialize["cidr_block"] = o.CidrBlock.Get()
	}
	if o.AvailabilityZone.IsSet() {
		toSerialize["availability_zone"] = o.AvailabilityZone.Get()
	}
	if o.HealthCheckIps != nil {
		toSerialize["health_check_ips"] = o.HealthCheckIps
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel := _BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel{}

	err = json.Unmarshal(data, &varBnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel)

	if err != nil {
		return err
	}

	*o = BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel(varBnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "cidr_block")
		delete(additionalProperties, "availability_zone")
		delete(additionalProperties, "health_check_ips")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel struct {
	value *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel
	isSet bool
}

func (v NullableBnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) Get() *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel {
	return v.value
}

func (v *NullableBnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) Set(val *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel(val *BnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) *NullableBnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel {
	return &NullableBnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel{value: val, isSet: true}
}

func (v NullableBnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBnsLoadBalancerV1ApiListTargetsInTargetGroupModelSubnetModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
