/*
Beyond Networking Service(BNS) Load Balancer API

BNS Load Balancer API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"encoding/json"
	"fmt"
)

// checks if the BodyAddL7PolicyRule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BodyAddL7PolicyRule{}

// BodyAddL7PolicyRule struct for BodyAddL7PolicyRule
type BodyAddL7PolicyRule struct {
	L7Rule               CreateL7PolicyRuleModel `json:"l7_rule"`
	AdditionalProperties map[string]interface{}
}

type _BodyAddL7PolicyRule BodyAddL7PolicyRule

// NewBodyAddL7PolicyRule instantiates a new BodyAddL7PolicyRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBodyAddL7PolicyRule(l7Rule CreateL7PolicyRuleModel) *BodyAddL7PolicyRule {
	this := BodyAddL7PolicyRule{}
	this.L7Rule = l7Rule
	return &this
}

// NewBodyAddL7PolicyRuleWithDefaults instantiates a new BodyAddL7PolicyRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBodyAddL7PolicyRuleWithDefaults() *BodyAddL7PolicyRule {
	this := BodyAddL7PolicyRule{}
	return &this
}

// GetL7Rule returns the L7Rule field value
func (o *BodyAddL7PolicyRule) GetL7Rule() CreateL7PolicyRuleModel {
	if o == nil {
		var ret CreateL7PolicyRuleModel
		return ret
	}

	return o.L7Rule
}

// GetL7RuleOk returns a tuple with the L7Rule field value
// and a boolean to check if the value has been set.
func (o *BodyAddL7PolicyRule) GetL7RuleOk() (*CreateL7PolicyRuleModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.L7Rule, true
}

// SetL7Rule sets field value
func (o *BodyAddL7PolicyRule) SetL7Rule(v CreateL7PolicyRuleModel) {
	o.L7Rule = v
}

func (o BodyAddL7PolicyRule) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BodyAddL7PolicyRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["l7_rule"] = o.L7Rule

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BodyAddL7PolicyRule) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"l7_rule",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBodyAddL7PolicyRule := _BodyAddL7PolicyRule{}

	err = json.Unmarshal(data, &varBodyAddL7PolicyRule)

	if err != nil {
		return err
	}

	*o = BodyAddL7PolicyRule(varBodyAddL7PolicyRule)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "l7_rule")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBodyAddL7PolicyRule struct {
	value *BodyAddL7PolicyRule
	isSet bool
}

func (v NullableBodyAddL7PolicyRule) Get() *BodyAddL7PolicyRule {
	return v.value
}

func (v *NullableBodyAddL7PolicyRule) Set(val *BodyAddL7PolicyRule) {
	v.value = val
	v.isSet = true
}

func (v NullableBodyAddL7PolicyRule) IsSet() bool {
	return v.isSet
}

func (v *NullableBodyAddL7PolicyRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBodyAddL7PolicyRule(val *BodyAddL7PolicyRule) *NullableBodyAddL7PolicyRule {
	return &NullableBodyAddL7PolicyRule{value: val, isSet: true}
}

func (v NullableBodyAddL7PolicyRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBodyAddL7PolicyRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
