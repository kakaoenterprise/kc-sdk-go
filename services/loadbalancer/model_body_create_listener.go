/*
Beyond Networking Service(BNS) Load Balancer API

BNS Load Balancer API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"encoding/json"
	"fmt"
)

// checks if the BodyCreateListener type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BodyCreateListener{}

// BodyCreateListener struct for BodyCreateListener
type BodyCreateListener struct {
	Listener             CreateListener `json:"listener"`
	AdditionalProperties map[string]interface{}
}

type _BodyCreateListener BodyCreateListener

// NewBodyCreateListener instantiates a new BodyCreateListener object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBodyCreateListener(listener CreateListener) *BodyCreateListener {
	this := BodyCreateListener{}
	this.Listener = listener
	return &this
}

// NewBodyCreateListenerWithDefaults instantiates a new BodyCreateListener object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBodyCreateListenerWithDefaults() *BodyCreateListener {
	this := BodyCreateListener{}
	return &this
}

// GetListener returns the Listener field value
func (o *BodyCreateListener) GetListener() CreateListener {
	if o == nil {
		var ret CreateListener
		return ret
	}

	return o.Listener
}

// GetListenerOk returns a tuple with the Listener field value
// and a boolean to check if the value has been set.
func (o *BodyCreateListener) GetListenerOk() (*CreateListener, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Listener, true
}

// SetListener sets field value
func (o *BodyCreateListener) SetListener(v CreateListener) {
	o.Listener = v
}

func (o BodyCreateListener) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BodyCreateListener) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["listener"] = o.Listener

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BodyCreateListener) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"listener",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBodyCreateListener := _BodyCreateListener{}

	err = json.Unmarshal(data, &varBodyCreateListener)

	if err != nil {
		return err
	}

	*o = BodyCreateListener(varBodyCreateListener)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "listener")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBodyCreateListener struct {
	value *BodyCreateListener
	isSet bool
}

func (v NullableBodyCreateListener) Get() *BodyCreateListener {
	return v.value
}

func (v *NullableBodyCreateListener) Set(val *BodyCreateListener) {
	v.value = val
	v.isSet = true
}

func (v NullableBodyCreateListener) IsSet() bool {
	return v.isSet
}

func (v *NullableBodyCreateListener) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBodyCreateListener(val *BodyCreateListener) *NullableBodyCreateListener {
	return &NullableBodyCreateListener{value: val, isSet: true}
}

func (v NullableBodyCreateListener) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBodyCreateListener) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
