/*
Beyond Networking Service(BNS) Load Balancer API

BNS Load Balancer API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"encoding/json"
	"fmt"
)

// checks if the BodyUpdateAccessLog type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BodyUpdateAccessLog{}

// BodyUpdateAccessLog struct for BodyUpdateAccessLog
type BodyUpdateAccessLog struct {
	// 액세스 로그를 미사용으로 설정 시, `“access_logs” : null`로 설정
	AccessLogs           EditLoadBalancerAccessLogModel `json:"access_logs"`
	AdditionalProperties map[string]interface{}
}

type _BodyUpdateAccessLog BodyUpdateAccessLog

// NewBodyUpdateAccessLog instantiates a new BodyUpdateAccessLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBodyUpdateAccessLog(accessLogs EditLoadBalancerAccessLogModel) *BodyUpdateAccessLog {
	this := BodyUpdateAccessLog{}
	this.AccessLogs = accessLogs
	return &this
}

// NewBodyUpdateAccessLogWithDefaults instantiates a new BodyUpdateAccessLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBodyUpdateAccessLogWithDefaults() *BodyUpdateAccessLog {
	this := BodyUpdateAccessLog{}
	return &this
}

// GetAccessLogs returns the AccessLogs field value
func (o *BodyUpdateAccessLog) GetAccessLogs() EditLoadBalancerAccessLogModel {
	if o == nil {
		var ret EditLoadBalancerAccessLogModel
		return ret
	}

	return o.AccessLogs
}

// GetAccessLogsOk returns a tuple with the AccessLogs field value
// and a boolean to check if the value has been set.
func (o *BodyUpdateAccessLog) GetAccessLogsOk() (*EditLoadBalancerAccessLogModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessLogs, true
}

// SetAccessLogs sets field value
func (o *BodyUpdateAccessLog) SetAccessLogs(v EditLoadBalancerAccessLogModel) {
	o.AccessLogs = v
}

func (o BodyUpdateAccessLog) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BodyUpdateAccessLog) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["access_logs"] = o.AccessLogs

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BodyUpdateAccessLog) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"access_logs",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBodyUpdateAccessLog := _BodyUpdateAccessLog{}

	err = json.Unmarshal(data, &varBodyUpdateAccessLog)

	if err != nil {
		return err
	}

	*o = BodyUpdateAccessLog(varBodyUpdateAccessLog)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "access_logs")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBodyUpdateAccessLog struct {
	value *BodyUpdateAccessLog
	isSet bool
}

func (v NullableBodyUpdateAccessLog) Get() *BodyUpdateAccessLog {
	return v.value
}

func (v *NullableBodyUpdateAccessLog) Set(val *BodyUpdateAccessLog) {
	v.value = val
	v.isSet = true
}

func (v NullableBodyUpdateAccessLog) IsSet() bool {
	return v.isSet
}

func (v *NullableBodyUpdateAccessLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBodyUpdateAccessLog(val *BodyUpdateAccessLog) *NullableBodyUpdateAccessLog {
	return &NullableBodyUpdateAccessLog{value: val, isSet: true}
}

func (v NullableBodyUpdateAccessLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBodyUpdateAccessLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
