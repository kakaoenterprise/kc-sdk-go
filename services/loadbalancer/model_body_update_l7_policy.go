/*
Beyond Networking Service(BNS) Load Balancer API

BNS Load Balancer API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"encoding/json"
	"fmt"
)

// checks if the BodyUpdateL7Policy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BodyUpdateL7Policy{}

// BodyUpdateL7Policy struct for BodyUpdateL7Policy
type BodyUpdateL7Policy struct {
	L7Policy             EditL7PolicyModel `json:"l7_policy"`
	AdditionalProperties map[string]interface{}
}

type _BodyUpdateL7Policy BodyUpdateL7Policy

// NewBodyUpdateL7Policy instantiates a new BodyUpdateL7Policy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBodyUpdateL7Policy(l7Policy EditL7PolicyModel) *BodyUpdateL7Policy {
	this := BodyUpdateL7Policy{}
	this.L7Policy = l7Policy
	return &this
}

// NewBodyUpdateL7PolicyWithDefaults instantiates a new BodyUpdateL7Policy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBodyUpdateL7PolicyWithDefaults() *BodyUpdateL7Policy {
	this := BodyUpdateL7Policy{}
	return &this
}

// GetL7Policy returns the L7Policy field value
func (o *BodyUpdateL7Policy) GetL7Policy() EditL7PolicyModel {
	if o == nil {
		var ret EditL7PolicyModel
		return ret
	}

	return o.L7Policy
}

// GetL7PolicyOk returns a tuple with the L7Policy field value
// and a boolean to check if the value has been set.
func (o *BodyUpdateL7Policy) GetL7PolicyOk() (*EditL7PolicyModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.L7Policy, true
}

// SetL7Policy sets field value
func (o *BodyUpdateL7Policy) SetL7Policy(v EditL7PolicyModel) {
	o.L7Policy = v
}

func (o BodyUpdateL7Policy) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BodyUpdateL7Policy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["l7_policy"] = o.L7Policy

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BodyUpdateL7Policy) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"l7_policy",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBodyUpdateL7Policy := _BodyUpdateL7Policy{}

	err = json.Unmarshal(data, &varBodyUpdateL7Policy)

	if err != nil {
		return err
	}

	*o = BodyUpdateL7Policy(varBodyUpdateL7Policy)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "l7_policy")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBodyUpdateL7Policy struct {
	value *BodyUpdateL7Policy
	isSet bool
}

func (v NullableBodyUpdateL7Policy) Get() *BodyUpdateL7Policy {
	return v.value
}

func (v *NullableBodyUpdateL7Policy) Set(val *BodyUpdateL7Policy) {
	v.value = val
	v.isSet = true
}

func (v NullableBodyUpdateL7Policy) IsSet() bool {
	return v.isSet
}

func (v *NullableBodyUpdateL7Policy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBodyUpdateL7Policy(val *BodyUpdateL7Policy) *NullableBodyUpdateL7Policy {
	return &NullableBodyUpdateL7Policy{value: val, isSet: true}
}

func (v NullableBodyUpdateL7Policy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBodyUpdateL7Policy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
