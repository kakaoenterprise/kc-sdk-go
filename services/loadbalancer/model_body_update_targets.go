/*
Beyond Networking Service(BNS) Load Balancer API

BNS Load Balancer API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"encoding/json"
	"fmt"
)

// checks if the BodyUpdateTargets type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BodyUpdateTargets{}

// BodyUpdateTargets struct for BodyUpdateTargets
type BodyUpdateTargets struct {
	Members              []BnsLoadBalancerV1ApiUpdateTargetsModelEditTargetGroupMember `json:"members"`
	AdditionalProperties map[string]interface{}
}

type _BodyUpdateTargets BodyUpdateTargets

// NewBodyUpdateTargets instantiates a new BodyUpdateTargets object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBodyUpdateTargets(members []BnsLoadBalancerV1ApiUpdateTargetsModelEditTargetGroupMember) *BodyUpdateTargets {
	this := BodyUpdateTargets{}
	this.Members = members
	return &this
}

// NewBodyUpdateTargetsWithDefaults instantiates a new BodyUpdateTargets object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBodyUpdateTargetsWithDefaults() *BodyUpdateTargets {
	this := BodyUpdateTargets{}
	return &this
}

// GetMembers returns the Members field value
func (o *BodyUpdateTargets) GetMembers() []BnsLoadBalancerV1ApiUpdateTargetsModelEditTargetGroupMember {
	if o == nil {
		var ret []BnsLoadBalancerV1ApiUpdateTargetsModelEditTargetGroupMember
		return ret
	}

	return o.Members
}

// GetMembersOk returns a tuple with the Members field value
// and a boolean to check if the value has been set.
func (o *BodyUpdateTargets) GetMembersOk() ([]BnsLoadBalancerV1ApiUpdateTargetsModelEditTargetGroupMember, bool) {
	if o == nil {
		return nil, false
	}
	return o.Members, true
}

// SetMembers sets field value
func (o *BodyUpdateTargets) SetMembers(v []BnsLoadBalancerV1ApiUpdateTargetsModelEditTargetGroupMember) {
	o.Members = v
}

func (o BodyUpdateTargets) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BodyUpdateTargets) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["members"] = o.Members

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BodyUpdateTargets) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"members",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBodyUpdateTargets := _BodyUpdateTargets{}

	err = json.Unmarshal(data, &varBodyUpdateTargets)

	if err != nil {
		return err
	}

	*o = BodyUpdateTargets(varBodyUpdateTargets)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "members")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBodyUpdateTargets struct {
	value *BodyUpdateTargets
	isSet bool
}

func (v NullableBodyUpdateTargets) Get() *BodyUpdateTargets {
	return v.value
}

func (v *NullableBodyUpdateTargets) Set(val *BodyUpdateTargets) {
	v.value = val
	v.isSet = true
}

func (v NullableBodyUpdateTargets) IsSet() bool {
	return v.isSet
}

func (v *NullableBodyUpdateTargets) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBodyUpdateTargets(val *BodyUpdateTargets) *NullableBodyUpdateTargets {
	return &NullableBodyUpdateTargets{value: val, isSet: true}
}

func (v NullableBodyUpdateTargets) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBodyUpdateTargets) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
