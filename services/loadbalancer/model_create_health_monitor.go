/*
Beyond Networking Service(BNS) Load Balancer API

BNS Load Balancer API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateHealthMonitor type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateHealthMonitor{}

// CreateHealthMonitor struct for CreateHealthMonitor
type CreateHealthMonitor struct {
	// 헬스 체크 간 간격 (초 단위)
	Delay int32 `json:"delay"`
	// 성공으로 간주되기 위한 연속 성공 횟수
	MaxRetries int32 `json:"max_retries"`
	// 다운으로 간주되기 위한 연속 실패 횟수
	MaxRetriesDown int32 `json:"max_retries_down"`
	// 헬스 모니터를 연결할 대상 그룹 ID
	TargetGroupId string `json:"target_group_id"`
	// 헬스 체크 응답 대기 시간 (초 단위)
	Timeout int32 `json:"timeout"`
	// 헬스 모니터 방식 <br/> - `HTTP`: HTTP 방식 <br/> - `HTTPS`: HTTPS 방식 <br/> - `TCP`: TCP 방식 <br/> - `PING`: Ping 방식
	Type                 HealthMonitorType                `json:"type"`
	HttpMethod           NullableHealthMonitorMethod      `json:"http_method,omitempty"`
	HttpVersion          NullableHealthMonitorHttpVersion `json:"http_version,omitempty"`
	ExpectedCodes        NullableString                   `json:"expected_codes,omitempty"`
	UrlPath              NullableString                   `json:"url_path,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateHealthMonitor CreateHealthMonitor

// NewCreateHealthMonitor instantiates a new CreateHealthMonitor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateHealthMonitor(delay int32, maxRetries int32, maxRetriesDown int32, targetGroupId string, timeout int32, type_ HealthMonitorType) *CreateHealthMonitor {
	this := CreateHealthMonitor{}
	this.Delay = delay
	this.MaxRetries = maxRetries
	this.MaxRetriesDown = maxRetriesDown
	this.TargetGroupId = targetGroupId
	this.Timeout = timeout
	this.Type = type_
	return &this
}

// NewCreateHealthMonitorWithDefaults instantiates a new CreateHealthMonitor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateHealthMonitorWithDefaults() *CreateHealthMonitor {
	this := CreateHealthMonitor{}
	return &this
}

// GetDelay returns the Delay field value
func (o *CreateHealthMonitor) GetDelay() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Delay
}

// GetDelayOk returns a tuple with the Delay field value
// and a boolean to check if the value has been set.
func (o *CreateHealthMonitor) GetDelayOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Delay, true
}

// SetDelay sets field value
func (o *CreateHealthMonitor) SetDelay(v int32) {
	o.Delay = v
}

// GetMaxRetries returns the MaxRetries field value
func (o *CreateHealthMonitor) GetMaxRetries() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxRetries
}

// GetMaxRetriesOk returns a tuple with the MaxRetries field value
// and a boolean to check if the value has been set.
func (o *CreateHealthMonitor) GetMaxRetriesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxRetries, true
}

// SetMaxRetries sets field value
func (o *CreateHealthMonitor) SetMaxRetries(v int32) {
	o.MaxRetries = v
}

// GetMaxRetriesDown returns the MaxRetriesDown field value
func (o *CreateHealthMonitor) GetMaxRetriesDown() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxRetriesDown
}

// GetMaxRetriesDownOk returns a tuple with the MaxRetriesDown field value
// and a boolean to check if the value has been set.
func (o *CreateHealthMonitor) GetMaxRetriesDownOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxRetriesDown, true
}

// SetMaxRetriesDown sets field value
func (o *CreateHealthMonitor) SetMaxRetriesDown(v int32) {
	o.MaxRetriesDown = v
}

// GetTargetGroupId returns the TargetGroupId field value
func (o *CreateHealthMonitor) GetTargetGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetGroupId
}

// GetTargetGroupIdOk returns a tuple with the TargetGroupId field value
// and a boolean to check if the value has been set.
func (o *CreateHealthMonitor) GetTargetGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetGroupId, true
}

// SetTargetGroupId sets field value
func (o *CreateHealthMonitor) SetTargetGroupId(v string) {
	o.TargetGroupId = v
}

// GetTimeout returns the Timeout field value
func (o *CreateHealthMonitor) GetTimeout() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value
// and a boolean to check if the value has been set.
func (o *CreateHealthMonitor) GetTimeoutOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timeout, true
}

// SetTimeout sets field value
func (o *CreateHealthMonitor) SetTimeout(v int32) {
	o.Timeout = v
}

// GetType returns the Type field value
func (o *CreateHealthMonitor) GetType() HealthMonitorType {
	if o == nil {
		var ret HealthMonitorType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateHealthMonitor) GetTypeOk() (*HealthMonitorType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreateHealthMonitor) SetType(v HealthMonitorType) {
	o.Type = v
}

// GetHttpMethod returns the HttpMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateHealthMonitor) GetHttpMethod() HealthMonitorMethod {
	if o == nil || IsNil(o.HttpMethod.Get()) {
		var ret HealthMonitorMethod
		return ret
	}
	return *o.HttpMethod.Get()
}

// GetHttpMethodOk returns a tuple with the HttpMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateHealthMonitor) GetHttpMethodOk() (*HealthMonitorMethod, bool) {
	if o == nil {
		return nil, false
	}
	return o.HttpMethod.Get(), o.HttpMethod.IsSet()
}

// HasHttpMethod returns a boolean if a field has been set.
func (o *CreateHealthMonitor) HasHttpMethod() bool {
	if o != nil && o.HttpMethod.IsSet() {
		return true
	}

	return false
}

// SetHttpMethod gets a reference to the given NullableHealthMonitorMethod and assigns it to the HttpMethod field.
func (o *CreateHealthMonitor) SetHttpMethod(v HealthMonitorMethod) {
	o.HttpMethod.Set(&v)
}

// SetHttpMethodNil sets the value for HttpMethod to be an explicit nil
func (o *CreateHealthMonitor) SetHttpMethodNil() {
	o.HttpMethod.Set(nil)
}

// UnsetHttpMethod ensures that no value is present for HttpMethod, not even an explicit nil
func (o *CreateHealthMonitor) UnsetHttpMethod() {
	o.HttpMethod.Unset()
}

// GetHttpVersion returns the HttpVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateHealthMonitor) GetHttpVersion() HealthMonitorHttpVersion {
	if o == nil || IsNil(o.HttpVersion.Get()) {
		var ret HealthMonitorHttpVersion
		return ret
	}
	return *o.HttpVersion.Get()
}

// GetHttpVersionOk returns a tuple with the HttpVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateHealthMonitor) GetHttpVersionOk() (*HealthMonitorHttpVersion, bool) {
	if o == nil {
		return nil, false
	}
	return o.HttpVersion.Get(), o.HttpVersion.IsSet()
}

// HasHttpVersion returns a boolean if a field has been set.
func (o *CreateHealthMonitor) HasHttpVersion() bool {
	if o != nil && o.HttpVersion.IsSet() {
		return true
	}

	return false
}

// SetHttpVersion gets a reference to the given NullableHealthMonitorHttpVersion and assigns it to the HttpVersion field.
func (o *CreateHealthMonitor) SetHttpVersion(v HealthMonitorHttpVersion) {
	o.HttpVersion.Set(&v)
}

// SetHttpVersionNil sets the value for HttpVersion to be an explicit nil
func (o *CreateHealthMonitor) SetHttpVersionNil() {
	o.HttpVersion.Set(nil)
}

// UnsetHttpVersion ensures that no value is present for HttpVersion, not even an explicit nil
func (o *CreateHealthMonitor) UnsetHttpVersion() {
	o.HttpVersion.Unset()
}

// GetExpectedCodes returns the ExpectedCodes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateHealthMonitor) GetExpectedCodes() string {
	if o == nil || IsNil(o.ExpectedCodes.Get()) {
		var ret string
		return ret
	}
	return *o.ExpectedCodes.Get()
}

// GetExpectedCodesOk returns a tuple with the ExpectedCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateHealthMonitor) GetExpectedCodesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpectedCodes.Get(), o.ExpectedCodes.IsSet()
}

// HasExpectedCodes returns a boolean if a field has been set.
func (o *CreateHealthMonitor) HasExpectedCodes() bool {
	if o != nil && o.ExpectedCodes.IsSet() {
		return true
	}

	return false
}

// SetExpectedCodes gets a reference to the given NullableString and assigns it to the ExpectedCodes field.
func (o *CreateHealthMonitor) SetExpectedCodes(v string) {
	o.ExpectedCodes.Set(&v)
}

// SetExpectedCodesNil sets the value for ExpectedCodes to be an explicit nil
func (o *CreateHealthMonitor) SetExpectedCodesNil() {
	o.ExpectedCodes.Set(nil)
}

// UnsetExpectedCodes ensures that no value is present for ExpectedCodes, not even an explicit nil
func (o *CreateHealthMonitor) UnsetExpectedCodes() {
	o.ExpectedCodes.Unset()
}

// GetUrlPath returns the UrlPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateHealthMonitor) GetUrlPath() string {
	if o == nil || IsNil(o.UrlPath.Get()) {
		var ret string
		return ret
	}
	return *o.UrlPath.Get()
}

// GetUrlPathOk returns a tuple with the UrlPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateHealthMonitor) GetUrlPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UrlPath.Get(), o.UrlPath.IsSet()
}

// HasUrlPath returns a boolean if a field has been set.
func (o *CreateHealthMonitor) HasUrlPath() bool {
	if o != nil && o.UrlPath.IsSet() {
		return true
	}

	return false
}

// SetUrlPath gets a reference to the given NullableString and assigns it to the UrlPath field.
func (o *CreateHealthMonitor) SetUrlPath(v string) {
	o.UrlPath.Set(&v)
}

// SetUrlPathNil sets the value for UrlPath to be an explicit nil
func (o *CreateHealthMonitor) SetUrlPathNil() {
	o.UrlPath.Set(nil)
}

// UnsetUrlPath ensures that no value is present for UrlPath, not even an explicit nil
func (o *CreateHealthMonitor) UnsetUrlPath() {
	o.UrlPath.Unset()
}

func (o CreateHealthMonitor) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateHealthMonitor) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["delay"] = o.Delay
	toSerialize["max_retries"] = o.MaxRetries
	toSerialize["max_retries_down"] = o.MaxRetriesDown
	toSerialize["target_group_id"] = o.TargetGroupId
	toSerialize["timeout"] = o.Timeout
	toSerialize["type"] = o.Type
	if o.HttpMethod.IsSet() {
		toSerialize["http_method"] = o.HttpMethod.Get()
	}
	if o.HttpVersion.IsSet() {
		toSerialize["http_version"] = o.HttpVersion.Get()
	}
	if o.ExpectedCodes.IsSet() {
		toSerialize["expected_codes"] = o.ExpectedCodes.Get()
	}
	if o.UrlPath.IsSet() {
		toSerialize["url_path"] = o.UrlPath.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateHealthMonitor) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"delay",
		"max_retries",
		"max_retries_down",
		"target_group_id",
		"timeout",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateHealthMonitor := _CreateHealthMonitor{}

	err = json.Unmarshal(data, &varCreateHealthMonitor)

	if err != nil {
		return err
	}

	*o = CreateHealthMonitor(varCreateHealthMonitor)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "delay")
		delete(additionalProperties, "max_retries")
		delete(additionalProperties, "max_retries_down")
		delete(additionalProperties, "target_group_id")
		delete(additionalProperties, "timeout")
		delete(additionalProperties, "type")
		delete(additionalProperties, "http_method")
		delete(additionalProperties, "http_version")
		delete(additionalProperties, "expected_codes")
		delete(additionalProperties, "url_path")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateHealthMonitor struct {
	value *CreateHealthMonitor
	isSet bool
}

func (v NullableCreateHealthMonitor) Get() *CreateHealthMonitor {
	return v.value
}

func (v *NullableCreateHealthMonitor) Set(val *CreateHealthMonitor) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateHealthMonitor) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateHealthMonitor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateHealthMonitor(val *CreateHealthMonitor) *NullableCreateHealthMonitor {
	return &NullableCreateHealthMonitor{value: val, isSet: true}
}

func (v NullableCreateHealthMonitor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateHealthMonitor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
