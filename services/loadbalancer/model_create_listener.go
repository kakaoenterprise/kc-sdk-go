/*
Beyond Networking Service(BNS) Load Balancer API

BNS Load Balancer API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateListener type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateListener{}

// CreateListener struct for CreateListener
type CreateListener struct {
	// 리스너를 생성할 대상 로드 밸런서 ID
	LoadBalancerId string `json:"load_balancer_id"`
	// 리스너가 수신할 트래픽의 프로토콜 <br/> - `HTTP`: HTTP 프로토콜 <br/> - `TCP`: TCP 프로토콜 <br/> - `UDP`: UDP 프로토콜 <br/> - `TERMINATED_HTTPS`: SSL 종료된 HTTPS 프로토콜
	Protocol Protocol `json:"protocol"`
	// 수신 포트 번호
	ProtocolPort           int32              `json:"protocol_port"`
	TargetGroupId          NullableString     `json:"target_group_id,omitempty"`
	DefaultTlsContainerRef NullableString     `json:"default_tls_container_ref,omitempty"`
	TlsMinVersion          NullableTLSVersion `json:"tls_min_version,omitempty"`
	AdditionalProperties   map[string]interface{}
}

type _CreateListener CreateListener

// NewCreateListener instantiates a new CreateListener object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateListener(loadBalancerId string, protocol Protocol, protocolPort int32) *CreateListener {
	this := CreateListener{}
	this.LoadBalancerId = loadBalancerId
	this.Protocol = protocol
	this.ProtocolPort = protocolPort
	return &this
}

// NewCreateListenerWithDefaults instantiates a new CreateListener object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateListenerWithDefaults() *CreateListener {
	this := CreateListener{}
	return &this
}

// GetLoadBalancerId returns the LoadBalancerId field value
func (o *CreateListener) GetLoadBalancerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LoadBalancerId
}

// GetLoadBalancerIdOk returns a tuple with the LoadBalancerId field value
// and a boolean to check if the value has been set.
func (o *CreateListener) GetLoadBalancerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LoadBalancerId, true
}

// SetLoadBalancerId sets field value
func (o *CreateListener) SetLoadBalancerId(v string) {
	o.LoadBalancerId = v
}

// GetProtocol returns the Protocol field value
func (o *CreateListener) GetProtocol() Protocol {
	if o == nil {
		var ret Protocol
		return ret
	}

	return o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value
// and a boolean to check if the value has been set.
func (o *CreateListener) GetProtocolOk() (*Protocol, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Protocol, true
}

// SetProtocol sets field value
func (o *CreateListener) SetProtocol(v Protocol) {
	o.Protocol = v
}

// GetProtocolPort returns the ProtocolPort field value
func (o *CreateListener) GetProtocolPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProtocolPort
}

// GetProtocolPortOk returns a tuple with the ProtocolPort field value
// and a boolean to check if the value has been set.
func (o *CreateListener) GetProtocolPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProtocolPort, true
}

// SetProtocolPort sets field value
func (o *CreateListener) SetProtocolPort(v int32) {
	o.ProtocolPort = v
}

// GetTargetGroupId returns the TargetGroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateListener) GetTargetGroupId() string {
	if o == nil || IsNil(o.TargetGroupId.Get()) {
		var ret string
		return ret
	}
	return *o.TargetGroupId.Get()
}

// GetTargetGroupIdOk returns a tuple with the TargetGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateListener) GetTargetGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TargetGroupId.Get(), o.TargetGroupId.IsSet()
}

// HasTargetGroupId returns a boolean if a field has been set.
func (o *CreateListener) HasTargetGroupId() bool {
	if o != nil && o.TargetGroupId.IsSet() {
		return true
	}

	return false
}

// SetTargetGroupId gets a reference to the given NullableString and assigns it to the TargetGroupId field.
func (o *CreateListener) SetTargetGroupId(v string) {
	o.TargetGroupId.Set(&v)
}

// SetTargetGroupIdNil sets the value for TargetGroupId to be an explicit nil
func (o *CreateListener) SetTargetGroupIdNil() {
	o.TargetGroupId.Set(nil)
}

// UnsetTargetGroupId ensures that no value is present for TargetGroupId, not even an explicit nil
func (o *CreateListener) UnsetTargetGroupId() {
	o.TargetGroupId.Unset()
}

// GetDefaultTlsContainerRef returns the DefaultTlsContainerRef field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateListener) GetDefaultTlsContainerRef() string {
	if o == nil || IsNil(o.DefaultTlsContainerRef.Get()) {
		var ret string
		return ret
	}
	return *o.DefaultTlsContainerRef.Get()
}

// GetDefaultTlsContainerRefOk returns a tuple with the DefaultTlsContainerRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateListener) GetDefaultTlsContainerRefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultTlsContainerRef.Get(), o.DefaultTlsContainerRef.IsSet()
}

// HasDefaultTlsContainerRef returns a boolean if a field has been set.
func (o *CreateListener) HasDefaultTlsContainerRef() bool {
	if o != nil && o.DefaultTlsContainerRef.IsSet() {
		return true
	}

	return false
}

// SetDefaultTlsContainerRef gets a reference to the given NullableString and assigns it to the DefaultTlsContainerRef field.
func (o *CreateListener) SetDefaultTlsContainerRef(v string) {
	o.DefaultTlsContainerRef.Set(&v)
}

// SetDefaultTlsContainerRefNil sets the value for DefaultTlsContainerRef to be an explicit nil
func (o *CreateListener) SetDefaultTlsContainerRefNil() {
	o.DefaultTlsContainerRef.Set(nil)
}

// UnsetDefaultTlsContainerRef ensures that no value is present for DefaultTlsContainerRef, not even an explicit nil
func (o *CreateListener) UnsetDefaultTlsContainerRef() {
	o.DefaultTlsContainerRef.Unset()
}

// GetTlsMinVersion returns the TlsMinVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateListener) GetTlsMinVersion() TLSVersion {
	if o == nil || IsNil(o.TlsMinVersion.Get()) {
		var ret TLSVersion
		return ret
	}
	return *o.TlsMinVersion.Get()
}

// GetTlsMinVersionOk returns a tuple with the TlsMinVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateListener) GetTlsMinVersionOk() (*TLSVersion, bool) {
	if o == nil {
		return nil, false
	}
	return o.TlsMinVersion.Get(), o.TlsMinVersion.IsSet()
}

// HasTlsMinVersion returns a boolean if a field has been set.
func (o *CreateListener) HasTlsMinVersion() bool {
	if o != nil && o.TlsMinVersion.IsSet() {
		return true
	}

	return false
}

// SetTlsMinVersion gets a reference to the given NullableTLSVersion and assigns it to the TlsMinVersion field.
func (o *CreateListener) SetTlsMinVersion(v TLSVersion) {
	o.TlsMinVersion.Set(&v)
}

// SetTlsMinVersionNil sets the value for TlsMinVersion to be an explicit nil
func (o *CreateListener) SetTlsMinVersionNil() {
	o.TlsMinVersion.Set(nil)
}

// UnsetTlsMinVersion ensures that no value is present for TlsMinVersion, not even an explicit nil
func (o *CreateListener) UnsetTlsMinVersion() {
	o.TlsMinVersion.Unset()
}

func (o CreateListener) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateListener) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["load_balancer_id"] = o.LoadBalancerId
	toSerialize["protocol"] = o.Protocol
	toSerialize["protocol_port"] = o.ProtocolPort
	if o.TargetGroupId.IsSet() {
		toSerialize["target_group_id"] = o.TargetGroupId.Get()
	}
	if o.DefaultTlsContainerRef.IsSet() {
		toSerialize["default_tls_container_ref"] = o.DefaultTlsContainerRef.Get()
	}
	if o.TlsMinVersion.IsSet() {
		toSerialize["tls_min_version"] = o.TlsMinVersion.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateListener) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"load_balancer_id",
		"protocol",
		"protocol_port",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateListener := _CreateListener{}

	err = json.Unmarshal(data, &varCreateListener)

	if err != nil {
		return err
	}

	*o = CreateListener(varCreateListener)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "load_balancer_id")
		delete(additionalProperties, "protocol")
		delete(additionalProperties, "protocol_port")
		delete(additionalProperties, "target_group_id")
		delete(additionalProperties, "default_tls_container_ref")
		delete(additionalProperties, "tls_min_version")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateListener struct {
	value *CreateListener
	isSet bool
}

func (v NullableCreateListener) Get() *CreateListener {
	return v.value
}

func (v *NullableCreateListener) Set(val *CreateListener) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateListener) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateListener) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateListener(val *CreateListener) *NullableCreateListener {
	return &NullableCreateListener{value: val, isSet: true}
}

func (v NullableCreateListener) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateListener) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
