/*
Beyond Networking Service(BNS) Load Balancer API

BNS Load Balancer API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateLoadBalancerModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateLoadBalancerModel{}

// CreateLoadBalancerModel struct for CreateLoadBalancerModel
type CreateLoadBalancerModel struct {
	// 로드 밸런서 이름 (프로젝트 내 고유)
	Name        string         `json:"name"`
	Description NullableString `json:"description,omitempty"`
	// 로드 밸런서를 배치할 서브넷 ID
	SubnetId string `json:"subnet_id"`
	// 로드 밸런서를 생성할 가용 영역<br/> - `kr-central-2-a`: kr-central-2-a 가용 영역 <br/> - `kr-central-2-b`: kr-central-2-b 가용 영역 <br/> - `kr-central-2-c`: kr-central-2-c 가용 영역
	AvailabilityZone AvailabilityZone `json:"availability_zone"`
	// 로드 밸런서 유형 <br/> - [List load balancer types](https://docs.kakaocloud.com/openapi/bns/lb/list-load-balancer-types) API에서 조회한 `flavors.id` 사용
	FlavorId             string               `json:"flavor_id"`
	Listeners            []ListenerModelInput `json:"listeners,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateLoadBalancerModel CreateLoadBalancerModel

// NewCreateLoadBalancerModel instantiates a new CreateLoadBalancerModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateLoadBalancerModel(name string, subnetId string, availabilityZone AvailabilityZone, flavorId string) *CreateLoadBalancerModel {
	this := CreateLoadBalancerModel{}
	this.Name = name
	this.SubnetId = subnetId
	this.AvailabilityZone = availabilityZone
	this.FlavorId = flavorId
	return &this
}

// NewCreateLoadBalancerModelWithDefaults instantiates a new CreateLoadBalancerModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateLoadBalancerModelWithDefaults() *CreateLoadBalancerModel {
	this := CreateLoadBalancerModel{}
	return &this
}

// GetName returns the Name field value
func (o *CreateLoadBalancerModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateLoadBalancerModel) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateLoadBalancerModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateLoadBalancerModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateLoadBalancerModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CreateLoadBalancerModel) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CreateLoadBalancerModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CreateLoadBalancerModel) UnsetDescription() {
	o.Description.Unset()
}

// GetSubnetId returns the SubnetId field value
func (o *CreateLoadBalancerModel) GetSubnetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubnetId
}

// GetSubnetIdOk returns a tuple with the SubnetId field value
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerModel) GetSubnetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubnetId, true
}

// SetSubnetId sets field value
func (o *CreateLoadBalancerModel) SetSubnetId(v string) {
	o.SubnetId = v
}

// GetAvailabilityZone returns the AvailabilityZone field value
func (o *CreateLoadBalancerModel) GetAvailabilityZone() AvailabilityZone {
	if o == nil {
		var ret AvailabilityZone
		return ret
	}

	return o.AvailabilityZone
}

// GetAvailabilityZoneOk returns a tuple with the AvailabilityZone field value
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerModel) GetAvailabilityZoneOk() (*AvailabilityZone, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvailabilityZone, true
}

// SetAvailabilityZone sets field value
func (o *CreateLoadBalancerModel) SetAvailabilityZone(v AvailabilityZone) {
	o.AvailabilityZone = v
}

// GetFlavorId returns the FlavorId field value
func (o *CreateLoadBalancerModel) GetFlavorId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FlavorId
}

// GetFlavorIdOk returns a tuple with the FlavorId field value
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerModel) GetFlavorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FlavorId, true
}

// SetFlavorId sets field value
func (o *CreateLoadBalancerModel) SetFlavorId(v string) {
	o.FlavorId = v
}

// GetListeners returns the Listeners field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateLoadBalancerModel) GetListeners() []ListenerModelInput {
	if o == nil {
		var ret []ListenerModelInput
		return ret
	}
	return o.Listeners
}

// GetListenersOk returns a tuple with the Listeners field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateLoadBalancerModel) GetListenersOk() ([]ListenerModelInput, bool) {
	if o == nil || IsNil(o.Listeners) {
		return nil, false
	}
	return o.Listeners, true
}

// HasListeners returns a boolean if a field has been set.
func (o *CreateLoadBalancerModel) HasListeners() bool {
	if o != nil && !IsNil(o.Listeners) {
		return true
	}

	return false
}

// SetListeners gets a reference to the given []ListenerModelInput and assigns it to the Listeners field.
func (o *CreateLoadBalancerModel) SetListeners(v []ListenerModelInput) {
	o.Listeners = v
}

func (o CreateLoadBalancerModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateLoadBalancerModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	toSerialize["subnet_id"] = o.SubnetId
	toSerialize["availability_zone"] = o.AvailabilityZone
	toSerialize["flavor_id"] = o.FlavorId
	if o.Listeners != nil {
		toSerialize["listeners"] = o.Listeners
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateLoadBalancerModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"subnet_id",
		"availability_zone",
		"flavor_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateLoadBalancerModel := _CreateLoadBalancerModel{}

	err = json.Unmarshal(data, &varCreateLoadBalancerModel)

	if err != nil {
		return err
	}

	*o = CreateLoadBalancerModel(varCreateLoadBalancerModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "subnet_id")
		delete(additionalProperties, "availability_zone")
		delete(additionalProperties, "flavor_id")
		delete(additionalProperties, "listeners")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateLoadBalancerModel struct {
	value *CreateLoadBalancerModel
	isSet bool
}

func (v NullableCreateLoadBalancerModel) Get() *CreateLoadBalancerModel {
	return v.value
}

func (v *NullableCreateLoadBalancerModel) Set(val *CreateLoadBalancerModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateLoadBalancerModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateLoadBalancerModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateLoadBalancerModel(val *CreateLoadBalancerModel) *NullableCreateLoadBalancerModel {
	return &NullableCreateLoadBalancerModel{value: val, isSet: true}
}

func (v NullableCreateLoadBalancerModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateLoadBalancerModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
