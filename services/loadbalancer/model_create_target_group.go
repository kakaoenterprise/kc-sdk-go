/*
Beyond Networking Service(BNS) Load Balancer API

BNS Load Balancer API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateTargetGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTargetGroup{}

// CreateTargetGroup struct for CreateTargetGroup
type CreateTargetGroup struct {
	Description NullableString `json:"description,omitempty"`
	// 로드 밸런싱 알고리즘 <br/> - `ROUND_ROBIN`: 라운드 로빈 방식 <br/> - `LEAST_CONNECTIONS`: 최소 연결 방식 <br/> - `SOURCE_IP`: 소스 IP 기반 방식
	LoadBalancerAlgorithm TargetGroupAlgorithm `json:"load_balancer_algorithm"`
	ListenerId            NullableString       `json:"listener_id,omitempty"`
	// 연결할 로드 밸런서 ID
	LoadBalancerId string `json:"load_balancer_id"`
	// 대상 그룹의 이름
	Name string `json:"name"`
	// 대상 그룹의 백엔드 통신에 사용할 프로토콜 <br/> - `HTTP`: HTTP 프로토콜 <br/> - `HTTPS`: HTTPS 프로토콜 <br/> - `TCP`: TCP 프로토콜 <br/> - `UDP`: UDP 프로토콜 <br/> - `PROXY`: 프록시 프로토콜
	Protocol             TargetGroupProtocol             `json:"protocol"`
	SessionPersistence   NullableSessionPersistenceModel `json:"session_persistence,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateTargetGroup CreateTargetGroup

// NewCreateTargetGroup instantiates a new CreateTargetGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTargetGroup(loadBalancerAlgorithm TargetGroupAlgorithm, loadBalancerId string, name string, protocol TargetGroupProtocol) *CreateTargetGroup {
	this := CreateTargetGroup{}
	this.LoadBalancerAlgorithm = loadBalancerAlgorithm
	this.LoadBalancerId = loadBalancerId
	this.Name = name
	this.Protocol = protocol
	return &this
}

// NewCreateTargetGroupWithDefaults instantiates a new CreateTargetGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTargetGroupWithDefaults() *CreateTargetGroup {
	this := CreateTargetGroup{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateTargetGroup) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateTargetGroup) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateTargetGroup) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CreateTargetGroup) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CreateTargetGroup) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CreateTargetGroup) UnsetDescription() {
	o.Description.Unset()
}

// GetLoadBalancerAlgorithm returns the LoadBalancerAlgorithm field value
func (o *CreateTargetGroup) GetLoadBalancerAlgorithm() TargetGroupAlgorithm {
	if o == nil {
		var ret TargetGroupAlgorithm
		return ret
	}

	return o.LoadBalancerAlgorithm
}

// GetLoadBalancerAlgorithmOk returns a tuple with the LoadBalancerAlgorithm field value
// and a boolean to check if the value has been set.
func (o *CreateTargetGroup) GetLoadBalancerAlgorithmOk() (*TargetGroupAlgorithm, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LoadBalancerAlgorithm, true
}

// SetLoadBalancerAlgorithm sets field value
func (o *CreateTargetGroup) SetLoadBalancerAlgorithm(v TargetGroupAlgorithm) {
	o.LoadBalancerAlgorithm = v
}

// GetListenerId returns the ListenerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateTargetGroup) GetListenerId() string {
	if o == nil || IsNil(o.ListenerId.Get()) {
		var ret string
		return ret
	}
	return *o.ListenerId.Get()
}

// GetListenerIdOk returns a tuple with the ListenerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateTargetGroup) GetListenerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ListenerId.Get(), o.ListenerId.IsSet()
}

// HasListenerId returns a boolean if a field has been set.
func (o *CreateTargetGroup) HasListenerId() bool {
	if o != nil && o.ListenerId.IsSet() {
		return true
	}

	return false
}

// SetListenerId gets a reference to the given NullableString and assigns it to the ListenerId field.
func (o *CreateTargetGroup) SetListenerId(v string) {
	o.ListenerId.Set(&v)
}

// SetListenerIdNil sets the value for ListenerId to be an explicit nil
func (o *CreateTargetGroup) SetListenerIdNil() {
	o.ListenerId.Set(nil)
}

// UnsetListenerId ensures that no value is present for ListenerId, not even an explicit nil
func (o *CreateTargetGroup) UnsetListenerId() {
	o.ListenerId.Unset()
}

// GetLoadBalancerId returns the LoadBalancerId field value
func (o *CreateTargetGroup) GetLoadBalancerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LoadBalancerId
}

// GetLoadBalancerIdOk returns a tuple with the LoadBalancerId field value
// and a boolean to check if the value has been set.
func (o *CreateTargetGroup) GetLoadBalancerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LoadBalancerId, true
}

// SetLoadBalancerId sets field value
func (o *CreateTargetGroup) SetLoadBalancerId(v string) {
	o.LoadBalancerId = v
}

// GetName returns the Name field value
func (o *CreateTargetGroup) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateTargetGroup) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateTargetGroup) SetName(v string) {
	o.Name = v
}

// GetProtocol returns the Protocol field value
func (o *CreateTargetGroup) GetProtocol() TargetGroupProtocol {
	if o == nil {
		var ret TargetGroupProtocol
		return ret
	}

	return o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value
// and a boolean to check if the value has been set.
func (o *CreateTargetGroup) GetProtocolOk() (*TargetGroupProtocol, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Protocol, true
}

// SetProtocol sets field value
func (o *CreateTargetGroup) SetProtocol(v TargetGroupProtocol) {
	o.Protocol = v
}

// GetSessionPersistence returns the SessionPersistence field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateTargetGroup) GetSessionPersistence() SessionPersistenceModel {
	if o == nil || IsNil(o.SessionPersistence.Get()) {
		var ret SessionPersistenceModel
		return ret
	}
	return *o.SessionPersistence.Get()
}

// GetSessionPersistenceOk returns a tuple with the SessionPersistence field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateTargetGroup) GetSessionPersistenceOk() (*SessionPersistenceModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.SessionPersistence.Get(), o.SessionPersistence.IsSet()
}

// HasSessionPersistence returns a boolean if a field has been set.
func (o *CreateTargetGroup) HasSessionPersistence() bool {
	if o != nil && o.SessionPersistence.IsSet() {
		return true
	}

	return false
}

// SetSessionPersistence gets a reference to the given NullableSessionPersistenceModel and assigns it to the SessionPersistence field.
func (o *CreateTargetGroup) SetSessionPersistence(v SessionPersistenceModel) {
	o.SessionPersistence.Set(&v)
}

// SetSessionPersistenceNil sets the value for SessionPersistence to be an explicit nil
func (o *CreateTargetGroup) SetSessionPersistenceNil() {
	o.SessionPersistence.Set(nil)
}

// UnsetSessionPersistence ensures that no value is present for SessionPersistence, not even an explicit nil
func (o *CreateTargetGroup) UnsetSessionPersistence() {
	o.SessionPersistence.Unset()
}

func (o CreateTargetGroup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTargetGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	toSerialize["load_balancer_algorithm"] = o.LoadBalancerAlgorithm
	if o.ListenerId.IsSet() {
		toSerialize["listener_id"] = o.ListenerId.Get()
	}
	toSerialize["load_balancer_id"] = o.LoadBalancerId
	toSerialize["name"] = o.Name
	toSerialize["protocol"] = o.Protocol
	if o.SessionPersistence.IsSet() {
		toSerialize["session_persistence"] = o.SessionPersistence.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateTargetGroup) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"load_balancer_algorithm",
		"load_balancer_id",
		"name",
		"protocol",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateTargetGroup := _CreateTargetGroup{}

	err = json.Unmarshal(data, &varCreateTargetGroup)

	if err != nil {
		return err
	}

	*o = CreateTargetGroup(varCreateTargetGroup)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "description")
		delete(additionalProperties, "load_balancer_algorithm")
		delete(additionalProperties, "listener_id")
		delete(additionalProperties, "load_balancer_id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "protocol")
		delete(additionalProperties, "session_persistence")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateTargetGroup struct {
	value *CreateTargetGroup
	isSet bool
}

func (v NullableCreateTargetGroup) Get() *CreateTargetGroup {
	return v.value
}

func (v *NullableCreateTargetGroup) Set(val *CreateTargetGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTargetGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTargetGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTargetGroup(val *CreateTargetGroup) *NullableCreateTargetGroup {
	return &NullableCreateTargetGroup{value: val, isSet: true}
}

func (v NullableCreateTargetGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTargetGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
