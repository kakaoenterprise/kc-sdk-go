/*
Beyond Networking Service(BNS) Load Balancer API

BNS Load Balancer API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"encoding/json"
)

// checks if the EditTargetGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EditTargetGroup{}

// EditTargetGroup struct for EditTargetGroup
type EditTargetGroup struct {
	Description           NullableString                  `json:"description,omitempty"`
	LoadBalancerAlgorithm NullableTargetGroupAlgorithm    `json:"load_balancer_algorithm,omitempty"`
	Name                  NullableString                  `json:"name,omitempty"`
	SessionPersistence    NullableSessionPersistenceModel `json:"session_persistence,omitempty"`
	AdditionalProperties  map[string]interface{}
}

type _EditTargetGroup EditTargetGroup

// NewEditTargetGroup instantiates a new EditTargetGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditTargetGroup() *EditTargetGroup {
	this := EditTargetGroup{}
	return &this
}

// NewEditTargetGroupWithDefaults instantiates a new EditTargetGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditTargetGroupWithDefaults() *EditTargetGroup {
	this := EditTargetGroup{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditTargetGroup) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditTargetGroup) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *EditTargetGroup) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *EditTargetGroup) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *EditTargetGroup) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *EditTargetGroup) UnsetDescription() {
	o.Description.Unset()
}

// GetLoadBalancerAlgorithm returns the LoadBalancerAlgorithm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditTargetGroup) GetLoadBalancerAlgorithm() TargetGroupAlgorithm {
	if o == nil || IsNil(o.LoadBalancerAlgorithm.Get()) {
		var ret TargetGroupAlgorithm
		return ret
	}
	return *o.LoadBalancerAlgorithm.Get()
}

// GetLoadBalancerAlgorithmOk returns a tuple with the LoadBalancerAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditTargetGroup) GetLoadBalancerAlgorithmOk() (*TargetGroupAlgorithm, bool) {
	if o == nil {
		return nil, false
	}
	return o.LoadBalancerAlgorithm.Get(), o.LoadBalancerAlgorithm.IsSet()
}

// HasLoadBalancerAlgorithm returns a boolean if a field has been set.
func (o *EditTargetGroup) HasLoadBalancerAlgorithm() bool {
	if o != nil && o.LoadBalancerAlgorithm.IsSet() {
		return true
	}

	return false
}

// SetLoadBalancerAlgorithm gets a reference to the given NullableTargetGroupAlgorithm and assigns it to the LoadBalancerAlgorithm field.
func (o *EditTargetGroup) SetLoadBalancerAlgorithm(v TargetGroupAlgorithm) {
	o.LoadBalancerAlgorithm.Set(&v)
}

// SetLoadBalancerAlgorithmNil sets the value for LoadBalancerAlgorithm to be an explicit nil
func (o *EditTargetGroup) SetLoadBalancerAlgorithmNil() {
	o.LoadBalancerAlgorithm.Set(nil)
}

// UnsetLoadBalancerAlgorithm ensures that no value is present for LoadBalancerAlgorithm, not even an explicit nil
func (o *EditTargetGroup) UnsetLoadBalancerAlgorithm() {
	o.LoadBalancerAlgorithm.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditTargetGroup) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditTargetGroup) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *EditTargetGroup) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *EditTargetGroup) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *EditTargetGroup) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *EditTargetGroup) UnsetName() {
	o.Name.Unset()
}

// GetSessionPersistence returns the SessionPersistence field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditTargetGroup) GetSessionPersistence() SessionPersistenceModel {
	if o == nil || IsNil(o.SessionPersistence.Get()) {
		var ret SessionPersistenceModel
		return ret
	}
	return *o.SessionPersistence.Get()
}

// GetSessionPersistenceOk returns a tuple with the SessionPersistence field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditTargetGroup) GetSessionPersistenceOk() (*SessionPersistenceModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.SessionPersistence.Get(), o.SessionPersistence.IsSet()
}

// HasSessionPersistence returns a boolean if a field has been set.
func (o *EditTargetGroup) HasSessionPersistence() bool {
	if o != nil && o.SessionPersistence.IsSet() {
		return true
	}

	return false
}

// SetSessionPersistence gets a reference to the given NullableSessionPersistenceModel and assigns it to the SessionPersistence field.
func (o *EditTargetGroup) SetSessionPersistence(v SessionPersistenceModel) {
	o.SessionPersistence.Set(&v)
}

// SetSessionPersistenceNil sets the value for SessionPersistence to be an explicit nil
func (o *EditTargetGroup) SetSessionPersistenceNil() {
	o.SessionPersistence.Set(nil)
}

// UnsetSessionPersistence ensures that no value is present for SessionPersistence, not even an explicit nil
func (o *EditTargetGroup) UnsetSessionPersistence() {
	o.SessionPersistence.Unset()
}

func (o EditTargetGroup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EditTargetGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.LoadBalancerAlgorithm.IsSet() {
		toSerialize["load_balancer_algorithm"] = o.LoadBalancerAlgorithm.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.SessionPersistence.IsSet() {
		toSerialize["session_persistence"] = o.SessionPersistence.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EditTargetGroup) UnmarshalJSON(data []byte) (err error) {
	varEditTargetGroup := _EditTargetGroup{}

	err = json.Unmarshal(data, &varEditTargetGroup)

	if err != nil {
		return err
	}

	*o = EditTargetGroup(varEditTargetGroup)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "description")
		delete(additionalProperties, "load_balancer_algorithm")
		delete(additionalProperties, "name")
		delete(additionalProperties, "session_persistence")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEditTargetGroup struct {
	value *EditTargetGroup
	isSet bool
}

func (v NullableEditTargetGroup) Get() *EditTargetGroup {
	return v.value
}

func (v *NullableEditTargetGroup) Set(val *EditTargetGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableEditTargetGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableEditTargetGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditTargetGroup(val *EditTargetGroup) *NullableEditTargetGroup {
	return &NullableEditTargetGroup{value: val, isSet: true}
}

func (v NullableEditTargetGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditTargetGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
