/*
Beyond Networking Service(BNS) Load Balancer API

BNS Load Balancer API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"encoding/json"
)

// checks if the InsertHeaderModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InsertHeaderModel{}

// InsertHeaderModel struct for InsertHeaderModel
type InsertHeaderModel struct {
	XForwardedFor        NullableXForwardedFor   `json:"X-Forwarded-For,omitempty"`
	XForwardedProto      NullableXForwardedProto `json:"X-Forwarded-Proto,omitempty"`
	XForwardedPort       NullableXForwardedPort  `json:"X-Forwarded-Port,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _InsertHeaderModel InsertHeaderModel

// NewInsertHeaderModel instantiates a new InsertHeaderModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInsertHeaderModel() *InsertHeaderModel {
	this := InsertHeaderModel{}
	return &this
}

// NewInsertHeaderModelWithDefaults instantiates a new InsertHeaderModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInsertHeaderModelWithDefaults() *InsertHeaderModel {
	this := InsertHeaderModel{}
	return &this
}

// GetXForwardedFor returns the XForwardedFor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InsertHeaderModel) GetXForwardedFor() XForwardedFor {
	if o == nil || IsNil(o.XForwardedFor.Get()) {
		var ret XForwardedFor
		return ret
	}
	return *o.XForwardedFor.Get()
}

// GetXForwardedForOk returns a tuple with the XForwardedFor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InsertHeaderModel) GetXForwardedForOk() (*XForwardedFor, bool) {
	if o == nil {
		return nil, false
	}
	return o.XForwardedFor.Get(), o.XForwardedFor.IsSet()
}

// HasXForwardedFor returns a boolean if a field has been set.
func (o *InsertHeaderModel) HasXForwardedFor() bool {
	if o != nil && o.XForwardedFor.IsSet() {
		return true
	}

	return false
}

// SetXForwardedFor gets a reference to the given NullableXForwardedFor and assigns it to the XForwardedFor field.
func (o *InsertHeaderModel) SetXForwardedFor(v XForwardedFor) {
	o.XForwardedFor.Set(&v)
}

// SetXForwardedForNil sets the value for XForwardedFor to be an explicit nil
func (o *InsertHeaderModel) SetXForwardedForNil() {
	o.XForwardedFor.Set(nil)
}

// UnsetXForwardedFor ensures that no value is present for XForwardedFor, not even an explicit nil
func (o *InsertHeaderModel) UnsetXForwardedFor() {
	o.XForwardedFor.Unset()
}

// GetXForwardedProto returns the XForwardedProto field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InsertHeaderModel) GetXForwardedProto() XForwardedProto {
	if o == nil || IsNil(o.XForwardedProto.Get()) {
		var ret XForwardedProto
		return ret
	}
	return *o.XForwardedProto.Get()
}

// GetXForwardedProtoOk returns a tuple with the XForwardedProto field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InsertHeaderModel) GetXForwardedProtoOk() (*XForwardedProto, bool) {
	if o == nil {
		return nil, false
	}
	return o.XForwardedProto.Get(), o.XForwardedProto.IsSet()
}

// HasXForwardedProto returns a boolean if a field has been set.
func (o *InsertHeaderModel) HasXForwardedProto() bool {
	if o != nil && o.XForwardedProto.IsSet() {
		return true
	}

	return false
}

// SetXForwardedProto gets a reference to the given NullableXForwardedProto and assigns it to the XForwardedProto field.
func (o *InsertHeaderModel) SetXForwardedProto(v XForwardedProto) {
	o.XForwardedProto.Set(&v)
}

// SetXForwardedProtoNil sets the value for XForwardedProto to be an explicit nil
func (o *InsertHeaderModel) SetXForwardedProtoNil() {
	o.XForwardedProto.Set(nil)
}

// UnsetXForwardedProto ensures that no value is present for XForwardedProto, not even an explicit nil
func (o *InsertHeaderModel) UnsetXForwardedProto() {
	o.XForwardedProto.Unset()
}

// GetXForwardedPort returns the XForwardedPort field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InsertHeaderModel) GetXForwardedPort() XForwardedPort {
	if o == nil || IsNil(o.XForwardedPort.Get()) {
		var ret XForwardedPort
		return ret
	}
	return *o.XForwardedPort.Get()
}

// GetXForwardedPortOk returns a tuple with the XForwardedPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InsertHeaderModel) GetXForwardedPortOk() (*XForwardedPort, bool) {
	if o == nil {
		return nil, false
	}
	return o.XForwardedPort.Get(), o.XForwardedPort.IsSet()
}

// HasXForwardedPort returns a boolean if a field has been set.
func (o *InsertHeaderModel) HasXForwardedPort() bool {
	if o != nil && o.XForwardedPort.IsSet() {
		return true
	}

	return false
}

// SetXForwardedPort gets a reference to the given NullableXForwardedPort and assigns it to the XForwardedPort field.
func (o *InsertHeaderModel) SetXForwardedPort(v XForwardedPort) {
	o.XForwardedPort.Set(&v)
}

// SetXForwardedPortNil sets the value for XForwardedPort to be an explicit nil
func (o *InsertHeaderModel) SetXForwardedPortNil() {
	o.XForwardedPort.Set(nil)
}

// UnsetXForwardedPort ensures that no value is present for XForwardedPort, not even an explicit nil
func (o *InsertHeaderModel) UnsetXForwardedPort() {
	o.XForwardedPort.Unset()
}

func (o InsertHeaderModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InsertHeaderModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.XForwardedFor.IsSet() {
		toSerialize["X-Forwarded-For"] = o.XForwardedFor.Get()
	}
	if o.XForwardedProto.IsSet() {
		toSerialize["X-Forwarded-Proto"] = o.XForwardedProto.Get()
	}
	if o.XForwardedPort.IsSet() {
		toSerialize["X-Forwarded-Port"] = o.XForwardedPort.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InsertHeaderModel) UnmarshalJSON(data []byte) (err error) {
	varInsertHeaderModel := _InsertHeaderModel{}

	err = json.Unmarshal(data, &varInsertHeaderModel)

	if err != nil {
		return err
	}

	*o = InsertHeaderModel(varInsertHeaderModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "X-Forwarded-For")
		delete(additionalProperties, "X-Forwarded-Proto")
		delete(additionalProperties, "X-Forwarded-Port")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInsertHeaderModel struct {
	value *InsertHeaderModel
	isSet bool
}

func (v NullableInsertHeaderModel) Get() *InsertHeaderModel {
	return v.value
}

func (v *NullableInsertHeaderModel) Set(val *InsertHeaderModel) {
	v.value = val
	v.isSet = true
}

func (v NullableInsertHeaderModel) IsSet() bool {
	return v.isSet
}

func (v *NullableInsertHeaderModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInsertHeaderModel(val *InsertHeaderModel) *NullableInsertHeaderModel {
	return &NullableInsertHeaderModel{value: val, isSet: true}
}

func (v NullableInsertHeaderModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInsertHeaderModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
