/*
Beyond Networking Service(BNS) Load Balancer API

BNS Load Balancer API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"encoding/json"
	"fmt"
)

// checks if the ListenerModelInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListenerModelInput{}

// ListenerModelInput struct for ListenerModelInput
type ListenerModelInput struct {
	// 리스너가 수신할 프로토콜 <br/> - `HTTP`: HTTP 프로토콜 <br/> - `TCP`: TCP 프로토콜 <br/> - `UDP`: UDP 프로토콜 <br/> - `TERMINATED_HTTPS`: SSL 종료된 HTTPS 프로토콜
	Protocol Protocol `json:"protocol"`
	// 리스너가 수신할 포트 번호
	ProtocolPort           int32              `json:"protocol_port"`
	DefaultTlsContainerRef NullableString     `json:"default_tls_container_ref,omitempty"`
	TlsMinVersion          NullableTLSVersion `json:"tls_min_version,omitempty"`
	AdditionalProperties   map[string]interface{}
}

type _ListenerModelInput ListenerModelInput

// NewListenerModelInput instantiates a new ListenerModelInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListenerModelInput(protocol Protocol, protocolPort int32) *ListenerModelInput {
	this := ListenerModelInput{}
	this.Protocol = protocol
	this.ProtocolPort = protocolPort
	return &this
}

// NewListenerModelInputWithDefaults instantiates a new ListenerModelInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListenerModelInputWithDefaults() *ListenerModelInput {
	this := ListenerModelInput{}
	return &this
}

// GetProtocol returns the Protocol field value
func (o *ListenerModelInput) GetProtocol() Protocol {
	if o == nil {
		var ret Protocol
		return ret
	}

	return o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value
// and a boolean to check if the value has been set.
func (o *ListenerModelInput) GetProtocolOk() (*Protocol, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Protocol, true
}

// SetProtocol sets field value
func (o *ListenerModelInput) SetProtocol(v Protocol) {
	o.Protocol = v
}

// GetProtocolPort returns the ProtocolPort field value
func (o *ListenerModelInput) GetProtocolPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProtocolPort
}

// GetProtocolPortOk returns a tuple with the ProtocolPort field value
// and a boolean to check if the value has been set.
func (o *ListenerModelInput) GetProtocolPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProtocolPort, true
}

// SetProtocolPort sets field value
func (o *ListenerModelInput) SetProtocolPort(v int32) {
	o.ProtocolPort = v
}

// GetDefaultTlsContainerRef returns the DefaultTlsContainerRef field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListenerModelInput) GetDefaultTlsContainerRef() string {
	if o == nil || IsNil(o.DefaultTlsContainerRef.Get()) {
		var ret string
		return ret
	}
	return *o.DefaultTlsContainerRef.Get()
}

// GetDefaultTlsContainerRefOk returns a tuple with the DefaultTlsContainerRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListenerModelInput) GetDefaultTlsContainerRefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultTlsContainerRef.Get(), o.DefaultTlsContainerRef.IsSet()
}

// HasDefaultTlsContainerRef returns a boolean if a field has been set.
func (o *ListenerModelInput) HasDefaultTlsContainerRef() bool {
	if o != nil && o.DefaultTlsContainerRef.IsSet() {
		return true
	}

	return false
}

// SetDefaultTlsContainerRef gets a reference to the given NullableString and assigns it to the DefaultTlsContainerRef field.
func (o *ListenerModelInput) SetDefaultTlsContainerRef(v string) {
	o.DefaultTlsContainerRef.Set(&v)
}

// SetDefaultTlsContainerRefNil sets the value for DefaultTlsContainerRef to be an explicit nil
func (o *ListenerModelInput) SetDefaultTlsContainerRefNil() {
	o.DefaultTlsContainerRef.Set(nil)
}

// UnsetDefaultTlsContainerRef ensures that no value is present for DefaultTlsContainerRef, not even an explicit nil
func (o *ListenerModelInput) UnsetDefaultTlsContainerRef() {
	o.DefaultTlsContainerRef.Unset()
}

// GetTlsMinVersion returns the TlsMinVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListenerModelInput) GetTlsMinVersion() TLSVersion {
	if o == nil || IsNil(o.TlsMinVersion.Get()) {
		var ret TLSVersion
		return ret
	}
	return *o.TlsMinVersion.Get()
}

// GetTlsMinVersionOk returns a tuple with the TlsMinVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListenerModelInput) GetTlsMinVersionOk() (*TLSVersion, bool) {
	if o == nil {
		return nil, false
	}
	return o.TlsMinVersion.Get(), o.TlsMinVersion.IsSet()
}

// HasTlsMinVersion returns a boolean if a field has been set.
func (o *ListenerModelInput) HasTlsMinVersion() bool {
	if o != nil && o.TlsMinVersion.IsSet() {
		return true
	}

	return false
}

// SetTlsMinVersion gets a reference to the given NullableTLSVersion and assigns it to the TlsMinVersion field.
func (o *ListenerModelInput) SetTlsMinVersion(v TLSVersion) {
	o.TlsMinVersion.Set(&v)
}

// SetTlsMinVersionNil sets the value for TlsMinVersion to be an explicit nil
func (o *ListenerModelInput) SetTlsMinVersionNil() {
	o.TlsMinVersion.Set(nil)
}

// UnsetTlsMinVersion ensures that no value is present for TlsMinVersion, not even an explicit nil
func (o *ListenerModelInput) UnsetTlsMinVersion() {
	o.TlsMinVersion.Unset()
}

func (o ListenerModelInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListenerModelInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["protocol"] = o.Protocol
	toSerialize["protocol_port"] = o.ProtocolPort
	if o.DefaultTlsContainerRef.IsSet() {
		toSerialize["default_tls_container_ref"] = o.DefaultTlsContainerRef.Get()
	}
	if o.TlsMinVersion.IsSet() {
		toSerialize["tls_min_version"] = o.TlsMinVersion.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListenerModelInput) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"protocol",
		"protocol_port",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListenerModelInput := _ListenerModelInput{}

	err = json.Unmarshal(data, &varListenerModelInput)

	if err != nil {
		return err
	}

	*o = ListenerModelInput(varListenerModelInput)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "protocol")
		delete(additionalProperties, "protocol_port")
		delete(additionalProperties, "default_tls_container_ref")
		delete(additionalProperties, "tls_min_version")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListenerModelInput struct {
	value *ListenerModelInput
	isSet bool
}

func (v NullableListenerModelInput) Get() *ListenerModelInput {
	return v.value
}

func (v *NullableListenerModelInput) Set(val *ListenerModelInput) {
	v.value = val
	v.isSet = true
}

func (v NullableListenerModelInput) IsSet() bool {
	return v.isSet
}

func (v *NullableListenerModelInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListenerModelInput(val *ListenerModelInput) *NullableListenerModelInput {
	return &NullableListenerModelInput{value: val, isSet: true}
}

func (v NullableListenerModelInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListenerModelInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
