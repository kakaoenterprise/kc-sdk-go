/*
Beyond Networking Service(BNS) Load Balancer API

BNS Load Balancer API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"encoding/json"
)

// checks if the ResponseHealthCheckSubnetsModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseHealthCheckSubnetsModel{}

// ResponseHealthCheckSubnetsModel struct for ResponseHealthCheckSubnetsModel
type ResponseHealthCheckSubnetsModel struct {
	HealthCheckSubnets   []HealthCheckSubnetModel `json:"health_check_subnets,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ResponseHealthCheckSubnetsModel ResponseHealthCheckSubnetsModel

// NewResponseHealthCheckSubnetsModel instantiates a new ResponseHealthCheckSubnetsModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseHealthCheckSubnetsModel() *ResponseHealthCheckSubnetsModel {
	this := ResponseHealthCheckSubnetsModel{}
	return &this
}

// NewResponseHealthCheckSubnetsModelWithDefaults instantiates a new ResponseHealthCheckSubnetsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseHealthCheckSubnetsModelWithDefaults() *ResponseHealthCheckSubnetsModel {
	this := ResponseHealthCheckSubnetsModel{}
	return &this
}

// GetHealthCheckSubnets returns the HealthCheckSubnets field value if set, zero value otherwise.
func (o *ResponseHealthCheckSubnetsModel) GetHealthCheckSubnets() []HealthCheckSubnetModel {
	if o == nil || IsNil(o.HealthCheckSubnets) {
		var ret []HealthCheckSubnetModel
		return ret
	}
	return o.HealthCheckSubnets
}

// GetHealthCheckSubnetsOk returns a tuple with the HealthCheckSubnets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseHealthCheckSubnetsModel) GetHealthCheckSubnetsOk() ([]HealthCheckSubnetModel, bool) {
	if o == nil || IsNil(o.HealthCheckSubnets) {
		return nil, false
	}
	return o.HealthCheckSubnets, true
}

// HasHealthCheckSubnets returns a boolean if a field has been set.
func (o *ResponseHealthCheckSubnetsModel) HasHealthCheckSubnets() bool {
	if o != nil && !IsNil(o.HealthCheckSubnets) {
		return true
	}

	return false
}

// SetHealthCheckSubnets gets a reference to the given []HealthCheckSubnetModel and assigns it to the HealthCheckSubnets field.
func (o *ResponseHealthCheckSubnetsModel) SetHealthCheckSubnets(v []HealthCheckSubnetModel) {
	o.HealthCheckSubnets = v
}

func (o ResponseHealthCheckSubnetsModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseHealthCheckSubnetsModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HealthCheckSubnets) {
		toSerialize["health_check_subnets"] = o.HealthCheckSubnets
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ResponseHealthCheckSubnetsModel) UnmarshalJSON(data []byte) (err error) {
	varResponseHealthCheckSubnetsModel := _ResponseHealthCheckSubnetsModel{}

	err = json.Unmarshal(data, &varResponseHealthCheckSubnetsModel)

	if err != nil {
		return err
	}

	*o = ResponseHealthCheckSubnetsModel(varResponseHealthCheckSubnetsModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "health_check_subnets")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableResponseHealthCheckSubnetsModel struct {
	value *ResponseHealthCheckSubnetsModel
	isSet bool
}

func (v NullableResponseHealthCheckSubnetsModel) Get() *ResponseHealthCheckSubnetsModel {
	return v.value
}

func (v *NullableResponseHealthCheckSubnetsModel) Set(val *ResponseHealthCheckSubnetsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseHealthCheckSubnetsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseHealthCheckSubnetsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseHealthCheckSubnetsModel(val *ResponseHealthCheckSubnetsModel) *NullableResponseHealthCheckSubnetsModel {
	return &NullableResponseHealthCheckSubnetsModel{value: val, isSet: true}
}

func (v NullableResponseHealthCheckSubnetsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseHealthCheckSubnetsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
