/*
Beyond Networking Service(BNS) Load Balancer API

BNS Load Balancer API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"encoding/json"
	"fmt"
)

// checks if the SecurityGroupModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityGroupModel{}

// SecurityGroupModel struct for SecurityGroupModel
type SecurityGroupModel struct {
	// 보안 그룹의 ID
	Id string `json:"id"`
	// 보안 그룹 이름
	Name                 string `json:"name"`
	AdditionalProperties map[string]interface{}
}

type _SecurityGroupModel SecurityGroupModel

// NewSecurityGroupModel instantiates a new SecurityGroupModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityGroupModel(id string, name string) *SecurityGroupModel {
	this := SecurityGroupModel{}
	this.Id = id
	this.Name = name
	return &this
}

// NewSecurityGroupModelWithDefaults instantiates a new SecurityGroupModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityGroupModelWithDefaults() *SecurityGroupModel {
	this := SecurityGroupModel{}
	return &this
}

// GetId returns the Id field value
func (o *SecurityGroupModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SecurityGroupModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SecurityGroupModel) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *SecurityGroupModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SecurityGroupModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SecurityGroupModel) SetName(v string) {
	o.Name = v
}

func (o SecurityGroupModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityGroupModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SecurityGroupModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSecurityGroupModel := _SecurityGroupModel{}

	err = json.Unmarshal(data, &varSecurityGroupModel)

	if err != nil {
		return err
	}

	*o = SecurityGroupModel(varSecurityGroupModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSecurityGroupModel struct {
	value *SecurityGroupModel
	isSet bool
}

func (v NullableSecurityGroupModel) Get() *SecurityGroupModel {
	return v.value
}

func (v *NullableSecurityGroupModel) Set(val *SecurityGroupModel) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityGroupModel) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityGroupModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityGroupModel(val *SecurityGroupModel) *NullableSecurityGroupModel {
	return &NullableSecurityGroupModel{value: val, isSet: true}
}

func (v NullableSecurityGroupModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityGroupModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
