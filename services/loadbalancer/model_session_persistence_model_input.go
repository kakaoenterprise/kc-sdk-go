/*
Beyond Networking Service(BNS) Load Balancer API

BNS Load Balancer API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"encoding/json"
	"fmt"
)

// checks if the SessionPersistenceModelInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SessionPersistenceModelInput{}

// SessionPersistenceModelInput struct for SessionPersistenceModelInput
type SessionPersistenceModelInput struct {
	// 세션 유형 <br/> - 예시: `APP_COOKIE`, `HTTP_COOKIE`, `SOURCE_IP`
	Type string `json:"type"`
	// 쿠키 이름 (세션 유형이 `APP_COOKIE`, `HTTP_COOKIE`인 경우)
	CookieName string `json:"cookie_name"`
	// 세션 유지 시간 (초)
	PersistenceTimeout int32 `json:"persistence_timeout"`
	// 세션 유지 기준이 되는 IP 서브넷 마스크 (세션 유형이 `SOURCE_IP`인 경우)
	PersistenceGranularity string `json:"persistence_granularity"`
	AdditionalProperties   map[string]interface{}
}

type _SessionPersistenceModelInput SessionPersistenceModelInput

// NewSessionPersistenceModelInput instantiates a new SessionPersistenceModelInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSessionPersistenceModelInput(type_ string, cookieName string, persistenceTimeout int32, persistenceGranularity string) *SessionPersistenceModelInput {
	this := SessionPersistenceModelInput{}
	this.Type = type_
	this.CookieName = cookieName
	this.PersistenceTimeout = persistenceTimeout
	this.PersistenceGranularity = persistenceGranularity
	return &this
}

// NewSessionPersistenceModelInputWithDefaults instantiates a new SessionPersistenceModelInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSessionPersistenceModelInputWithDefaults() *SessionPersistenceModelInput {
	this := SessionPersistenceModelInput{}
	return &this
}

// GetType returns the Type field value
func (o *SessionPersistenceModelInput) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SessionPersistenceModelInput) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SessionPersistenceModelInput) SetType(v string) {
	o.Type = v
}

// GetCookieName returns the CookieName field value
func (o *SessionPersistenceModelInput) GetCookieName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CookieName
}

// GetCookieNameOk returns a tuple with the CookieName field value
// and a boolean to check if the value has been set.
func (o *SessionPersistenceModelInput) GetCookieNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CookieName, true
}

// SetCookieName sets field value
func (o *SessionPersistenceModelInput) SetCookieName(v string) {
	o.CookieName = v
}

// GetPersistenceTimeout returns the PersistenceTimeout field value
func (o *SessionPersistenceModelInput) GetPersistenceTimeout() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PersistenceTimeout
}

// GetPersistenceTimeoutOk returns a tuple with the PersistenceTimeout field value
// and a boolean to check if the value has been set.
func (o *SessionPersistenceModelInput) GetPersistenceTimeoutOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PersistenceTimeout, true
}

// SetPersistenceTimeout sets field value
func (o *SessionPersistenceModelInput) SetPersistenceTimeout(v int32) {
	o.PersistenceTimeout = v
}

// GetPersistenceGranularity returns the PersistenceGranularity field value
func (o *SessionPersistenceModelInput) GetPersistenceGranularity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PersistenceGranularity
}

// GetPersistenceGranularityOk returns a tuple with the PersistenceGranularity field value
// and a boolean to check if the value has been set.
func (o *SessionPersistenceModelInput) GetPersistenceGranularityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PersistenceGranularity, true
}

// SetPersistenceGranularity sets field value
func (o *SessionPersistenceModelInput) SetPersistenceGranularity(v string) {
	o.PersistenceGranularity = v
}

func (o SessionPersistenceModelInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SessionPersistenceModelInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["cookie_name"] = o.CookieName
	toSerialize["persistence_timeout"] = o.PersistenceTimeout
	toSerialize["persistence_granularity"] = o.PersistenceGranularity

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SessionPersistenceModelInput) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"cookie_name",
		"persistence_timeout",
		"persistence_granularity",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSessionPersistenceModelInput := _SessionPersistenceModelInput{}

	err = json.Unmarshal(data, &varSessionPersistenceModelInput)

	if err != nil {
		return err
	}

	*o = SessionPersistenceModelInput(varSessionPersistenceModelInput)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "cookie_name")
		delete(additionalProperties, "persistence_timeout")
		delete(additionalProperties, "persistence_granularity")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSessionPersistenceModelInput struct {
	value *SessionPersistenceModelInput
	isSet bool
}

func (v NullableSessionPersistenceModelInput) Get() *SessionPersistenceModelInput {
	return v.value
}

func (v *NullableSessionPersistenceModelInput) Set(val *SessionPersistenceModelInput) {
	v.value = val
	v.isSet = true
}

func (v NullableSessionPersistenceModelInput) IsSet() bool {
	return v.isSet
}

func (v *NullableSessionPersistenceModelInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessionPersistenceModelInput(val *SessionPersistenceModelInput) *NullableSessionPersistenceModelInput {
	return &NullableSessionPersistenceModelInput{value: val, isSet: true}
}

func (v NullableSessionPersistenceModelInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessionPersistenceModelInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
