/*
Beyond Networking Service(BNS) Public IP/Security Group API

Public IP/Security Group API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network

import (
	"encoding/json"
	"fmt"
)

// checks if the BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel{}

// BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel struct for BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel
type BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel struct {
	// 연결된 리소스 ID
	Id                   string                     `json:"id"`
	Name                 NullableString             `json:"name,omitempty"`
	Status               NullableProvisioningStatus `json:"status,omitempty"`
	Type                 NullableString             `json:"type,omitempty"`
	DeviceOwner          NullableString             `json:"device_owner,omitempty"`
	DeviceId             NullableString             `json:"device_id,omitempty"`
	SubnetId             NullableString             `json:"subnet_id,omitempty"`
	SubnetName           NullableString             `json:"subnet_name,omitempty"`
	SubnetCidr           NullableString             `json:"subnet_cidr,omitempty"`
	VpcId                NullableString             `json:"vpc_id,omitempty"`
	VpcName              NullableString             `json:"vpc_name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel

// NewBnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel instantiates a new BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel(id string) *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel {
	this := BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel{}
	this.Id = id
	return &this
}

// NewBnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModelWithDefaults instantiates a new BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModelWithDefaults() *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel {
	this := BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel{}
	return &this
}

// GetId returns the Id field value
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) UnsetName() {
	o.Name.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) GetStatus() ProvisioningStatus {
	if o == nil || IsNil(o.Status.Get()) {
		var ret ProvisioningStatus
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) GetStatusOk() (*ProvisioningStatus, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableProvisioningStatus and assigns it to the Status field.
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) SetStatus(v ProvisioningStatus) {
	o.Status.Set(&v)
}

// SetStatusNil sets the value for Status to be an explicit nil
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) UnsetStatus() {
	o.Status.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) SetType(v string) {
	o.Type.Set(&v)
}

// SetTypeNil sets the value for Type to be an explicit nil
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) UnsetType() {
	o.Type.Unset()
}

// GetDeviceOwner returns the DeviceOwner field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) GetDeviceOwner() string {
	if o == nil || IsNil(o.DeviceOwner.Get()) {
		var ret string
		return ret
	}
	return *o.DeviceOwner.Get()
}

// GetDeviceOwnerOk returns a tuple with the DeviceOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) GetDeviceOwnerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeviceOwner.Get(), o.DeviceOwner.IsSet()
}

// HasDeviceOwner returns a boolean if a field has been set.
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) HasDeviceOwner() bool {
	if o != nil && o.DeviceOwner.IsSet() {
		return true
	}

	return false
}

// SetDeviceOwner gets a reference to the given NullableString and assigns it to the DeviceOwner field.
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) SetDeviceOwner(v string) {
	o.DeviceOwner.Set(&v)
}

// SetDeviceOwnerNil sets the value for DeviceOwner to be an explicit nil
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) SetDeviceOwnerNil() {
	o.DeviceOwner.Set(nil)
}

// UnsetDeviceOwner ensures that no value is present for DeviceOwner, not even an explicit nil
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) UnsetDeviceOwner() {
	o.DeviceOwner.Unset()
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) GetDeviceId() string {
	if o == nil || IsNil(o.DeviceId.Get()) {
		var ret string
		return ret
	}
	return *o.DeviceId.Get()
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) GetDeviceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeviceId.Get(), o.DeviceId.IsSet()
}

// HasDeviceId returns a boolean if a field has been set.
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) HasDeviceId() bool {
	if o != nil && o.DeviceId.IsSet() {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given NullableString and assigns it to the DeviceId field.
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) SetDeviceId(v string) {
	o.DeviceId.Set(&v)
}

// SetDeviceIdNil sets the value for DeviceId to be an explicit nil
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) SetDeviceIdNil() {
	o.DeviceId.Set(nil)
}

// UnsetDeviceId ensures that no value is present for DeviceId, not even an explicit nil
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) UnsetDeviceId() {
	o.DeviceId.Unset()
}

// GetSubnetId returns the SubnetId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) GetSubnetId() string {
	if o == nil || IsNil(o.SubnetId.Get()) {
		var ret string
		return ret
	}
	return *o.SubnetId.Get()
}

// GetSubnetIdOk returns a tuple with the SubnetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) GetSubnetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubnetId.Get(), o.SubnetId.IsSet()
}

// HasSubnetId returns a boolean if a field has been set.
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) HasSubnetId() bool {
	if o != nil && o.SubnetId.IsSet() {
		return true
	}

	return false
}

// SetSubnetId gets a reference to the given NullableString and assigns it to the SubnetId field.
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) SetSubnetId(v string) {
	o.SubnetId.Set(&v)
}

// SetSubnetIdNil sets the value for SubnetId to be an explicit nil
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) SetSubnetIdNil() {
	o.SubnetId.Set(nil)
}

// UnsetSubnetId ensures that no value is present for SubnetId, not even an explicit nil
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) UnsetSubnetId() {
	o.SubnetId.Unset()
}

// GetSubnetName returns the SubnetName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) GetSubnetName() string {
	if o == nil || IsNil(o.SubnetName.Get()) {
		var ret string
		return ret
	}
	return *o.SubnetName.Get()
}

// GetSubnetNameOk returns a tuple with the SubnetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) GetSubnetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubnetName.Get(), o.SubnetName.IsSet()
}

// HasSubnetName returns a boolean if a field has been set.
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) HasSubnetName() bool {
	if o != nil && o.SubnetName.IsSet() {
		return true
	}

	return false
}

// SetSubnetName gets a reference to the given NullableString and assigns it to the SubnetName field.
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) SetSubnetName(v string) {
	o.SubnetName.Set(&v)
}

// SetSubnetNameNil sets the value for SubnetName to be an explicit nil
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) SetSubnetNameNil() {
	o.SubnetName.Set(nil)
}

// UnsetSubnetName ensures that no value is present for SubnetName, not even an explicit nil
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) UnsetSubnetName() {
	o.SubnetName.Unset()
}

// GetSubnetCidr returns the SubnetCidr field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) GetSubnetCidr() string {
	if o == nil || IsNil(o.SubnetCidr.Get()) {
		var ret string
		return ret
	}
	return *o.SubnetCidr.Get()
}

// GetSubnetCidrOk returns a tuple with the SubnetCidr field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) GetSubnetCidrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubnetCidr.Get(), o.SubnetCidr.IsSet()
}

// HasSubnetCidr returns a boolean if a field has been set.
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) HasSubnetCidr() bool {
	if o != nil && o.SubnetCidr.IsSet() {
		return true
	}

	return false
}

// SetSubnetCidr gets a reference to the given NullableString and assigns it to the SubnetCidr field.
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) SetSubnetCidr(v string) {
	o.SubnetCidr.Set(&v)
}

// SetSubnetCidrNil sets the value for SubnetCidr to be an explicit nil
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) SetSubnetCidrNil() {
	o.SubnetCidr.Set(nil)
}

// UnsetSubnetCidr ensures that no value is present for SubnetCidr, not even an explicit nil
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) UnsetSubnetCidr() {
	o.SubnetCidr.Unset()
}

// GetVpcId returns the VpcId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) GetVpcId() string {
	if o == nil || IsNil(o.VpcId.Get()) {
		var ret string
		return ret
	}
	return *o.VpcId.Get()
}

// GetVpcIdOk returns a tuple with the VpcId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) GetVpcIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VpcId.Get(), o.VpcId.IsSet()
}

// HasVpcId returns a boolean if a field has been set.
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) HasVpcId() bool {
	if o != nil && o.VpcId.IsSet() {
		return true
	}

	return false
}

// SetVpcId gets a reference to the given NullableString and assigns it to the VpcId field.
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) SetVpcId(v string) {
	o.VpcId.Set(&v)
}

// SetVpcIdNil sets the value for VpcId to be an explicit nil
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) SetVpcIdNil() {
	o.VpcId.Set(nil)
}

// UnsetVpcId ensures that no value is present for VpcId, not even an explicit nil
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) UnsetVpcId() {
	o.VpcId.Unset()
}

// GetVpcName returns the VpcName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) GetVpcName() string {
	if o == nil || IsNil(o.VpcName.Get()) {
		var ret string
		return ret
	}
	return *o.VpcName.Get()
}

// GetVpcNameOk returns a tuple with the VpcName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) GetVpcNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VpcName.Get(), o.VpcName.IsSet()
}

// HasVpcName returns a boolean if a field has been set.
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) HasVpcName() bool {
	if o != nil && o.VpcName.IsSet() {
		return true
	}

	return false
}

// SetVpcName gets a reference to the given NullableString and assigns it to the VpcName field.
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) SetVpcName(v string) {
	o.VpcName.Set(&v)
}

// SetVpcNameNil sets the value for VpcName to be an explicit nil
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) SetVpcNameNil() {
	o.VpcName.Set(nil)
}

// UnsetVpcName ensures that no value is present for VpcName, not even an explicit nil
func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) UnsetVpcName() {
	o.VpcName.Unset()
}

func (o BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.DeviceOwner.IsSet() {
		toSerialize["device_owner"] = o.DeviceOwner.Get()
	}
	if o.DeviceId.IsSet() {
		toSerialize["device_id"] = o.DeviceId.Get()
	}
	if o.SubnetId.IsSet() {
		toSerialize["subnet_id"] = o.SubnetId.Get()
	}
	if o.SubnetName.IsSet() {
		toSerialize["subnet_name"] = o.SubnetName.Get()
	}
	if o.SubnetCidr.IsSet() {
		toSerialize["subnet_cidr"] = o.SubnetCidr.Get()
	}
	if o.VpcId.IsSet() {
		toSerialize["vpc_id"] = o.VpcId.Get()
	}
	if o.VpcName.IsSet() {
		toSerialize["vpc_name"] = o.VpcName.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel := _BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel{}

	err = json.Unmarshal(data, &varBnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel)

	if err != nil {
		return err
	}

	*o = BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel(varBnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "status")
		delete(additionalProperties, "type")
		delete(additionalProperties, "device_owner")
		delete(additionalProperties, "device_id")
		delete(additionalProperties, "subnet_id")
		delete(additionalProperties, "subnet_name")
		delete(additionalProperties, "subnet_cidr")
		delete(additionalProperties, "vpc_id")
		delete(additionalProperties, "vpc_name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel struct {
	value *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel
	isSet bool
}

func (v NullableBnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) Get() *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel {
	return v.value
}

func (v *NullableBnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) Set(val *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel(val *BnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) *NullableBnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel {
	return &NullableBnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel{value: val, isSet: true}
}

func (v NullableBnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBnsNetworkV1ApiGetPublicIpModelRelatedResourceInfoModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
