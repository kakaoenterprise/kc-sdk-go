/*
Beyond Networking Service(BNS) Public IP/Security Group API

Public IP/Security Group API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network

import (
	"encoding/json"
	"fmt"
)

// checks if the BnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel{}

// BnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel struct for BnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel
type BnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel struct {
	PublicIp             BnsNetworkV1ApiUpdatePublicIpModelFloatingIpModel `json:"public_ip"`
	AdditionalProperties map[string]interface{}
}

type _BnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel BnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel

// NewBnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel instantiates a new BnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel(publicIp BnsNetworkV1ApiUpdatePublicIpModelFloatingIpModel) *BnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel {
	this := BnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel{}
	this.PublicIp = publicIp
	return &this
}

// NewBnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModelWithDefaults instantiates a new BnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModelWithDefaults() *BnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel {
	this := BnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel{}
	return &this
}

// GetPublicIp returns the PublicIp field value
func (o *BnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel) GetPublicIp() BnsNetworkV1ApiUpdatePublicIpModelFloatingIpModel {
	if o == nil {
		var ret BnsNetworkV1ApiUpdatePublicIpModelFloatingIpModel
		return ret
	}

	return o.PublicIp
}

// GetPublicIpOk returns a tuple with the PublicIp field value
// and a boolean to check if the value has been set.
func (o *BnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel) GetPublicIpOk() (*BnsNetworkV1ApiUpdatePublicIpModelFloatingIpModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublicIp, true
}

// SetPublicIp sets field value
func (o *BnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel) SetPublicIp(v BnsNetworkV1ApiUpdatePublicIpModelFloatingIpModel) {
	o.PublicIp = v
}

func (o BnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["public_ip"] = o.PublicIp

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"public_ip",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel := _BnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel{}

	err = json.Unmarshal(data, &varBnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel)

	if err != nil {
		return err
	}

	*o = BnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel(varBnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "public_ip")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel struct {
	value *BnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel
	isSet bool
}

func (v NullableBnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel) Get() *BnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel {
	return v.value
}

func (v *NullableBnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel) Set(val *BnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel(val *BnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel) *NullableBnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel {
	return &NullableBnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel{value: val, isSet: true}
}

func (v NullableBnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBnsNetworkV1ApiUpdatePublicIpModelResponsePublicIpModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
