/*
Beyond Networking Service(BNS) Public IP/Security Group API

Public IP/Security Group API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package network

import (
	"encoding/json"
	"fmt"
)

// checks if the BodyUpdateSecurityGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BodyUpdateSecurityGroup{}

// BodyUpdateSecurityGroup struct for BodyUpdateSecurityGroup
type BodyUpdateSecurityGroup struct {
	SecurityGroup        EditSecurityGroupModel `json:"security_group"`
	AdditionalProperties map[string]interface{}
}

type _BodyUpdateSecurityGroup BodyUpdateSecurityGroup

// NewBodyUpdateSecurityGroup instantiates a new BodyUpdateSecurityGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBodyUpdateSecurityGroup(securityGroup EditSecurityGroupModel) *BodyUpdateSecurityGroup {
	this := BodyUpdateSecurityGroup{}
	this.SecurityGroup = securityGroup
	return &this
}

// NewBodyUpdateSecurityGroupWithDefaults instantiates a new BodyUpdateSecurityGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBodyUpdateSecurityGroupWithDefaults() *BodyUpdateSecurityGroup {
	this := BodyUpdateSecurityGroup{}
	return &this
}

// GetSecurityGroup returns the SecurityGroup field value
func (o *BodyUpdateSecurityGroup) GetSecurityGroup() EditSecurityGroupModel {
	if o == nil {
		var ret EditSecurityGroupModel
		return ret
	}

	return o.SecurityGroup
}

// GetSecurityGroupOk returns a tuple with the SecurityGroup field value
// and a boolean to check if the value has been set.
func (o *BodyUpdateSecurityGroup) GetSecurityGroupOk() (*EditSecurityGroupModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecurityGroup, true
}

// SetSecurityGroup sets field value
func (o *BodyUpdateSecurityGroup) SetSecurityGroup(v EditSecurityGroupModel) {
	o.SecurityGroup = v
}

func (o BodyUpdateSecurityGroup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BodyUpdateSecurityGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["security_group"] = o.SecurityGroup

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BodyUpdateSecurityGroup) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"security_group",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBodyUpdateSecurityGroup := _BodyUpdateSecurityGroup{}

	err = json.Unmarshal(data, &varBodyUpdateSecurityGroup)

	if err != nil {
		return err
	}

	*o = BodyUpdateSecurityGroup(varBodyUpdateSecurityGroup)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "security_group")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBodyUpdateSecurityGroup struct {
	value *BodyUpdateSecurityGroup
	isSet bool
}

func (v NullableBodyUpdateSecurityGroup) Get() *BodyUpdateSecurityGroup {
	return v.value
}

func (v *NullableBodyUpdateSecurityGroup) Set(val *BodyUpdateSecurityGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableBodyUpdateSecurityGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableBodyUpdateSecurityGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBodyUpdateSecurityGroup(val *BodyUpdateSecurityGroup) *NullableBodyUpdateSecurityGroup {
	return &NullableBodyUpdateSecurityGroup{value: val, isSet: true}
}

func (v NullableBodyUpdateSecurityGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBodyUpdateSecurityGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
