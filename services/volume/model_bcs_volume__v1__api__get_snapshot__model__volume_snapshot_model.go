/*
Beyond Compute Service(BCS) Volume API

Beyond Compute Service Volume API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package volume

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel{}

// BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel struct for BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel
type BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel struct {
	// 스냅샷의 ID
	Id                   string         `json:"id"`
	Name                 NullableString `json:"name,omitempty"`
	Description          NullableString `json:"description,omitempty"`
	Size                 NullableInt64  `json:"size,omitempty"`
	Status               NullableString `json:"status,omitempty"`
	VolumeId             NullableString `json:"volume_id,omitempty"`
	UserId               NullableString `json:"user_id,omitempty"`
	ProjectId            NullableString `json:"project_id,omitempty"`
	ParentId             NullableString `json:"parent_id,omitempty"`
	CreatedAt            NullableTime   `json:"created_at,omitempty"`
	UpdatedAt            NullableTime   `json:"updated_at,omitempty"`
	IsIncremental        NullableBool   `json:"is_incremental,omitempty"`
	IsDependentSnapshot  NullableBool   `json:"is_dependent_snapshot,omitempty"`
	RealSize             NullableInt64  `json:"real_size,omitempty"`
	ScheduleId           NullableString `json:"schedule_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel

// NewBcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel instantiates a new BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel(id string) *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel {
	this := BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel{}
	this.Id = id
	return &this
}

// NewBcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModelWithDefaults instantiates a new BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModelWithDefaults() *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel {
	this := BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel{}
	return &this
}

// GetId returns the Id field value
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) UnsetName() {
	o.Name.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) UnsetDescription() {
	o.Description.Unset()
}

// GetSize returns the Size field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) GetSize() int64 {
	if o == nil || IsNil(o.Size.Get()) {
		var ret int64
		return ret
	}
	return *o.Size.Get()
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) GetSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Size.Get(), o.Size.IsSet()
}

// HasSize returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) HasSize() bool {
	if o != nil && o.Size.IsSet() {
		return true
	}

	return false
}

// SetSize gets a reference to the given NullableInt64 and assigns it to the Size field.
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) SetSize(v int64) {
	o.Size.Set(&v)
}

// SetSizeNil sets the value for Size to be an explicit nil
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) SetSizeNil() {
	o.Size.Set(nil)
}

// UnsetSize ensures that no value is present for Size, not even an explicit nil
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) UnsetSize() {
	o.Size.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) SetStatus(v string) {
	o.Status.Set(&v)
}

// SetStatusNil sets the value for Status to be an explicit nil
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) UnsetStatus() {
	o.Status.Unset()
}

// GetVolumeId returns the VolumeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) GetVolumeId() string {
	if o == nil || IsNil(o.VolumeId.Get()) {
		var ret string
		return ret
	}
	return *o.VolumeId.Get()
}

// GetVolumeIdOk returns a tuple with the VolumeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) GetVolumeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VolumeId.Get(), o.VolumeId.IsSet()
}

// HasVolumeId returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) HasVolumeId() bool {
	if o != nil && o.VolumeId.IsSet() {
		return true
	}

	return false
}

// SetVolumeId gets a reference to the given NullableString and assigns it to the VolumeId field.
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) SetVolumeId(v string) {
	o.VolumeId.Set(&v)
}

// SetVolumeIdNil sets the value for VolumeId to be an explicit nil
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) SetVolumeIdNil() {
	o.VolumeId.Set(nil)
}

// UnsetVolumeId ensures that no value is present for VolumeId, not even an explicit nil
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) UnsetVolumeId() {
	o.VolumeId.Unset()
}

// GetUserId returns the UserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) GetUserId() string {
	if o == nil || IsNil(o.UserId.Get()) {
		var ret string
		return ret
	}
	return *o.UserId.Get()
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserId.Get(), o.UserId.IsSet()
}

// HasUserId returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) HasUserId() bool {
	if o != nil && o.UserId.IsSet() {
		return true
	}

	return false
}

// SetUserId gets a reference to the given NullableString and assigns it to the UserId field.
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) SetUserId(v string) {
	o.UserId.Set(&v)
}

// SetUserIdNil sets the value for UserId to be an explicit nil
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) SetUserIdNil() {
	o.UserId.Set(nil)
}

// UnsetUserId ensures that no value is present for UserId, not even an explicit nil
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) UnsetUserId() {
	o.UserId.Unset()
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId.Get()) {
		var ret string
		return ret
	}
	return *o.ProjectId.Get()
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectId.Get(), o.ProjectId.IsSet()
}

// HasProjectId returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) HasProjectId() bool {
	if o != nil && o.ProjectId.IsSet() {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given NullableString and assigns it to the ProjectId field.
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) SetProjectId(v string) {
	o.ProjectId.Set(&v)
}

// SetProjectIdNil sets the value for ProjectId to be an explicit nil
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) SetProjectIdNil() {
	o.ProjectId.Set(nil)
}

// UnsetProjectId ensures that no value is present for ProjectId, not even an explicit nil
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) UnsetProjectId() {
	o.ProjectId.Unset()
}

// GetParentId returns the ParentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) GetParentId() string {
	if o == nil || IsNil(o.ParentId.Get()) {
		var ret string
		return ret
	}
	return *o.ParentId.Get()
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) GetParentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentId.Get(), o.ParentId.IsSet()
}

// HasParentId returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) HasParentId() bool {
	if o != nil && o.ParentId.IsSet() {
		return true
	}

	return false
}

// SetParentId gets a reference to the given NullableString and assigns it to the ParentId field.
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) SetParentId(v string) {
	o.ParentId.Set(&v)
}

// SetParentIdNil sets the value for ParentId to be an explicit nil
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) SetParentIdNil() {
	o.ParentId.Set(nil)
}

// UnsetParentId ensures that no value is present for ParentId, not even an explicit nil
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) UnsetParentId() {
	o.ParentId.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given NullableTime and assigns it to the CreatedAt field.
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) SetCreatedAt(v time.Time) {
	o.CreatedAt.Set(&v)
}

// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) SetCreatedAtNil() {
	o.CreatedAt.Set(nil)
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableTime and assigns it to the UpdatedAt field.
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) SetUpdatedAt(v time.Time) {
	o.UpdatedAt.Set(&v)
}

// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) SetUpdatedAtNil() {
	o.UpdatedAt.Set(nil)
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

// GetIsIncremental returns the IsIncremental field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) GetIsIncremental() bool {
	if o == nil || IsNil(o.IsIncremental.Get()) {
		var ret bool
		return ret
	}
	return *o.IsIncremental.Get()
}

// GetIsIncrementalOk returns a tuple with the IsIncremental field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) GetIsIncrementalOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsIncremental.Get(), o.IsIncremental.IsSet()
}

// HasIsIncremental returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) HasIsIncremental() bool {
	if o != nil && o.IsIncremental.IsSet() {
		return true
	}

	return false
}

// SetIsIncremental gets a reference to the given NullableBool and assigns it to the IsIncremental field.
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) SetIsIncremental(v bool) {
	o.IsIncremental.Set(&v)
}

// SetIsIncrementalNil sets the value for IsIncremental to be an explicit nil
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) SetIsIncrementalNil() {
	o.IsIncremental.Set(nil)
}

// UnsetIsIncremental ensures that no value is present for IsIncremental, not even an explicit nil
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) UnsetIsIncremental() {
	o.IsIncremental.Unset()
}

// GetIsDependentSnapshot returns the IsDependentSnapshot field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) GetIsDependentSnapshot() bool {
	if o == nil || IsNil(o.IsDependentSnapshot.Get()) {
		var ret bool
		return ret
	}
	return *o.IsDependentSnapshot.Get()
}

// GetIsDependentSnapshotOk returns a tuple with the IsDependentSnapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) GetIsDependentSnapshotOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsDependentSnapshot.Get(), o.IsDependentSnapshot.IsSet()
}

// HasIsDependentSnapshot returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) HasIsDependentSnapshot() bool {
	if o != nil && o.IsDependentSnapshot.IsSet() {
		return true
	}

	return false
}

// SetIsDependentSnapshot gets a reference to the given NullableBool and assigns it to the IsDependentSnapshot field.
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) SetIsDependentSnapshot(v bool) {
	o.IsDependentSnapshot.Set(&v)
}

// SetIsDependentSnapshotNil sets the value for IsDependentSnapshot to be an explicit nil
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) SetIsDependentSnapshotNil() {
	o.IsDependentSnapshot.Set(nil)
}

// UnsetIsDependentSnapshot ensures that no value is present for IsDependentSnapshot, not even an explicit nil
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) UnsetIsDependentSnapshot() {
	o.IsDependentSnapshot.Unset()
}

// GetRealSize returns the RealSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) GetRealSize() int64 {
	if o == nil || IsNil(o.RealSize.Get()) {
		var ret int64
		return ret
	}
	return *o.RealSize.Get()
}

// GetRealSizeOk returns a tuple with the RealSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) GetRealSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.RealSize.Get(), o.RealSize.IsSet()
}

// HasRealSize returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) HasRealSize() bool {
	if o != nil && o.RealSize.IsSet() {
		return true
	}

	return false
}

// SetRealSize gets a reference to the given NullableInt64 and assigns it to the RealSize field.
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) SetRealSize(v int64) {
	o.RealSize.Set(&v)
}

// SetRealSizeNil sets the value for RealSize to be an explicit nil
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) SetRealSizeNil() {
	o.RealSize.Set(nil)
}

// UnsetRealSize ensures that no value is present for RealSize, not even an explicit nil
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) UnsetRealSize() {
	o.RealSize.Unset()
}

// GetScheduleId returns the ScheduleId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) GetScheduleId() string {
	if o == nil || IsNil(o.ScheduleId.Get()) {
		var ret string
		return ret
	}
	return *o.ScheduleId.Get()
}

// GetScheduleIdOk returns a tuple with the ScheduleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) GetScheduleIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScheduleId.Get(), o.ScheduleId.IsSet()
}

// HasScheduleId returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) HasScheduleId() bool {
	if o != nil && o.ScheduleId.IsSet() {
		return true
	}

	return false
}

// SetScheduleId gets a reference to the given NullableString and assigns it to the ScheduleId field.
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) SetScheduleId(v string) {
	o.ScheduleId.Set(&v)
}

// SetScheduleIdNil sets the value for ScheduleId to be an explicit nil
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) SetScheduleIdNil() {
	o.ScheduleId.Set(nil)
}

// UnsetScheduleId ensures that no value is present for ScheduleId, not even an explicit nil
func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) UnsetScheduleId() {
	o.ScheduleId.Unset()
}

func (o BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Size.IsSet() {
		toSerialize["size"] = o.Size.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.VolumeId.IsSet() {
		toSerialize["volume_id"] = o.VolumeId.Get()
	}
	if o.UserId.IsSet() {
		toSerialize["user_id"] = o.UserId.Get()
	}
	if o.ProjectId.IsSet() {
		toSerialize["project_id"] = o.ProjectId.Get()
	}
	if o.ParentId.IsSet() {
		toSerialize["parent_id"] = o.ParentId.Get()
	}
	if o.CreatedAt.IsSet() {
		toSerialize["created_at"] = o.CreatedAt.Get()
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["updated_at"] = o.UpdatedAt.Get()
	}
	if o.IsIncremental.IsSet() {
		toSerialize["is_incremental"] = o.IsIncremental.Get()
	}
	if o.IsDependentSnapshot.IsSet() {
		toSerialize["is_dependent_snapshot"] = o.IsDependentSnapshot.Get()
	}
	if o.RealSize.IsSet() {
		toSerialize["real_size"] = o.RealSize.Get()
	}
	if o.ScheduleId.IsSet() {
		toSerialize["schedule_id"] = o.ScheduleId.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel := _BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel{}

	err = json.Unmarshal(data, &varBcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel)

	if err != nil {
		return err
	}

	*o = BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel(varBcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "size")
		delete(additionalProperties, "status")
		delete(additionalProperties, "volume_id")
		delete(additionalProperties, "user_id")
		delete(additionalProperties, "project_id")
		delete(additionalProperties, "parent_id")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "is_incremental")
		delete(additionalProperties, "is_dependent_snapshot")
		delete(additionalProperties, "real_size")
		delete(additionalProperties, "schedule_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel struct {
	value *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel
	isSet bool
}

func (v NullableBcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) Get() *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel {
	return v.value
}

func (v *NullableBcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) Set(val *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel(val *BcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) *NullableBcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel {
	return &NullableBcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel{value: val, isSet: true}
}

func (v NullableBcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBcsVolumeV1ApiGetSnapshotModelVolumeSnapshotModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
