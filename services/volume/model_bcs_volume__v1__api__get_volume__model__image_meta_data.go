/*
Beyond Compute Service(BCS) Volume API

Beyond Compute Service Volume API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package volume

import (
	"encoding/json"
)

// checks if the BcsVolumeV1ApiGetVolumeModelImageMetaData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BcsVolumeV1ApiGetVolumeModelImageMetaData{}

// BcsVolumeV1ApiGetVolumeModelImageMetaData struct for BcsVolumeV1ApiGetVolumeModelImageMetaData
type BcsVolumeV1ApiGetVolumeModelImageMetaData struct {
	ContainerFormat      NullableString `json:"container_format,omitempty"`
	DiskFormat           NullableString `json:"disk_format,omitempty"`
	ImageId              NullableString `json:"image_id,omitempty"`
	ImageName            NullableString `json:"image_name,omitempty"`
	MinDisk              NullableString `json:"min_disk,omitempty"`
	OsType               NullableString `json:"os_type,omitempty"`
	MinRam               NullableString `json:"min_ram,omitempty"`
	Size                 NullableString `json:"size,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BcsVolumeV1ApiGetVolumeModelImageMetaData BcsVolumeV1ApiGetVolumeModelImageMetaData

// NewBcsVolumeV1ApiGetVolumeModelImageMetaData instantiates a new BcsVolumeV1ApiGetVolumeModelImageMetaData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBcsVolumeV1ApiGetVolumeModelImageMetaData() *BcsVolumeV1ApiGetVolumeModelImageMetaData {
	this := BcsVolumeV1ApiGetVolumeModelImageMetaData{}
	return &this
}

// NewBcsVolumeV1ApiGetVolumeModelImageMetaDataWithDefaults instantiates a new BcsVolumeV1ApiGetVolumeModelImageMetaData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBcsVolumeV1ApiGetVolumeModelImageMetaDataWithDefaults() *BcsVolumeV1ApiGetVolumeModelImageMetaData {
	this := BcsVolumeV1ApiGetVolumeModelImageMetaData{}
	return &this
}

// GetContainerFormat returns the ContainerFormat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) GetContainerFormat() string {
	if o == nil || IsNil(o.ContainerFormat.Get()) {
		var ret string
		return ret
	}
	return *o.ContainerFormat.Get()
}

// GetContainerFormatOk returns a tuple with the ContainerFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) GetContainerFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContainerFormat.Get(), o.ContainerFormat.IsSet()
}

// HasContainerFormat returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) HasContainerFormat() bool {
	if o != nil && o.ContainerFormat.IsSet() {
		return true
	}

	return false
}

// SetContainerFormat gets a reference to the given NullableString and assigns it to the ContainerFormat field.
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) SetContainerFormat(v string) {
	o.ContainerFormat.Set(&v)
}

// SetContainerFormatNil sets the value for ContainerFormat to be an explicit nil
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) SetContainerFormatNil() {
	o.ContainerFormat.Set(nil)
}

// UnsetContainerFormat ensures that no value is present for ContainerFormat, not even an explicit nil
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) UnsetContainerFormat() {
	o.ContainerFormat.Unset()
}

// GetDiskFormat returns the DiskFormat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) GetDiskFormat() string {
	if o == nil || IsNil(o.DiskFormat.Get()) {
		var ret string
		return ret
	}
	return *o.DiskFormat.Get()
}

// GetDiskFormatOk returns a tuple with the DiskFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) GetDiskFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DiskFormat.Get(), o.DiskFormat.IsSet()
}

// HasDiskFormat returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) HasDiskFormat() bool {
	if o != nil && o.DiskFormat.IsSet() {
		return true
	}

	return false
}

// SetDiskFormat gets a reference to the given NullableString and assigns it to the DiskFormat field.
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) SetDiskFormat(v string) {
	o.DiskFormat.Set(&v)
}

// SetDiskFormatNil sets the value for DiskFormat to be an explicit nil
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) SetDiskFormatNil() {
	o.DiskFormat.Set(nil)
}

// UnsetDiskFormat ensures that no value is present for DiskFormat, not even an explicit nil
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) UnsetDiskFormat() {
	o.DiskFormat.Unset()
}

// GetImageId returns the ImageId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) GetImageId() string {
	if o == nil || IsNil(o.ImageId.Get()) {
		var ret string
		return ret
	}
	return *o.ImageId.Get()
}

// GetImageIdOk returns a tuple with the ImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) GetImageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageId.Get(), o.ImageId.IsSet()
}

// HasImageId returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) HasImageId() bool {
	if o != nil && o.ImageId.IsSet() {
		return true
	}

	return false
}

// SetImageId gets a reference to the given NullableString and assigns it to the ImageId field.
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) SetImageId(v string) {
	o.ImageId.Set(&v)
}

// SetImageIdNil sets the value for ImageId to be an explicit nil
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) SetImageIdNil() {
	o.ImageId.Set(nil)
}

// UnsetImageId ensures that no value is present for ImageId, not even an explicit nil
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) UnsetImageId() {
	o.ImageId.Unset()
}

// GetImageName returns the ImageName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) GetImageName() string {
	if o == nil || IsNil(o.ImageName.Get()) {
		var ret string
		return ret
	}
	return *o.ImageName.Get()
}

// GetImageNameOk returns a tuple with the ImageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) GetImageNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageName.Get(), o.ImageName.IsSet()
}

// HasImageName returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) HasImageName() bool {
	if o != nil && o.ImageName.IsSet() {
		return true
	}

	return false
}

// SetImageName gets a reference to the given NullableString and assigns it to the ImageName field.
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) SetImageName(v string) {
	o.ImageName.Set(&v)
}

// SetImageNameNil sets the value for ImageName to be an explicit nil
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) SetImageNameNil() {
	o.ImageName.Set(nil)
}

// UnsetImageName ensures that no value is present for ImageName, not even an explicit nil
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) UnsetImageName() {
	o.ImageName.Unset()
}

// GetMinDisk returns the MinDisk field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) GetMinDisk() string {
	if o == nil || IsNil(o.MinDisk.Get()) {
		var ret string
		return ret
	}
	return *o.MinDisk.Get()
}

// GetMinDiskOk returns a tuple with the MinDisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) GetMinDiskOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinDisk.Get(), o.MinDisk.IsSet()
}

// HasMinDisk returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) HasMinDisk() bool {
	if o != nil && o.MinDisk.IsSet() {
		return true
	}

	return false
}

// SetMinDisk gets a reference to the given NullableString and assigns it to the MinDisk field.
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) SetMinDisk(v string) {
	o.MinDisk.Set(&v)
}

// SetMinDiskNil sets the value for MinDisk to be an explicit nil
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) SetMinDiskNil() {
	o.MinDisk.Set(nil)
}

// UnsetMinDisk ensures that no value is present for MinDisk, not even an explicit nil
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) UnsetMinDisk() {
	o.MinDisk.Unset()
}

// GetOsType returns the OsType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) GetOsType() string {
	if o == nil || IsNil(o.OsType.Get()) {
		var ret string
		return ret
	}
	return *o.OsType.Get()
}

// GetOsTypeOk returns a tuple with the OsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) GetOsTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OsType.Get(), o.OsType.IsSet()
}

// HasOsType returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) HasOsType() bool {
	if o != nil && o.OsType.IsSet() {
		return true
	}

	return false
}

// SetOsType gets a reference to the given NullableString and assigns it to the OsType field.
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) SetOsType(v string) {
	o.OsType.Set(&v)
}

// SetOsTypeNil sets the value for OsType to be an explicit nil
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) SetOsTypeNil() {
	o.OsType.Set(nil)
}

// UnsetOsType ensures that no value is present for OsType, not even an explicit nil
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) UnsetOsType() {
	o.OsType.Unset()
}

// GetMinRam returns the MinRam field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) GetMinRam() string {
	if o == nil || IsNil(o.MinRam.Get()) {
		var ret string
		return ret
	}
	return *o.MinRam.Get()
}

// GetMinRamOk returns a tuple with the MinRam field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) GetMinRamOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinRam.Get(), o.MinRam.IsSet()
}

// HasMinRam returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) HasMinRam() bool {
	if o != nil && o.MinRam.IsSet() {
		return true
	}

	return false
}

// SetMinRam gets a reference to the given NullableString and assigns it to the MinRam field.
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) SetMinRam(v string) {
	o.MinRam.Set(&v)
}

// SetMinRamNil sets the value for MinRam to be an explicit nil
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) SetMinRamNil() {
	o.MinRam.Set(nil)
}

// UnsetMinRam ensures that no value is present for MinRam, not even an explicit nil
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) UnsetMinRam() {
	o.MinRam.Unset()
}

// GetSize returns the Size field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) GetSize() string {
	if o == nil || IsNil(o.Size.Get()) {
		var ret string
		return ret
	}
	return *o.Size.Get()
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) GetSizeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Size.Get(), o.Size.IsSet()
}

// HasSize returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) HasSize() bool {
	if o != nil && o.Size.IsSet() {
		return true
	}

	return false
}

// SetSize gets a reference to the given NullableString and assigns it to the Size field.
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) SetSize(v string) {
	o.Size.Set(&v)
}

// SetSizeNil sets the value for Size to be an explicit nil
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) SetSizeNil() {
	o.Size.Set(nil)
}

// UnsetSize ensures that no value is present for Size, not even an explicit nil
func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) UnsetSize() {
	o.Size.Unset()
}

func (o BcsVolumeV1ApiGetVolumeModelImageMetaData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BcsVolumeV1ApiGetVolumeModelImageMetaData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ContainerFormat.IsSet() {
		toSerialize["container_format"] = o.ContainerFormat.Get()
	}
	if o.DiskFormat.IsSet() {
		toSerialize["disk_format"] = o.DiskFormat.Get()
	}
	if o.ImageId.IsSet() {
		toSerialize["image_id"] = o.ImageId.Get()
	}
	if o.ImageName.IsSet() {
		toSerialize["image_name"] = o.ImageName.Get()
	}
	if o.MinDisk.IsSet() {
		toSerialize["min_disk"] = o.MinDisk.Get()
	}
	if o.OsType.IsSet() {
		toSerialize["os_type"] = o.OsType.Get()
	}
	if o.MinRam.IsSet() {
		toSerialize["min_ram"] = o.MinRam.Get()
	}
	if o.Size.IsSet() {
		toSerialize["size"] = o.Size.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BcsVolumeV1ApiGetVolumeModelImageMetaData) UnmarshalJSON(data []byte) (err error) {
	varBcsVolumeV1ApiGetVolumeModelImageMetaData := _BcsVolumeV1ApiGetVolumeModelImageMetaData{}

	err = json.Unmarshal(data, &varBcsVolumeV1ApiGetVolumeModelImageMetaData)

	if err != nil {
		return err
	}

	*o = BcsVolumeV1ApiGetVolumeModelImageMetaData(varBcsVolumeV1ApiGetVolumeModelImageMetaData)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "container_format")
		delete(additionalProperties, "disk_format")
		delete(additionalProperties, "image_id")
		delete(additionalProperties, "image_name")
		delete(additionalProperties, "min_disk")
		delete(additionalProperties, "os_type")
		delete(additionalProperties, "min_ram")
		delete(additionalProperties, "size")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBcsVolumeV1ApiGetVolumeModelImageMetaData struct {
	value *BcsVolumeV1ApiGetVolumeModelImageMetaData
	isSet bool
}

func (v NullableBcsVolumeV1ApiGetVolumeModelImageMetaData) Get() *BcsVolumeV1ApiGetVolumeModelImageMetaData {
	return v.value
}

func (v *NullableBcsVolumeV1ApiGetVolumeModelImageMetaData) Set(val *BcsVolumeV1ApiGetVolumeModelImageMetaData) {
	v.value = val
	v.isSet = true
}

func (v NullableBcsVolumeV1ApiGetVolumeModelImageMetaData) IsSet() bool {
	return v.isSet
}

func (v *NullableBcsVolumeV1ApiGetVolumeModelImageMetaData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBcsVolumeV1ApiGetVolumeModelImageMetaData(val *BcsVolumeV1ApiGetVolumeModelImageMetaData) *NullableBcsVolumeV1ApiGetVolumeModelImageMetaData {
	return &NullableBcsVolumeV1ApiGetVolumeModelImageMetaData{value: val, isSet: true}
}

func (v NullableBcsVolumeV1ApiGetVolumeModelImageMetaData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBcsVolumeV1ApiGetVolumeModelImageMetaData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
