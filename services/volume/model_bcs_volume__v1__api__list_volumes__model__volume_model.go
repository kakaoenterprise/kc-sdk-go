/*
Beyond Compute Service(BCS) Volume API

Beyond Compute Service Volume API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package volume

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the BcsVolumeV1ApiListVolumesModelVolumeModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BcsVolumeV1ApiListVolumesModelVolumeModel{}

// BcsVolumeV1ApiListVolumesModelVolumeModel struct for BcsVolumeV1ApiListVolumesModelVolumeModel
type BcsVolumeV1ApiListVolumesModelVolumeModel struct {
	// 볼륨 ID
	Id                   string                                              `json:"id"`
	Size                 NullableInt32                                       `json:"size,omitempty"`
	Status               NullableString                                      `json:"status,omitempty"`
	Name                 NullableString                                      `json:"name,omitempty"`
	Description          NullableString                                      `json:"description,omitempty"`
	IsBootable           NullableBool                                        `json:"is_bootable,omitempty"`
	MountPoint           NullableString                                      `json:"mount_point,omitempty"`
	Metadata             map[string]string                                   `json:"metadata,omitempty"`
	IsEncrypted          NullableBool                                        `json:"is_encrypted,omitempty"`
	IsRoot               NullableBool                                        `json:"is_root,omitempty"`
	Type                 NullableString                                      `json:"type,omitempty"`
	UserId               NullableString                                      `json:"user_id,omitempty"`
	ProjectId            NullableString                                      `json:"project_id,omitempty"`
	AvailabilityZone     NullableAvailabilityZone                            `json:"availability_zone,omitempty"`
	AttachStatus         NullableString                                      `json:"attach_status,omitempty"`
	LaunchedAt           NullableTime                                        `json:"launched_at,omitempty"`
	EncryptionKeyId      NullableString                                      `json:"encryption_key_id,omitempty"`
	PreviousStatus       NullableString                                      `json:"previous_status,omitempty"`
	CreatedAt            NullableTime                                        `json:"created_at,omitempty"`
	UpdatedAt            NullableTime                                        `json:"updated_at,omitempty"`
	InstanceId           NullableString                                      `json:"instance_id,omitempty"`
	InstanceName         NullableString                                      `json:"instance_name,omitempty"`
	ImageMetadata        NullableBcsVolumeV1ApiListVolumesModelImageMetaData `json:"image_metadata,omitempty"`
	VolumeType           NullableString                                      `json:"volume_type,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BcsVolumeV1ApiListVolumesModelVolumeModel BcsVolumeV1ApiListVolumesModelVolumeModel

// NewBcsVolumeV1ApiListVolumesModelVolumeModel instantiates a new BcsVolumeV1ApiListVolumesModelVolumeModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBcsVolumeV1ApiListVolumesModelVolumeModel(id string) *BcsVolumeV1ApiListVolumesModelVolumeModel {
	this := BcsVolumeV1ApiListVolumesModelVolumeModel{}
	this.Id = id
	return &this
}

// NewBcsVolumeV1ApiListVolumesModelVolumeModelWithDefaults instantiates a new BcsVolumeV1ApiListVolumesModelVolumeModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBcsVolumeV1ApiListVolumesModelVolumeModelWithDefaults() *BcsVolumeV1ApiListVolumesModelVolumeModel {
	this := BcsVolumeV1ApiListVolumesModelVolumeModel{}
	return &this
}

// GetId returns the Id field value
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetId(v string) {
	o.Id = v
}

// GetSize returns the Size field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetSize() int32 {
	if o == nil || IsNil(o.Size.Get()) {
		var ret int32
		return ret
	}
	return *o.Size.Get()
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Size.Get(), o.Size.IsSet()
}

// HasSize returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) HasSize() bool {
	if o != nil && o.Size.IsSet() {
		return true
	}

	return false
}

// SetSize gets a reference to the given NullableInt32 and assigns it to the Size field.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetSize(v int32) {
	o.Size.Set(&v)
}

// SetSizeNil sets the value for Size to be an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetSizeNil() {
	o.Size.Set(nil)
}

// UnsetSize ensures that no value is present for Size, not even an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) UnsetSize() {
	o.Size.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetStatus(v string) {
	o.Status.Set(&v)
}

// SetStatusNil sets the value for Status to be an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) UnsetStatus() {
	o.Status.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) UnsetName() {
	o.Name.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) UnsetDescription() {
	o.Description.Unset()
}

// GetIsBootable returns the IsBootable field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetIsBootable() bool {
	if o == nil || IsNil(o.IsBootable.Get()) {
		var ret bool
		return ret
	}
	return *o.IsBootable.Get()
}

// GetIsBootableOk returns a tuple with the IsBootable field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetIsBootableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsBootable.Get(), o.IsBootable.IsSet()
}

// HasIsBootable returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) HasIsBootable() bool {
	if o != nil && o.IsBootable.IsSet() {
		return true
	}

	return false
}

// SetIsBootable gets a reference to the given NullableBool and assigns it to the IsBootable field.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetIsBootable(v bool) {
	o.IsBootable.Set(&v)
}

// SetIsBootableNil sets the value for IsBootable to be an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetIsBootableNil() {
	o.IsBootable.Set(nil)
}

// UnsetIsBootable ensures that no value is present for IsBootable, not even an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) UnsetIsBootable() {
	o.IsBootable.Unset()
}

// GetMountPoint returns the MountPoint field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetMountPoint() string {
	if o == nil || IsNil(o.MountPoint.Get()) {
		var ret string
		return ret
	}
	return *o.MountPoint.Get()
}

// GetMountPointOk returns a tuple with the MountPoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetMountPointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MountPoint.Get(), o.MountPoint.IsSet()
}

// HasMountPoint returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) HasMountPoint() bool {
	if o != nil && o.MountPoint.IsSet() {
		return true
	}

	return false
}

// SetMountPoint gets a reference to the given NullableString and assigns it to the MountPoint field.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetMountPoint(v string) {
	o.MountPoint.Set(&v)
}

// SetMountPointNil sets the value for MountPoint to be an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetMountPointNil() {
	o.MountPoint.Set(nil)
}

// UnsetMountPoint ensures that no value is present for MountPoint, not even an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) UnsetMountPoint() {
	o.MountPoint.Unset()
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetMetadata() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetMetadataOk() (map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]string{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetMetadata(v map[string]string) {
	o.Metadata = v
}

// GetIsEncrypted returns the IsEncrypted field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetIsEncrypted() bool {
	if o == nil || IsNil(o.IsEncrypted.Get()) {
		var ret bool
		return ret
	}
	return *o.IsEncrypted.Get()
}

// GetIsEncryptedOk returns a tuple with the IsEncrypted field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetIsEncryptedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsEncrypted.Get(), o.IsEncrypted.IsSet()
}

// HasIsEncrypted returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) HasIsEncrypted() bool {
	if o != nil && o.IsEncrypted.IsSet() {
		return true
	}

	return false
}

// SetIsEncrypted gets a reference to the given NullableBool and assigns it to the IsEncrypted field.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetIsEncrypted(v bool) {
	o.IsEncrypted.Set(&v)
}

// SetIsEncryptedNil sets the value for IsEncrypted to be an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetIsEncryptedNil() {
	o.IsEncrypted.Set(nil)
}

// UnsetIsEncrypted ensures that no value is present for IsEncrypted, not even an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) UnsetIsEncrypted() {
	o.IsEncrypted.Unset()
}

// GetIsRoot returns the IsRoot field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetIsRoot() bool {
	if o == nil || IsNil(o.IsRoot.Get()) {
		var ret bool
		return ret
	}
	return *o.IsRoot.Get()
}

// GetIsRootOk returns a tuple with the IsRoot field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetIsRootOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsRoot.Get(), o.IsRoot.IsSet()
}

// HasIsRoot returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) HasIsRoot() bool {
	if o != nil && o.IsRoot.IsSet() {
		return true
	}

	return false
}

// SetIsRoot gets a reference to the given NullableBool and assigns it to the IsRoot field.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetIsRoot(v bool) {
	o.IsRoot.Set(&v)
}

// SetIsRootNil sets the value for IsRoot to be an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetIsRootNil() {
	o.IsRoot.Set(nil)
}

// UnsetIsRoot ensures that no value is present for IsRoot, not even an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) UnsetIsRoot() {
	o.IsRoot.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetType(v string) {
	o.Type.Set(&v)
}

// SetTypeNil sets the value for Type to be an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) UnsetType() {
	o.Type.Unset()
}

// GetUserId returns the UserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetUserId() string {
	if o == nil || IsNil(o.UserId.Get()) {
		var ret string
		return ret
	}
	return *o.UserId.Get()
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserId.Get(), o.UserId.IsSet()
}

// HasUserId returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) HasUserId() bool {
	if o != nil && o.UserId.IsSet() {
		return true
	}

	return false
}

// SetUserId gets a reference to the given NullableString and assigns it to the UserId field.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetUserId(v string) {
	o.UserId.Set(&v)
}

// SetUserIdNil sets the value for UserId to be an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetUserIdNil() {
	o.UserId.Set(nil)
}

// UnsetUserId ensures that no value is present for UserId, not even an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) UnsetUserId() {
	o.UserId.Unset()
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId.Get()) {
		var ret string
		return ret
	}
	return *o.ProjectId.Get()
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectId.Get(), o.ProjectId.IsSet()
}

// HasProjectId returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) HasProjectId() bool {
	if o != nil && o.ProjectId.IsSet() {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given NullableString and assigns it to the ProjectId field.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetProjectId(v string) {
	o.ProjectId.Set(&v)
}

// SetProjectIdNil sets the value for ProjectId to be an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetProjectIdNil() {
	o.ProjectId.Set(nil)
}

// UnsetProjectId ensures that no value is present for ProjectId, not even an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) UnsetProjectId() {
	o.ProjectId.Unset()
}

// GetAvailabilityZone returns the AvailabilityZone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetAvailabilityZone() AvailabilityZone {
	if o == nil || IsNil(o.AvailabilityZone.Get()) {
		var ret AvailabilityZone
		return ret
	}
	return *o.AvailabilityZone.Get()
}

// GetAvailabilityZoneOk returns a tuple with the AvailabilityZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetAvailabilityZoneOk() (*AvailabilityZone, bool) {
	if o == nil {
		return nil, false
	}
	return o.AvailabilityZone.Get(), o.AvailabilityZone.IsSet()
}

// HasAvailabilityZone returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) HasAvailabilityZone() bool {
	if o != nil && o.AvailabilityZone.IsSet() {
		return true
	}

	return false
}

// SetAvailabilityZone gets a reference to the given NullableAvailabilityZone and assigns it to the AvailabilityZone field.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetAvailabilityZone(v AvailabilityZone) {
	o.AvailabilityZone.Set(&v)
}

// SetAvailabilityZoneNil sets the value for AvailabilityZone to be an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetAvailabilityZoneNil() {
	o.AvailabilityZone.Set(nil)
}

// UnsetAvailabilityZone ensures that no value is present for AvailabilityZone, not even an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) UnsetAvailabilityZone() {
	o.AvailabilityZone.Unset()
}

// GetAttachStatus returns the AttachStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetAttachStatus() string {
	if o == nil || IsNil(o.AttachStatus.Get()) {
		var ret string
		return ret
	}
	return *o.AttachStatus.Get()
}

// GetAttachStatusOk returns a tuple with the AttachStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetAttachStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AttachStatus.Get(), o.AttachStatus.IsSet()
}

// HasAttachStatus returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) HasAttachStatus() bool {
	if o != nil && o.AttachStatus.IsSet() {
		return true
	}

	return false
}

// SetAttachStatus gets a reference to the given NullableString and assigns it to the AttachStatus field.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetAttachStatus(v string) {
	o.AttachStatus.Set(&v)
}

// SetAttachStatusNil sets the value for AttachStatus to be an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetAttachStatusNil() {
	o.AttachStatus.Set(nil)
}

// UnsetAttachStatus ensures that no value is present for AttachStatus, not even an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) UnsetAttachStatus() {
	o.AttachStatus.Unset()
}

// GetLaunchedAt returns the LaunchedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetLaunchedAt() time.Time {
	if o == nil || IsNil(o.LaunchedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.LaunchedAt.Get()
}

// GetLaunchedAtOk returns a tuple with the LaunchedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetLaunchedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.LaunchedAt.Get(), o.LaunchedAt.IsSet()
}

// HasLaunchedAt returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) HasLaunchedAt() bool {
	if o != nil && o.LaunchedAt.IsSet() {
		return true
	}

	return false
}

// SetLaunchedAt gets a reference to the given NullableTime and assigns it to the LaunchedAt field.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetLaunchedAt(v time.Time) {
	o.LaunchedAt.Set(&v)
}

// SetLaunchedAtNil sets the value for LaunchedAt to be an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetLaunchedAtNil() {
	o.LaunchedAt.Set(nil)
}

// UnsetLaunchedAt ensures that no value is present for LaunchedAt, not even an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) UnsetLaunchedAt() {
	o.LaunchedAt.Unset()
}

// GetEncryptionKeyId returns the EncryptionKeyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetEncryptionKeyId() string {
	if o == nil || IsNil(o.EncryptionKeyId.Get()) {
		var ret string
		return ret
	}
	return *o.EncryptionKeyId.Get()
}

// GetEncryptionKeyIdOk returns a tuple with the EncryptionKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetEncryptionKeyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EncryptionKeyId.Get(), o.EncryptionKeyId.IsSet()
}

// HasEncryptionKeyId returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) HasEncryptionKeyId() bool {
	if o != nil && o.EncryptionKeyId.IsSet() {
		return true
	}

	return false
}

// SetEncryptionKeyId gets a reference to the given NullableString and assigns it to the EncryptionKeyId field.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetEncryptionKeyId(v string) {
	o.EncryptionKeyId.Set(&v)
}

// SetEncryptionKeyIdNil sets the value for EncryptionKeyId to be an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetEncryptionKeyIdNil() {
	o.EncryptionKeyId.Set(nil)
}

// UnsetEncryptionKeyId ensures that no value is present for EncryptionKeyId, not even an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) UnsetEncryptionKeyId() {
	o.EncryptionKeyId.Unset()
}

// GetPreviousStatus returns the PreviousStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetPreviousStatus() string {
	if o == nil || IsNil(o.PreviousStatus.Get()) {
		var ret string
		return ret
	}
	return *o.PreviousStatus.Get()
}

// GetPreviousStatusOk returns a tuple with the PreviousStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetPreviousStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PreviousStatus.Get(), o.PreviousStatus.IsSet()
}

// HasPreviousStatus returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) HasPreviousStatus() bool {
	if o != nil && o.PreviousStatus.IsSet() {
		return true
	}

	return false
}

// SetPreviousStatus gets a reference to the given NullableString and assigns it to the PreviousStatus field.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetPreviousStatus(v string) {
	o.PreviousStatus.Set(&v)
}

// SetPreviousStatusNil sets the value for PreviousStatus to be an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetPreviousStatusNil() {
	o.PreviousStatus.Set(nil)
}

// UnsetPreviousStatus ensures that no value is present for PreviousStatus, not even an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) UnsetPreviousStatus() {
	o.PreviousStatus.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given NullableTime and assigns it to the CreatedAt field.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetCreatedAt(v time.Time) {
	o.CreatedAt.Set(&v)
}

// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetCreatedAtNil() {
	o.CreatedAt.Set(nil)
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableTime and assigns it to the UpdatedAt field.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetUpdatedAt(v time.Time) {
	o.UpdatedAt.Set(&v)
}

// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetUpdatedAtNil() {
	o.UpdatedAt.Set(nil)
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

// GetInstanceId returns the InstanceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetInstanceId() string {
	if o == nil || IsNil(o.InstanceId.Get()) {
		var ret string
		return ret
	}
	return *o.InstanceId.Get()
}

// GetInstanceIdOk returns a tuple with the InstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstanceId.Get(), o.InstanceId.IsSet()
}

// HasInstanceId returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) HasInstanceId() bool {
	if o != nil && o.InstanceId.IsSet() {
		return true
	}

	return false
}

// SetInstanceId gets a reference to the given NullableString and assigns it to the InstanceId field.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetInstanceId(v string) {
	o.InstanceId.Set(&v)
}

// SetInstanceIdNil sets the value for InstanceId to be an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetInstanceIdNil() {
	o.InstanceId.Set(nil)
}

// UnsetInstanceId ensures that no value is present for InstanceId, not even an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) UnsetInstanceId() {
	o.InstanceId.Unset()
}

// GetInstanceName returns the InstanceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetInstanceName() string {
	if o == nil || IsNil(o.InstanceName.Get()) {
		var ret string
		return ret
	}
	return *o.InstanceName.Get()
}

// GetInstanceNameOk returns a tuple with the InstanceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetInstanceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstanceName.Get(), o.InstanceName.IsSet()
}

// HasInstanceName returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) HasInstanceName() bool {
	if o != nil && o.InstanceName.IsSet() {
		return true
	}

	return false
}

// SetInstanceName gets a reference to the given NullableString and assigns it to the InstanceName field.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetInstanceName(v string) {
	o.InstanceName.Set(&v)
}

// SetInstanceNameNil sets the value for InstanceName to be an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetInstanceNameNil() {
	o.InstanceName.Set(nil)
}

// UnsetInstanceName ensures that no value is present for InstanceName, not even an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) UnsetInstanceName() {
	o.InstanceName.Unset()
}

// GetImageMetadata returns the ImageMetadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetImageMetadata() BcsVolumeV1ApiListVolumesModelImageMetaData {
	if o == nil || IsNil(o.ImageMetadata.Get()) {
		var ret BcsVolumeV1ApiListVolumesModelImageMetaData
		return ret
	}
	return *o.ImageMetadata.Get()
}

// GetImageMetadataOk returns a tuple with the ImageMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetImageMetadataOk() (*BcsVolumeV1ApiListVolumesModelImageMetaData, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageMetadata.Get(), o.ImageMetadata.IsSet()
}

// HasImageMetadata returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) HasImageMetadata() bool {
	if o != nil && o.ImageMetadata.IsSet() {
		return true
	}

	return false
}

// SetImageMetadata gets a reference to the given NullableBcsVolumeV1ApiListVolumesModelImageMetaData and assigns it to the ImageMetadata field.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetImageMetadata(v BcsVolumeV1ApiListVolumesModelImageMetaData) {
	o.ImageMetadata.Set(&v)
}

// SetImageMetadataNil sets the value for ImageMetadata to be an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetImageMetadataNil() {
	o.ImageMetadata.Set(nil)
}

// UnsetImageMetadata ensures that no value is present for ImageMetadata, not even an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) UnsetImageMetadata() {
	o.ImageMetadata.Unset()
}

// GetVolumeType returns the VolumeType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetVolumeType() string {
	if o == nil || IsNil(o.VolumeType.Get()) {
		var ret string
		return ret
	}
	return *o.VolumeType.Get()
}

// GetVolumeTypeOk returns a tuple with the VolumeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) GetVolumeTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VolumeType.Get(), o.VolumeType.IsSet()
}

// HasVolumeType returns a boolean if a field has been set.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) HasVolumeType() bool {
	if o != nil && o.VolumeType.IsSet() {
		return true
	}

	return false
}

// SetVolumeType gets a reference to the given NullableString and assigns it to the VolumeType field.
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetVolumeType(v string) {
	o.VolumeType.Set(&v)
}

// SetVolumeTypeNil sets the value for VolumeType to be an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) SetVolumeTypeNil() {
	o.VolumeType.Set(nil)
}

// UnsetVolumeType ensures that no value is present for VolumeType, not even an explicit nil
func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) UnsetVolumeType() {
	o.VolumeType.Unset()
}

func (o BcsVolumeV1ApiListVolumesModelVolumeModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BcsVolumeV1ApiListVolumesModelVolumeModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if o.Size.IsSet() {
		toSerialize["size"] = o.Size.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.IsBootable.IsSet() {
		toSerialize["is_bootable"] = o.IsBootable.Get()
	}
	if o.MountPoint.IsSet() {
		toSerialize["mount_point"] = o.MountPoint.Get()
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.IsEncrypted.IsSet() {
		toSerialize["is_encrypted"] = o.IsEncrypted.Get()
	}
	if o.IsRoot.IsSet() {
		toSerialize["is_root"] = o.IsRoot.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.UserId.IsSet() {
		toSerialize["user_id"] = o.UserId.Get()
	}
	if o.ProjectId.IsSet() {
		toSerialize["project_id"] = o.ProjectId.Get()
	}
	if o.AvailabilityZone.IsSet() {
		toSerialize["availability_zone"] = o.AvailabilityZone.Get()
	}
	if o.AttachStatus.IsSet() {
		toSerialize["attach_status"] = o.AttachStatus.Get()
	}
	if o.LaunchedAt.IsSet() {
		toSerialize["launched_at"] = o.LaunchedAt.Get()
	}
	if o.EncryptionKeyId.IsSet() {
		toSerialize["encryption_key_id"] = o.EncryptionKeyId.Get()
	}
	if o.PreviousStatus.IsSet() {
		toSerialize["previous_status"] = o.PreviousStatus.Get()
	}
	if o.CreatedAt.IsSet() {
		toSerialize["created_at"] = o.CreatedAt.Get()
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["updated_at"] = o.UpdatedAt.Get()
	}
	if o.InstanceId.IsSet() {
		toSerialize["instance_id"] = o.InstanceId.Get()
	}
	if o.InstanceName.IsSet() {
		toSerialize["instance_name"] = o.InstanceName.Get()
	}
	if o.ImageMetadata.IsSet() {
		toSerialize["image_metadata"] = o.ImageMetadata.Get()
	}
	if o.VolumeType.IsSet() {
		toSerialize["volume_type"] = o.VolumeType.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BcsVolumeV1ApiListVolumesModelVolumeModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBcsVolumeV1ApiListVolumesModelVolumeModel := _BcsVolumeV1ApiListVolumesModelVolumeModel{}

	err = json.Unmarshal(data, &varBcsVolumeV1ApiListVolumesModelVolumeModel)

	if err != nil {
		return err
	}

	*o = BcsVolumeV1ApiListVolumesModelVolumeModel(varBcsVolumeV1ApiListVolumesModelVolumeModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "size")
		delete(additionalProperties, "status")
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "is_bootable")
		delete(additionalProperties, "mount_point")
		delete(additionalProperties, "metadata")
		delete(additionalProperties, "is_encrypted")
		delete(additionalProperties, "is_root")
		delete(additionalProperties, "type")
		delete(additionalProperties, "user_id")
		delete(additionalProperties, "project_id")
		delete(additionalProperties, "availability_zone")
		delete(additionalProperties, "attach_status")
		delete(additionalProperties, "launched_at")
		delete(additionalProperties, "encryption_key_id")
		delete(additionalProperties, "previous_status")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "instance_id")
		delete(additionalProperties, "instance_name")
		delete(additionalProperties, "image_metadata")
		delete(additionalProperties, "volume_type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBcsVolumeV1ApiListVolumesModelVolumeModel struct {
	value *BcsVolumeV1ApiListVolumesModelVolumeModel
	isSet bool
}

func (v NullableBcsVolumeV1ApiListVolumesModelVolumeModel) Get() *BcsVolumeV1ApiListVolumesModelVolumeModel {
	return v.value
}

func (v *NullableBcsVolumeV1ApiListVolumesModelVolumeModel) Set(val *BcsVolumeV1ApiListVolumesModelVolumeModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBcsVolumeV1ApiListVolumesModelVolumeModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBcsVolumeV1ApiListVolumesModelVolumeModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBcsVolumeV1ApiListVolumesModelVolumeModel(val *BcsVolumeV1ApiListVolumesModelVolumeModel) *NullableBcsVolumeV1ApiListVolumesModelVolumeModel {
	return &NullableBcsVolumeV1ApiListVolumesModelVolumeModel{value: val, isSet: true}
}

func (v NullableBcsVolumeV1ApiListVolumesModelVolumeModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBcsVolumeV1ApiListVolumesModelVolumeModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
