/*
Beyond Compute Service(BCS) Volume API

Beyond Compute Service Volume API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package volume

import (
	"encoding/json"
	"fmt"
)

// checks if the BodyUpdateSnapshot type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BodyUpdateSnapshot{}

// BodyUpdateSnapshot struct for BodyUpdateSnapshot
type BodyUpdateSnapshot struct {
	Snapshot             EditVolumeSnapshotModel `json:"snapshot"`
	AdditionalProperties map[string]interface{}
}

type _BodyUpdateSnapshot BodyUpdateSnapshot

// NewBodyUpdateSnapshot instantiates a new BodyUpdateSnapshot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBodyUpdateSnapshot(snapshot EditVolumeSnapshotModel) *BodyUpdateSnapshot {
	this := BodyUpdateSnapshot{}
	this.Snapshot = snapshot
	return &this
}

// NewBodyUpdateSnapshotWithDefaults instantiates a new BodyUpdateSnapshot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBodyUpdateSnapshotWithDefaults() *BodyUpdateSnapshot {
	this := BodyUpdateSnapshot{}
	return &this
}

// GetSnapshot returns the Snapshot field value
func (o *BodyUpdateSnapshot) GetSnapshot() EditVolumeSnapshotModel {
	if o == nil {
		var ret EditVolumeSnapshotModel
		return ret
	}

	return o.Snapshot
}

// GetSnapshotOk returns a tuple with the Snapshot field value
// and a boolean to check if the value has been set.
func (o *BodyUpdateSnapshot) GetSnapshotOk() (*EditVolumeSnapshotModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Snapshot, true
}

// SetSnapshot sets field value
func (o *BodyUpdateSnapshot) SetSnapshot(v EditVolumeSnapshotModel) {
	o.Snapshot = v
}

func (o BodyUpdateSnapshot) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BodyUpdateSnapshot) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["snapshot"] = o.Snapshot

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BodyUpdateSnapshot) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"snapshot",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBodyUpdateSnapshot := _BodyUpdateSnapshot{}

	err = json.Unmarshal(data, &varBodyUpdateSnapshot)

	if err != nil {
		return err
	}

	*o = BodyUpdateSnapshot(varBodyUpdateSnapshot)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "snapshot")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBodyUpdateSnapshot struct {
	value *BodyUpdateSnapshot
	isSet bool
}

func (v NullableBodyUpdateSnapshot) Get() *BodyUpdateSnapshot {
	return v.value
}

func (v *NullableBodyUpdateSnapshot) Set(val *BodyUpdateSnapshot) {
	v.value = val
	v.isSet = true
}

func (v NullableBodyUpdateSnapshot) IsSet() bool {
	return v.isSet
}

func (v *NullableBodyUpdateSnapshot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBodyUpdateSnapshot(val *BodyUpdateSnapshot) *NullableBodyUpdateSnapshot {
	return &NullableBodyUpdateSnapshot{value: val, isSet: true}
}

func (v NullableBodyUpdateSnapshot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBodyUpdateSnapshot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
