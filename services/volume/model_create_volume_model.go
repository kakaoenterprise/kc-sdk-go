/*
Beyond Compute Service(BCS) Volume API

Beyond Compute Service Volume API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package volume

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateVolumeModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateVolumeModel{}

// CreateVolumeModel struct for CreateVolumeModel
type CreateVolumeModel struct {
	// 생성할 볼륨의 이름
	Name        string         `json:"name"`
	Description NullableString `json:"description,omitempty"`
	// 볼륨 크기 (GB 단위)<br/>- Linux 계열: 1 ~ 16,384 GB <br/>- Windows 계열: 1 ~ 2,048 GB
	Size int32 `json:"size"`
	// 볼륨을 생성할 가용 영역<br/> - `kr-central-2-a`: kr-central-2-a 가용 영역 <br/> - `kr-central-2-b`: kr-central-2-b 가용 영역 <br/> - `kr-central-2-c`: kr-central-2-c 가용 영역
	AvailabilityZone     AvailabilityZone `json:"availability_zone"`
	VolumeTypeId         NullableString   `json:"volume_type_id,omitempty"`
	SourceVolumeId       NullableString   `json:"source_volume_id,omitempty"`
	EncryptionSecretId   NullableString   `json:"encryption_secret_id,omitempty"`
	ImageId              NullableString   `json:"image_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateVolumeModel CreateVolumeModel

// NewCreateVolumeModel instantiates a new CreateVolumeModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateVolumeModel(name string, size int32, availabilityZone AvailabilityZone) *CreateVolumeModel {
	this := CreateVolumeModel{}
	this.Name = name
	this.Size = size
	this.AvailabilityZone = availabilityZone
	return &this
}

// NewCreateVolumeModelWithDefaults instantiates a new CreateVolumeModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateVolumeModelWithDefaults() *CreateVolumeModel {
	this := CreateVolumeModel{}
	return &this
}

// GetName returns the Name field value
func (o *CreateVolumeModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateVolumeModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateVolumeModel) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateVolumeModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateVolumeModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateVolumeModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CreateVolumeModel) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CreateVolumeModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CreateVolumeModel) UnsetDescription() {
	o.Description.Unset()
}

// GetSize returns the Size field value
func (o *CreateVolumeModel) GetSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *CreateVolumeModel) GetSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *CreateVolumeModel) SetSize(v int32) {
	o.Size = v
}

// GetAvailabilityZone returns the AvailabilityZone field value
func (o *CreateVolumeModel) GetAvailabilityZone() AvailabilityZone {
	if o == nil {
		var ret AvailabilityZone
		return ret
	}

	return o.AvailabilityZone
}

// GetAvailabilityZoneOk returns a tuple with the AvailabilityZone field value
// and a boolean to check if the value has been set.
func (o *CreateVolumeModel) GetAvailabilityZoneOk() (*AvailabilityZone, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvailabilityZone, true
}

// SetAvailabilityZone sets field value
func (o *CreateVolumeModel) SetAvailabilityZone(v AvailabilityZone) {
	o.AvailabilityZone = v
}

// GetVolumeTypeId returns the VolumeTypeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateVolumeModel) GetVolumeTypeId() string {
	if o == nil || IsNil(o.VolumeTypeId.Get()) {
		var ret string
		return ret
	}
	return *o.VolumeTypeId.Get()
}

// GetVolumeTypeIdOk returns a tuple with the VolumeTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateVolumeModel) GetVolumeTypeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VolumeTypeId.Get(), o.VolumeTypeId.IsSet()
}

// HasVolumeTypeId returns a boolean if a field has been set.
func (o *CreateVolumeModel) HasVolumeTypeId() bool {
	if o != nil && o.VolumeTypeId.IsSet() {
		return true
	}

	return false
}

// SetVolumeTypeId gets a reference to the given NullableString and assigns it to the VolumeTypeId field.
func (o *CreateVolumeModel) SetVolumeTypeId(v string) {
	o.VolumeTypeId.Set(&v)
}

// SetVolumeTypeIdNil sets the value for VolumeTypeId to be an explicit nil
func (o *CreateVolumeModel) SetVolumeTypeIdNil() {
	o.VolumeTypeId.Set(nil)
}

// UnsetVolumeTypeId ensures that no value is present for VolumeTypeId, not even an explicit nil
func (o *CreateVolumeModel) UnsetVolumeTypeId() {
	o.VolumeTypeId.Unset()
}

// GetSourceVolumeId returns the SourceVolumeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateVolumeModel) GetSourceVolumeId() string {
	if o == nil || IsNil(o.SourceVolumeId.Get()) {
		var ret string
		return ret
	}
	return *o.SourceVolumeId.Get()
}

// GetSourceVolumeIdOk returns a tuple with the SourceVolumeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateVolumeModel) GetSourceVolumeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceVolumeId.Get(), o.SourceVolumeId.IsSet()
}

// HasSourceVolumeId returns a boolean if a field has been set.
func (o *CreateVolumeModel) HasSourceVolumeId() bool {
	if o != nil && o.SourceVolumeId.IsSet() {
		return true
	}

	return false
}

// SetSourceVolumeId gets a reference to the given NullableString and assigns it to the SourceVolumeId field.
func (o *CreateVolumeModel) SetSourceVolumeId(v string) {
	o.SourceVolumeId.Set(&v)
}

// SetSourceVolumeIdNil sets the value for SourceVolumeId to be an explicit nil
func (o *CreateVolumeModel) SetSourceVolumeIdNil() {
	o.SourceVolumeId.Set(nil)
}

// UnsetSourceVolumeId ensures that no value is present for SourceVolumeId, not even an explicit nil
func (o *CreateVolumeModel) UnsetSourceVolumeId() {
	o.SourceVolumeId.Unset()
}

// GetEncryptionSecretId returns the EncryptionSecretId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateVolumeModel) GetEncryptionSecretId() string {
	if o == nil || IsNil(o.EncryptionSecretId.Get()) {
		var ret string
		return ret
	}
	return *o.EncryptionSecretId.Get()
}

// GetEncryptionSecretIdOk returns a tuple with the EncryptionSecretId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateVolumeModel) GetEncryptionSecretIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EncryptionSecretId.Get(), o.EncryptionSecretId.IsSet()
}

// HasEncryptionSecretId returns a boolean if a field has been set.
func (o *CreateVolumeModel) HasEncryptionSecretId() bool {
	if o != nil && o.EncryptionSecretId.IsSet() {
		return true
	}

	return false
}

// SetEncryptionSecretId gets a reference to the given NullableString and assigns it to the EncryptionSecretId field.
func (o *CreateVolumeModel) SetEncryptionSecretId(v string) {
	o.EncryptionSecretId.Set(&v)
}

// SetEncryptionSecretIdNil sets the value for EncryptionSecretId to be an explicit nil
func (o *CreateVolumeModel) SetEncryptionSecretIdNil() {
	o.EncryptionSecretId.Set(nil)
}

// UnsetEncryptionSecretId ensures that no value is present for EncryptionSecretId, not even an explicit nil
func (o *CreateVolumeModel) UnsetEncryptionSecretId() {
	o.EncryptionSecretId.Unset()
}

// GetImageId returns the ImageId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateVolumeModel) GetImageId() string {
	if o == nil || IsNil(o.ImageId.Get()) {
		var ret string
		return ret
	}
	return *o.ImageId.Get()
}

// GetImageIdOk returns a tuple with the ImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateVolumeModel) GetImageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageId.Get(), o.ImageId.IsSet()
}

// HasImageId returns a boolean if a field has been set.
func (o *CreateVolumeModel) HasImageId() bool {
	if o != nil && o.ImageId.IsSet() {
		return true
	}

	return false
}

// SetImageId gets a reference to the given NullableString and assigns it to the ImageId field.
func (o *CreateVolumeModel) SetImageId(v string) {
	o.ImageId.Set(&v)
}

// SetImageIdNil sets the value for ImageId to be an explicit nil
func (o *CreateVolumeModel) SetImageIdNil() {
	o.ImageId.Set(nil)
}

// UnsetImageId ensures that no value is present for ImageId, not even an explicit nil
func (o *CreateVolumeModel) UnsetImageId() {
	o.ImageId.Unset()
}

func (o CreateVolumeModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateVolumeModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	toSerialize["size"] = o.Size
	toSerialize["availability_zone"] = o.AvailabilityZone
	if o.VolumeTypeId.IsSet() {
		toSerialize["volume_type_id"] = o.VolumeTypeId.Get()
	}
	if o.SourceVolumeId.IsSet() {
		toSerialize["source_volume_id"] = o.SourceVolumeId.Get()
	}
	if o.EncryptionSecretId.IsSet() {
		toSerialize["encryption_secret_id"] = o.EncryptionSecretId.Get()
	}
	if o.ImageId.IsSet() {
		toSerialize["image_id"] = o.ImageId.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateVolumeModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"size",
		"availability_zone",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateVolumeModel := _CreateVolumeModel{}

	err = json.Unmarshal(data, &varCreateVolumeModel)

	if err != nil {
		return err
	}

	*o = CreateVolumeModel(varCreateVolumeModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "size")
		delete(additionalProperties, "availability_zone")
		delete(additionalProperties, "volume_type_id")
		delete(additionalProperties, "source_volume_id")
		delete(additionalProperties, "encryption_secret_id")
		delete(additionalProperties, "image_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateVolumeModel struct {
	value *CreateVolumeModel
	isSet bool
}

func (v NullableCreateVolumeModel) Get() *CreateVolumeModel {
	return v.value
}

func (v *NullableCreateVolumeModel) Set(val *CreateVolumeModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateVolumeModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateVolumeModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateVolumeModel(val *CreateVolumeModel) *NullableCreateVolumeModel {
	return &NullableCreateVolumeModel{value: val, isSet: true}
}

func (v NullableCreateVolumeModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateVolumeModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
