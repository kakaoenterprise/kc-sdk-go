/*
Beyond Compute Service(BCS) Volume API

Beyond Compute Service Volume API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package volume

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateVolumeSnapshotModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateVolumeSnapshotModel{}

// CreateVolumeSnapshotModel struct for CreateVolumeSnapshotModel
type CreateVolumeSnapshotModel struct {
	// 생성할 스냅샷의 이름
	Name        string         `json:"name"`
	Description NullableString `json:"description,omitempty"`
	// 증분 스냅샷 여부 <br/> - 💡 스냅샷 일정을 통해 전체 스냅샷을 보유하고 있더라도, 수동으로 스냅샷을 생성할 경우에는 최초 1번의 전체 스냅샷 생성이 필요합니다.
	IsIncremental        bool `json:"is_incremental"`
	AdditionalProperties map[string]interface{}
}

type _CreateVolumeSnapshotModel CreateVolumeSnapshotModel

// NewCreateVolumeSnapshotModel instantiates a new CreateVolumeSnapshotModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateVolumeSnapshotModel(name string, isIncremental bool) *CreateVolumeSnapshotModel {
	this := CreateVolumeSnapshotModel{}
	this.Name = name
	this.IsIncremental = isIncremental
	return &this
}

// NewCreateVolumeSnapshotModelWithDefaults instantiates a new CreateVolumeSnapshotModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateVolumeSnapshotModelWithDefaults() *CreateVolumeSnapshotModel {
	this := CreateVolumeSnapshotModel{}
	return &this
}

// GetName returns the Name field value
func (o *CreateVolumeSnapshotModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateVolumeSnapshotModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateVolumeSnapshotModel) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateVolumeSnapshotModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateVolumeSnapshotModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateVolumeSnapshotModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CreateVolumeSnapshotModel) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CreateVolumeSnapshotModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CreateVolumeSnapshotModel) UnsetDescription() {
	o.Description.Unset()
}

// GetIsIncremental returns the IsIncremental field value
func (o *CreateVolumeSnapshotModel) GetIsIncremental() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsIncremental
}

// GetIsIncrementalOk returns a tuple with the IsIncremental field value
// and a boolean to check if the value has been set.
func (o *CreateVolumeSnapshotModel) GetIsIncrementalOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsIncremental, true
}

// SetIsIncremental sets field value
func (o *CreateVolumeSnapshotModel) SetIsIncremental(v bool) {
	o.IsIncremental = v
}

func (o CreateVolumeSnapshotModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateVolumeSnapshotModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	toSerialize["is_incremental"] = o.IsIncremental

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateVolumeSnapshotModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"is_incremental",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateVolumeSnapshotModel := _CreateVolumeSnapshotModel{}

	err = json.Unmarshal(data, &varCreateVolumeSnapshotModel)

	if err != nil {
		return err
	}

	*o = CreateVolumeSnapshotModel(varCreateVolumeSnapshotModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "is_incremental")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateVolumeSnapshotModel struct {
	value *CreateVolumeSnapshotModel
	isSet bool
}

func (v NullableCreateVolumeSnapshotModel) Get() *CreateVolumeSnapshotModel {
	return v.value
}

func (v *NullableCreateVolumeSnapshotModel) Set(val *CreateVolumeSnapshotModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateVolumeSnapshotModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateVolumeSnapshotModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateVolumeSnapshotModel(val *CreateVolumeSnapshotModel) *NullableCreateVolumeSnapshotModel {
	return &NullableCreateVolumeSnapshotModel{value: val, isSet: true}
}

func (v NullableCreateVolumeSnapshotModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateVolumeSnapshotModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
