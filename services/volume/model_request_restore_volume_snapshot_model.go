/*
Beyond Compute Service(BCS) Volume API

Beyond Compute Service Volume API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package volume

import (
	"encoding/json"
	"fmt"
)

// checks if the RequestRestoreVolumeSnapshotModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestRestoreVolumeSnapshotModel{}

// RequestRestoreVolumeSnapshotModel struct for RequestRestoreVolumeSnapshotModel
type RequestRestoreVolumeSnapshotModel struct {
	// 볼륨에 대한 설명
	Name string `json:"name"`
	// 신규 볼륨을 생성할 가용 영역<br/> - `kr-central-2-a`: kr-central-2-a 가용 영역 <br/> - `kr-central-2-b`: kr-central-2-b 가용 영역 <br/> - `kr-central-2-c`: kr-central-2-c 가용 영역
	AvailabilityZone     AvailabilityZone `json:"availability_zone"`
	VolumeTypeId         NullableString   `json:"volume_type_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RequestRestoreVolumeSnapshotModel RequestRestoreVolumeSnapshotModel

// NewRequestRestoreVolumeSnapshotModel instantiates a new RequestRestoreVolumeSnapshotModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestRestoreVolumeSnapshotModel(name string, availabilityZone AvailabilityZone) *RequestRestoreVolumeSnapshotModel {
	this := RequestRestoreVolumeSnapshotModel{}
	this.Name = name
	this.AvailabilityZone = availabilityZone
	return &this
}

// NewRequestRestoreVolumeSnapshotModelWithDefaults instantiates a new RequestRestoreVolumeSnapshotModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestRestoreVolumeSnapshotModelWithDefaults() *RequestRestoreVolumeSnapshotModel {
	this := RequestRestoreVolumeSnapshotModel{}
	return &this
}

// GetName returns the Name field value
func (o *RequestRestoreVolumeSnapshotModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RequestRestoreVolumeSnapshotModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RequestRestoreVolumeSnapshotModel) SetName(v string) {
	o.Name = v
}

// GetAvailabilityZone returns the AvailabilityZone field value
func (o *RequestRestoreVolumeSnapshotModel) GetAvailabilityZone() AvailabilityZone {
	if o == nil {
		var ret AvailabilityZone
		return ret
	}

	return o.AvailabilityZone
}

// GetAvailabilityZoneOk returns a tuple with the AvailabilityZone field value
// and a boolean to check if the value has been set.
func (o *RequestRestoreVolumeSnapshotModel) GetAvailabilityZoneOk() (*AvailabilityZone, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvailabilityZone, true
}

// SetAvailabilityZone sets field value
func (o *RequestRestoreVolumeSnapshotModel) SetAvailabilityZone(v AvailabilityZone) {
	o.AvailabilityZone = v
}

// GetVolumeTypeId returns the VolumeTypeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RequestRestoreVolumeSnapshotModel) GetVolumeTypeId() string {
	if o == nil || IsNil(o.VolumeTypeId.Get()) {
		var ret string
		return ret
	}
	return *o.VolumeTypeId.Get()
}

// GetVolumeTypeIdOk returns a tuple with the VolumeTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RequestRestoreVolumeSnapshotModel) GetVolumeTypeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VolumeTypeId.Get(), o.VolumeTypeId.IsSet()
}

// HasVolumeTypeId returns a boolean if a field has been set.
func (o *RequestRestoreVolumeSnapshotModel) HasVolumeTypeId() bool {
	if o != nil && o.VolumeTypeId.IsSet() {
		return true
	}

	return false
}

// SetVolumeTypeId gets a reference to the given NullableString and assigns it to the VolumeTypeId field.
func (o *RequestRestoreVolumeSnapshotModel) SetVolumeTypeId(v string) {
	o.VolumeTypeId.Set(&v)
}

// SetVolumeTypeIdNil sets the value for VolumeTypeId to be an explicit nil
func (o *RequestRestoreVolumeSnapshotModel) SetVolumeTypeIdNil() {
	o.VolumeTypeId.Set(nil)
}

// UnsetVolumeTypeId ensures that no value is present for VolumeTypeId, not even an explicit nil
func (o *RequestRestoreVolumeSnapshotModel) UnsetVolumeTypeId() {
	o.VolumeTypeId.Unset()
}

func (o RequestRestoreVolumeSnapshotModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestRestoreVolumeSnapshotModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["availability_zone"] = o.AvailabilityZone
	if o.VolumeTypeId.IsSet() {
		toSerialize["volume_type_id"] = o.VolumeTypeId.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RequestRestoreVolumeSnapshotModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"availability_zone",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRequestRestoreVolumeSnapshotModel := _RequestRestoreVolumeSnapshotModel{}

	err = json.Unmarshal(data, &varRequestRestoreVolumeSnapshotModel)

	if err != nil {
		return err
	}

	*o = RequestRestoreVolumeSnapshotModel(varRequestRestoreVolumeSnapshotModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "availability_zone")
		delete(additionalProperties, "volume_type_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRequestRestoreVolumeSnapshotModel struct {
	value *RequestRestoreVolumeSnapshotModel
	isSet bool
}

func (v NullableRequestRestoreVolumeSnapshotModel) Get() *RequestRestoreVolumeSnapshotModel {
	return v.value
}

func (v *NullableRequestRestoreVolumeSnapshotModel) Set(val *RequestRestoreVolumeSnapshotModel) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestRestoreVolumeSnapshotModel) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestRestoreVolumeSnapshotModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestRestoreVolumeSnapshotModel(val *RequestRestoreVolumeSnapshotModel) *NullableRequestRestoreVolumeSnapshotModel {
	return &NullableRequestRestoreVolumeSnapshotModel{value: val, isSet: true}
}

func (v NullableRequestRestoreVolumeSnapshotModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestRestoreVolumeSnapshotModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
