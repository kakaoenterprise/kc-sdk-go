/*
Beyond Compute Service(BCS) Volume API

Beyond Compute Service Volume API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package volume

import (
	"encoding/json"
	"fmt"
)

// checks if the RestoreVolumeSnapshotModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestoreVolumeSnapshotModel{}

// RestoreVolumeSnapshotModel struct for RestoreVolumeSnapshotModel
type RestoreVolumeSnapshotModel struct {
	// 스냅샷의 고유 ID
	SnapshotId string `json:"snapshot_id"`
	// 볼륨의 고유 ID
	VolumeId string `json:"volume_id"`
	// 복원 후 새로 생성된 볼륨의 이름
	VolumeName           string `json:"volume_name"`
	AdditionalProperties map[string]interface{}
}

type _RestoreVolumeSnapshotModel RestoreVolumeSnapshotModel

// NewRestoreVolumeSnapshotModel instantiates a new RestoreVolumeSnapshotModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreVolumeSnapshotModel(snapshotId string, volumeId string, volumeName string) *RestoreVolumeSnapshotModel {
	this := RestoreVolumeSnapshotModel{}
	this.SnapshotId = snapshotId
	this.VolumeId = volumeId
	this.VolumeName = volumeName
	return &this
}

// NewRestoreVolumeSnapshotModelWithDefaults instantiates a new RestoreVolumeSnapshotModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreVolumeSnapshotModelWithDefaults() *RestoreVolumeSnapshotModel {
	this := RestoreVolumeSnapshotModel{}
	return &this
}

// GetSnapshotId returns the SnapshotId field value
func (o *RestoreVolumeSnapshotModel) GetSnapshotId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SnapshotId
}

// GetSnapshotIdOk returns a tuple with the SnapshotId field value
// and a boolean to check if the value has been set.
func (o *RestoreVolumeSnapshotModel) GetSnapshotIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SnapshotId, true
}

// SetSnapshotId sets field value
func (o *RestoreVolumeSnapshotModel) SetSnapshotId(v string) {
	o.SnapshotId = v
}

// GetVolumeId returns the VolumeId field value
func (o *RestoreVolumeSnapshotModel) GetVolumeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VolumeId
}

// GetVolumeIdOk returns a tuple with the VolumeId field value
// and a boolean to check if the value has been set.
func (o *RestoreVolumeSnapshotModel) GetVolumeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VolumeId, true
}

// SetVolumeId sets field value
func (o *RestoreVolumeSnapshotModel) SetVolumeId(v string) {
	o.VolumeId = v
}

// GetVolumeName returns the VolumeName field value
func (o *RestoreVolumeSnapshotModel) GetVolumeName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VolumeName
}

// GetVolumeNameOk returns a tuple with the VolumeName field value
// and a boolean to check if the value has been set.
func (o *RestoreVolumeSnapshotModel) GetVolumeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VolumeName, true
}

// SetVolumeName sets field value
func (o *RestoreVolumeSnapshotModel) SetVolumeName(v string) {
	o.VolumeName = v
}

func (o RestoreVolumeSnapshotModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestoreVolumeSnapshotModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["snapshot_id"] = o.SnapshotId
	toSerialize["volume_id"] = o.VolumeId
	toSerialize["volume_name"] = o.VolumeName

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RestoreVolumeSnapshotModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"snapshot_id",
		"volume_id",
		"volume_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRestoreVolumeSnapshotModel := _RestoreVolumeSnapshotModel{}

	err = json.Unmarshal(data, &varRestoreVolumeSnapshotModel)

	if err != nil {
		return err
	}

	*o = RestoreVolumeSnapshotModel(varRestoreVolumeSnapshotModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "snapshot_id")
		delete(additionalProperties, "volume_id")
		delete(additionalProperties, "volume_name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRestoreVolumeSnapshotModel struct {
	value *RestoreVolumeSnapshotModel
	isSet bool
}

func (v NullableRestoreVolumeSnapshotModel) Get() *RestoreVolumeSnapshotModel {
	return v.value
}

func (v *NullableRestoreVolumeSnapshotModel) Set(val *RestoreVolumeSnapshotModel) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreVolumeSnapshotModel) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreVolumeSnapshotModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreVolumeSnapshotModel(val *RestoreVolumeSnapshotModel) *NullableRestoreVolumeSnapshotModel {
	return &NullableRestoreVolumeSnapshotModel{value: val, isSet: true}
}

func (v NullableRestoreVolumeSnapshotModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreVolumeSnapshotModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
