/*
Beyond Networking Service(BNS) VPC API

BNS VPC API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpc

import (
	"encoding/json"
	"fmt"
)

// checks if the BnsVpcV1ApiAddRouteModelRouteModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BnsVpcV1ApiAddRouteModelRouteModel{}

// BnsVpcV1ApiAddRouteModelRouteModel struct for BnsVpcV1ApiAddRouteModelRouteModel
type BnsVpcV1ApiAddRouteModelRouteModel struct {
	// 라우팅의 고유 ID
	Id string `json:"id"`
	// 프로비저닝 상태
	ProvisioningStatus ProvisioningStatus `json:"provisioning_status"`
	// 목적지 네트워크 주소 (CIDR 형식)
	Destination string `json:"destination"`
	// 로컬 경로 여부<br/>  - `true`인 경우 동일 VPC 내부 통신용 경로
	IsLocalRoute         bool `json:"is_local_route"`
	AdditionalProperties map[string]interface{}
}

type _BnsVpcV1ApiAddRouteModelRouteModel BnsVpcV1ApiAddRouteModelRouteModel

// NewBnsVpcV1ApiAddRouteModelRouteModel instantiates a new BnsVpcV1ApiAddRouteModelRouteModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBnsVpcV1ApiAddRouteModelRouteModel(id string, provisioningStatus ProvisioningStatus, destination string, isLocalRoute bool) *BnsVpcV1ApiAddRouteModelRouteModel {
	this := BnsVpcV1ApiAddRouteModelRouteModel{}
	this.Id = id
	this.ProvisioningStatus = provisioningStatus
	this.Destination = destination
	this.IsLocalRoute = isLocalRoute
	return &this
}

// NewBnsVpcV1ApiAddRouteModelRouteModelWithDefaults instantiates a new BnsVpcV1ApiAddRouteModelRouteModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBnsVpcV1ApiAddRouteModelRouteModelWithDefaults() *BnsVpcV1ApiAddRouteModelRouteModel {
	this := BnsVpcV1ApiAddRouteModelRouteModel{}
	return &this
}

// GetId returns the Id field value
func (o *BnsVpcV1ApiAddRouteModelRouteModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BnsVpcV1ApiAddRouteModelRouteModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BnsVpcV1ApiAddRouteModelRouteModel) SetId(v string) {
	o.Id = v
}

// GetProvisioningStatus returns the ProvisioningStatus field value
func (o *BnsVpcV1ApiAddRouteModelRouteModel) GetProvisioningStatus() ProvisioningStatus {
	if o == nil {
		var ret ProvisioningStatus
		return ret
	}

	return o.ProvisioningStatus
}

// GetProvisioningStatusOk returns a tuple with the ProvisioningStatus field value
// and a boolean to check if the value has been set.
func (o *BnsVpcV1ApiAddRouteModelRouteModel) GetProvisioningStatusOk() (*ProvisioningStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProvisioningStatus, true
}

// SetProvisioningStatus sets field value
func (o *BnsVpcV1ApiAddRouteModelRouteModel) SetProvisioningStatus(v ProvisioningStatus) {
	o.ProvisioningStatus = v
}

// GetDestination returns the Destination field value
func (o *BnsVpcV1ApiAddRouteModelRouteModel) GetDestination() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value
// and a boolean to check if the value has been set.
func (o *BnsVpcV1ApiAddRouteModelRouteModel) GetDestinationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Destination, true
}

// SetDestination sets field value
func (o *BnsVpcV1ApiAddRouteModelRouteModel) SetDestination(v string) {
	o.Destination = v
}

// GetIsLocalRoute returns the IsLocalRoute field value
func (o *BnsVpcV1ApiAddRouteModelRouteModel) GetIsLocalRoute() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsLocalRoute
}

// GetIsLocalRouteOk returns a tuple with the IsLocalRoute field value
// and a boolean to check if the value has been set.
func (o *BnsVpcV1ApiAddRouteModelRouteModel) GetIsLocalRouteOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsLocalRoute, true
}

// SetIsLocalRoute sets field value
func (o *BnsVpcV1ApiAddRouteModelRouteModel) SetIsLocalRoute(v bool) {
	o.IsLocalRoute = v
}

func (o BnsVpcV1ApiAddRouteModelRouteModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BnsVpcV1ApiAddRouteModelRouteModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["provisioning_status"] = o.ProvisioningStatus
	toSerialize["destination"] = o.Destination
	toSerialize["is_local_route"] = o.IsLocalRoute

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BnsVpcV1ApiAddRouteModelRouteModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"provisioning_status",
		"destination",
		"is_local_route",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBnsVpcV1ApiAddRouteModelRouteModel := _BnsVpcV1ApiAddRouteModelRouteModel{}

	err = json.Unmarshal(data, &varBnsVpcV1ApiAddRouteModelRouteModel)

	if err != nil {
		return err
	}

	*o = BnsVpcV1ApiAddRouteModelRouteModel(varBnsVpcV1ApiAddRouteModelRouteModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "provisioning_status")
		delete(additionalProperties, "destination")
		delete(additionalProperties, "is_local_route")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBnsVpcV1ApiAddRouteModelRouteModel struct {
	value *BnsVpcV1ApiAddRouteModelRouteModel
	isSet bool
}

func (v NullableBnsVpcV1ApiAddRouteModelRouteModel) Get() *BnsVpcV1ApiAddRouteModelRouteModel {
	return v.value
}

func (v *NullableBnsVpcV1ApiAddRouteModelRouteModel) Set(val *BnsVpcV1ApiAddRouteModelRouteModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBnsVpcV1ApiAddRouteModelRouteModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBnsVpcV1ApiAddRouteModelRouteModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBnsVpcV1ApiAddRouteModelRouteModel(val *BnsVpcV1ApiAddRouteModelRouteModel) *NullableBnsVpcV1ApiAddRouteModelRouteModel {
	return &NullableBnsVpcV1ApiAddRouteModelRouteModel{value: val, isSet: true}
}

func (v NullableBnsVpcV1ApiAddRouteModelRouteModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBnsVpcV1ApiAddRouteModelRouteModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
