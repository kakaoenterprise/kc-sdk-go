/*
Beyond Networking Service(BNS) VPC API

BNS VPC API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpc

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the BnsVpcV1ApiGetSubnetModelSubnetModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BnsVpcV1ApiGetSubnetModelSubnetModel{}

// BnsVpcV1ApiGetSubnetModelSubnetModel struct for BnsVpcV1ApiGetSubnetModelSubnetModel
type BnsVpcV1ApiGetSubnetModelSubnetModel struct {
	// 서브넷 ID
	Id                   string                        `json:"id"`
	Name                 NullableString                `json:"name,omitempty"`
	IsShared             NullableBool                  `json:"is_shared,omitempty"`
	AvailabilityZone     NullableAvailabilityZone      `json:"availability_zone,omitempty"`
	CidrBlock            NullableString                `json:"cidr_block,omitempty"`
	ProjectId            NullableString                `json:"project_id,omitempty"`
	OperatingStatus      NullableSubnetOperatingStatus `json:"operating_status,omitempty"`
	ProvisioningStatus   NullableProvisioningStatus    `json:"provisioning_status,omitempty"`
	VpcId                NullableString                `json:"vpc_id,omitempty"`
	VpcName              NullableString                `json:"vpc_name,omitempty"`
	ProjectName          NullableString                `json:"project_name,omitempty"`
	OwnerProjectId       NullableString                `json:"owner_project_id,omitempty"`
	RouteTableId         NullableString                `json:"route_table_id,omitempty"`
	RouteTableName       NullableString                `json:"route_table_name,omitempty"`
	CreatedAt            NullableTime                  `json:"created_at,omitempty"`
	UpdatedAt            NullableTime                  `json:"updated_at,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BnsVpcV1ApiGetSubnetModelSubnetModel BnsVpcV1ApiGetSubnetModelSubnetModel

// NewBnsVpcV1ApiGetSubnetModelSubnetModel instantiates a new BnsVpcV1ApiGetSubnetModelSubnetModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBnsVpcV1ApiGetSubnetModelSubnetModel(id string) *BnsVpcV1ApiGetSubnetModelSubnetModel {
	this := BnsVpcV1ApiGetSubnetModelSubnetModel{}
	this.Id = id
	return &this
}

// NewBnsVpcV1ApiGetSubnetModelSubnetModelWithDefaults instantiates a new BnsVpcV1ApiGetSubnetModelSubnetModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBnsVpcV1ApiGetSubnetModelSubnetModelWithDefaults() *BnsVpcV1ApiGetSubnetModelSubnetModel {
	this := BnsVpcV1ApiGetSubnetModelSubnetModel{}
	return &this
}

// GetId returns the Id field value
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) UnsetName() {
	o.Name.Unset()
}

// GetIsShared returns the IsShared field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetIsShared() bool {
	if o == nil || IsNil(o.IsShared.Get()) {
		var ret bool
		return ret
	}
	return *o.IsShared.Get()
}

// GetIsSharedOk returns a tuple with the IsShared field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetIsSharedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsShared.Get(), o.IsShared.IsSet()
}

// HasIsShared returns a boolean if a field has been set.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) HasIsShared() bool {
	if o != nil && o.IsShared.IsSet() {
		return true
	}

	return false
}

// SetIsShared gets a reference to the given NullableBool and assigns it to the IsShared field.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetIsShared(v bool) {
	o.IsShared.Set(&v)
}

// SetIsSharedNil sets the value for IsShared to be an explicit nil
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetIsSharedNil() {
	o.IsShared.Set(nil)
}

// UnsetIsShared ensures that no value is present for IsShared, not even an explicit nil
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) UnsetIsShared() {
	o.IsShared.Unset()
}

// GetAvailabilityZone returns the AvailabilityZone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetAvailabilityZone() AvailabilityZone {
	if o == nil || IsNil(o.AvailabilityZone.Get()) {
		var ret AvailabilityZone
		return ret
	}
	return *o.AvailabilityZone.Get()
}

// GetAvailabilityZoneOk returns a tuple with the AvailabilityZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetAvailabilityZoneOk() (*AvailabilityZone, bool) {
	if o == nil {
		return nil, false
	}
	return o.AvailabilityZone.Get(), o.AvailabilityZone.IsSet()
}

// HasAvailabilityZone returns a boolean if a field has been set.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) HasAvailabilityZone() bool {
	if o != nil && o.AvailabilityZone.IsSet() {
		return true
	}

	return false
}

// SetAvailabilityZone gets a reference to the given NullableAvailabilityZone and assigns it to the AvailabilityZone field.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetAvailabilityZone(v AvailabilityZone) {
	o.AvailabilityZone.Set(&v)
}

// SetAvailabilityZoneNil sets the value for AvailabilityZone to be an explicit nil
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetAvailabilityZoneNil() {
	o.AvailabilityZone.Set(nil)
}

// UnsetAvailabilityZone ensures that no value is present for AvailabilityZone, not even an explicit nil
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) UnsetAvailabilityZone() {
	o.AvailabilityZone.Unset()
}

// GetCidrBlock returns the CidrBlock field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetCidrBlock() string {
	if o == nil || IsNil(o.CidrBlock.Get()) {
		var ret string
		return ret
	}
	return *o.CidrBlock.Get()
}

// GetCidrBlockOk returns a tuple with the CidrBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetCidrBlockOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CidrBlock.Get(), o.CidrBlock.IsSet()
}

// HasCidrBlock returns a boolean if a field has been set.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) HasCidrBlock() bool {
	if o != nil && o.CidrBlock.IsSet() {
		return true
	}

	return false
}

// SetCidrBlock gets a reference to the given NullableString and assigns it to the CidrBlock field.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetCidrBlock(v string) {
	o.CidrBlock.Set(&v)
}

// SetCidrBlockNil sets the value for CidrBlock to be an explicit nil
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetCidrBlockNil() {
	o.CidrBlock.Set(nil)
}

// UnsetCidrBlock ensures that no value is present for CidrBlock, not even an explicit nil
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) UnsetCidrBlock() {
	o.CidrBlock.Unset()
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId.Get()) {
		var ret string
		return ret
	}
	return *o.ProjectId.Get()
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectId.Get(), o.ProjectId.IsSet()
}

// HasProjectId returns a boolean if a field has been set.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) HasProjectId() bool {
	if o != nil && o.ProjectId.IsSet() {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given NullableString and assigns it to the ProjectId field.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetProjectId(v string) {
	o.ProjectId.Set(&v)
}

// SetProjectIdNil sets the value for ProjectId to be an explicit nil
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetProjectIdNil() {
	o.ProjectId.Set(nil)
}

// UnsetProjectId ensures that no value is present for ProjectId, not even an explicit nil
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) UnsetProjectId() {
	o.ProjectId.Unset()
}

// GetOperatingStatus returns the OperatingStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetOperatingStatus() SubnetOperatingStatus {
	if o == nil || IsNil(o.OperatingStatus.Get()) {
		var ret SubnetOperatingStatus
		return ret
	}
	return *o.OperatingStatus.Get()
}

// GetOperatingStatusOk returns a tuple with the OperatingStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetOperatingStatusOk() (*SubnetOperatingStatus, bool) {
	if o == nil {
		return nil, false
	}
	return o.OperatingStatus.Get(), o.OperatingStatus.IsSet()
}

// HasOperatingStatus returns a boolean if a field has been set.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) HasOperatingStatus() bool {
	if o != nil && o.OperatingStatus.IsSet() {
		return true
	}

	return false
}

// SetOperatingStatus gets a reference to the given NullableSubnetOperatingStatus and assigns it to the OperatingStatus field.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetOperatingStatus(v SubnetOperatingStatus) {
	o.OperatingStatus.Set(&v)
}

// SetOperatingStatusNil sets the value for OperatingStatus to be an explicit nil
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetOperatingStatusNil() {
	o.OperatingStatus.Set(nil)
}

// UnsetOperatingStatus ensures that no value is present for OperatingStatus, not even an explicit nil
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) UnsetOperatingStatus() {
	o.OperatingStatus.Unset()
}

// GetProvisioningStatus returns the ProvisioningStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetProvisioningStatus() ProvisioningStatus {
	if o == nil || IsNil(o.ProvisioningStatus.Get()) {
		var ret ProvisioningStatus
		return ret
	}
	return *o.ProvisioningStatus.Get()
}

// GetProvisioningStatusOk returns a tuple with the ProvisioningStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetProvisioningStatusOk() (*ProvisioningStatus, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProvisioningStatus.Get(), o.ProvisioningStatus.IsSet()
}

// HasProvisioningStatus returns a boolean if a field has been set.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) HasProvisioningStatus() bool {
	if o != nil && o.ProvisioningStatus.IsSet() {
		return true
	}

	return false
}

// SetProvisioningStatus gets a reference to the given NullableProvisioningStatus and assigns it to the ProvisioningStatus field.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetProvisioningStatus(v ProvisioningStatus) {
	o.ProvisioningStatus.Set(&v)
}

// SetProvisioningStatusNil sets the value for ProvisioningStatus to be an explicit nil
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetProvisioningStatusNil() {
	o.ProvisioningStatus.Set(nil)
}

// UnsetProvisioningStatus ensures that no value is present for ProvisioningStatus, not even an explicit nil
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) UnsetProvisioningStatus() {
	o.ProvisioningStatus.Unset()
}

// GetVpcId returns the VpcId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetVpcId() string {
	if o == nil || IsNil(o.VpcId.Get()) {
		var ret string
		return ret
	}
	return *o.VpcId.Get()
}

// GetVpcIdOk returns a tuple with the VpcId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetVpcIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VpcId.Get(), o.VpcId.IsSet()
}

// HasVpcId returns a boolean if a field has been set.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) HasVpcId() bool {
	if o != nil && o.VpcId.IsSet() {
		return true
	}

	return false
}

// SetVpcId gets a reference to the given NullableString and assigns it to the VpcId field.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetVpcId(v string) {
	o.VpcId.Set(&v)
}

// SetVpcIdNil sets the value for VpcId to be an explicit nil
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetVpcIdNil() {
	o.VpcId.Set(nil)
}

// UnsetVpcId ensures that no value is present for VpcId, not even an explicit nil
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) UnsetVpcId() {
	o.VpcId.Unset()
}

// GetVpcName returns the VpcName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetVpcName() string {
	if o == nil || IsNil(o.VpcName.Get()) {
		var ret string
		return ret
	}
	return *o.VpcName.Get()
}

// GetVpcNameOk returns a tuple with the VpcName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetVpcNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VpcName.Get(), o.VpcName.IsSet()
}

// HasVpcName returns a boolean if a field has been set.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) HasVpcName() bool {
	if o != nil && o.VpcName.IsSet() {
		return true
	}

	return false
}

// SetVpcName gets a reference to the given NullableString and assigns it to the VpcName field.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetVpcName(v string) {
	o.VpcName.Set(&v)
}

// SetVpcNameNil sets the value for VpcName to be an explicit nil
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetVpcNameNil() {
	o.VpcName.Set(nil)
}

// UnsetVpcName ensures that no value is present for VpcName, not even an explicit nil
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) UnsetVpcName() {
	o.VpcName.Unset()
}

// GetProjectName returns the ProjectName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetProjectName() string {
	if o == nil || IsNil(o.ProjectName.Get()) {
		var ret string
		return ret
	}
	return *o.ProjectName.Get()
}

// GetProjectNameOk returns a tuple with the ProjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetProjectNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectName.Get(), o.ProjectName.IsSet()
}

// HasProjectName returns a boolean if a field has been set.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) HasProjectName() bool {
	if o != nil && o.ProjectName.IsSet() {
		return true
	}

	return false
}

// SetProjectName gets a reference to the given NullableString and assigns it to the ProjectName field.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetProjectName(v string) {
	o.ProjectName.Set(&v)
}

// SetProjectNameNil sets the value for ProjectName to be an explicit nil
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetProjectNameNil() {
	o.ProjectName.Set(nil)
}

// UnsetProjectName ensures that no value is present for ProjectName, not even an explicit nil
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) UnsetProjectName() {
	o.ProjectName.Unset()
}

// GetOwnerProjectId returns the OwnerProjectId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetOwnerProjectId() string {
	if o == nil || IsNil(o.OwnerProjectId.Get()) {
		var ret string
		return ret
	}
	return *o.OwnerProjectId.Get()
}

// GetOwnerProjectIdOk returns a tuple with the OwnerProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetOwnerProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OwnerProjectId.Get(), o.OwnerProjectId.IsSet()
}

// HasOwnerProjectId returns a boolean if a field has been set.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) HasOwnerProjectId() bool {
	if o != nil && o.OwnerProjectId.IsSet() {
		return true
	}

	return false
}

// SetOwnerProjectId gets a reference to the given NullableString and assigns it to the OwnerProjectId field.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetOwnerProjectId(v string) {
	o.OwnerProjectId.Set(&v)
}

// SetOwnerProjectIdNil sets the value for OwnerProjectId to be an explicit nil
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetOwnerProjectIdNil() {
	o.OwnerProjectId.Set(nil)
}

// UnsetOwnerProjectId ensures that no value is present for OwnerProjectId, not even an explicit nil
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) UnsetOwnerProjectId() {
	o.OwnerProjectId.Unset()
}

// GetRouteTableId returns the RouteTableId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetRouteTableId() string {
	if o == nil || IsNil(o.RouteTableId.Get()) {
		var ret string
		return ret
	}
	return *o.RouteTableId.Get()
}

// GetRouteTableIdOk returns a tuple with the RouteTableId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetRouteTableIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RouteTableId.Get(), o.RouteTableId.IsSet()
}

// HasRouteTableId returns a boolean if a field has been set.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) HasRouteTableId() bool {
	if o != nil && o.RouteTableId.IsSet() {
		return true
	}

	return false
}

// SetRouteTableId gets a reference to the given NullableString and assigns it to the RouteTableId field.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetRouteTableId(v string) {
	o.RouteTableId.Set(&v)
}

// SetRouteTableIdNil sets the value for RouteTableId to be an explicit nil
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetRouteTableIdNil() {
	o.RouteTableId.Set(nil)
}

// UnsetRouteTableId ensures that no value is present for RouteTableId, not even an explicit nil
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) UnsetRouteTableId() {
	o.RouteTableId.Unset()
}

// GetRouteTableName returns the RouteTableName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetRouteTableName() string {
	if o == nil || IsNil(o.RouteTableName.Get()) {
		var ret string
		return ret
	}
	return *o.RouteTableName.Get()
}

// GetRouteTableNameOk returns a tuple with the RouteTableName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetRouteTableNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RouteTableName.Get(), o.RouteTableName.IsSet()
}

// HasRouteTableName returns a boolean if a field has been set.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) HasRouteTableName() bool {
	if o != nil && o.RouteTableName.IsSet() {
		return true
	}

	return false
}

// SetRouteTableName gets a reference to the given NullableString and assigns it to the RouteTableName field.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetRouteTableName(v string) {
	o.RouteTableName.Set(&v)
}

// SetRouteTableNameNil sets the value for RouteTableName to be an explicit nil
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetRouteTableNameNil() {
	o.RouteTableName.Set(nil)
}

// UnsetRouteTableName ensures that no value is present for RouteTableName, not even an explicit nil
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) UnsetRouteTableName() {
	o.RouteTableName.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given NullableTime and assigns it to the CreatedAt field.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetCreatedAt(v time.Time) {
	o.CreatedAt.Set(&v)
}

// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetCreatedAtNil() {
	o.CreatedAt.Set(nil)
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableTime and assigns it to the UpdatedAt field.
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetUpdatedAt(v time.Time) {
	o.UpdatedAt.Set(&v)
}

// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) SetUpdatedAtNil() {
	o.UpdatedAt.Set(nil)
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

func (o BnsVpcV1ApiGetSubnetModelSubnetModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BnsVpcV1ApiGetSubnetModelSubnetModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.IsShared.IsSet() {
		toSerialize["is_shared"] = o.IsShared.Get()
	}
	if o.AvailabilityZone.IsSet() {
		toSerialize["availability_zone"] = o.AvailabilityZone.Get()
	}
	if o.CidrBlock.IsSet() {
		toSerialize["cidr_block"] = o.CidrBlock.Get()
	}
	if o.ProjectId.IsSet() {
		toSerialize["project_id"] = o.ProjectId.Get()
	}
	if o.OperatingStatus.IsSet() {
		toSerialize["operating_status"] = o.OperatingStatus.Get()
	}
	if o.ProvisioningStatus.IsSet() {
		toSerialize["provisioning_status"] = o.ProvisioningStatus.Get()
	}
	if o.VpcId.IsSet() {
		toSerialize["vpc_id"] = o.VpcId.Get()
	}
	if o.VpcName.IsSet() {
		toSerialize["vpc_name"] = o.VpcName.Get()
	}
	if o.ProjectName.IsSet() {
		toSerialize["project_name"] = o.ProjectName.Get()
	}
	if o.OwnerProjectId.IsSet() {
		toSerialize["owner_project_id"] = o.OwnerProjectId.Get()
	}
	if o.RouteTableId.IsSet() {
		toSerialize["route_table_id"] = o.RouteTableId.Get()
	}
	if o.RouteTableName.IsSet() {
		toSerialize["route_table_name"] = o.RouteTableName.Get()
	}
	if o.CreatedAt.IsSet() {
		toSerialize["created_at"] = o.CreatedAt.Get()
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["updated_at"] = o.UpdatedAt.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BnsVpcV1ApiGetSubnetModelSubnetModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBnsVpcV1ApiGetSubnetModelSubnetModel := _BnsVpcV1ApiGetSubnetModelSubnetModel{}

	err = json.Unmarshal(data, &varBnsVpcV1ApiGetSubnetModelSubnetModel)

	if err != nil {
		return err
	}

	*o = BnsVpcV1ApiGetSubnetModelSubnetModel(varBnsVpcV1ApiGetSubnetModelSubnetModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "is_shared")
		delete(additionalProperties, "availability_zone")
		delete(additionalProperties, "cidr_block")
		delete(additionalProperties, "project_id")
		delete(additionalProperties, "operating_status")
		delete(additionalProperties, "provisioning_status")
		delete(additionalProperties, "vpc_id")
		delete(additionalProperties, "vpc_name")
		delete(additionalProperties, "project_name")
		delete(additionalProperties, "owner_project_id")
		delete(additionalProperties, "route_table_id")
		delete(additionalProperties, "route_table_name")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBnsVpcV1ApiGetSubnetModelSubnetModel struct {
	value *BnsVpcV1ApiGetSubnetModelSubnetModel
	isSet bool
}

func (v NullableBnsVpcV1ApiGetSubnetModelSubnetModel) Get() *BnsVpcV1ApiGetSubnetModelSubnetModel {
	return v.value
}

func (v *NullableBnsVpcV1ApiGetSubnetModelSubnetModel) Set(val *BnsVpcV1ApiGetSubnetModelSubnetModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBnsVpcV1ApiGetSubnetModelSubnetModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBnsVpcV1ApiGetSubnetModelSubnetModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBnsVpcV1ApiGetSubnetModelSubnetModel(val *BnsVpcV1ApiGetSubnetModelSubnetModel) *NullableBnsVpcV1ApiGetSubnetModelSubnetModel {
	return &NullableBnsVpcV1ApiGetSubnetModelSubnetModel{value: val, isSet: true}
}

func (v NullableBnsVpcV1ApiGetSubnetModelSubnetModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBnsVpcV1ApiGetSubnetModelSubnetModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
