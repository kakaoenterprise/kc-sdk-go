/*
Beyond Networking Service(BNS) VPC API

BNS VPC API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpc

import (
	"encoding/json"
	"fmt"
)

// checks if the BnsVpcV1ApiListRouteTablesModelAssociationModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BnsVpcV1ApiListRouteTablesModelAssociationModel{}

// BnsVpcV1ApiListRouteTablesModelAssociationModel struct for BnsVpcV1ApiListRouteTablesModelAssociationModel
type BnsVpcV1ApiListRouteTablesModelAssociationModel struct {
	// 연결 ID
	Id                   string                     `json:"id"`
	ProvisioningStatus   NullableProvisioningStatus `json:"provisioning_status,omitempty"`
	VpcId                NullableString             `json:"vpc_id,omitempty"`
	VpcName              NullableString             `json:"vpc_name,omitempty"`
	SubnetId             NullableString             `json:"subnet_id,omitempty"`
	SubnetName           NullableString             `json:"subnet_name,omitempty"`
	SubnetCidrBlock      NullableString             `json:"subnet_cidr_block,omitempty"`
	AvailabilityZone     NullableAvailabilityZone   `json:"availability_zone,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BnsVpcV1ApiListRouteTablesModelAssociationModel BnsVpcV1ApiListRouteTablesModelAssociationModel

// NewBnsVpcV1ApiListRouteTablesModelAssociationModel instantiates a new BnsVpcV1ApiListRouteTablesModelAssociationModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBnsVpcV1ApiListRouteTablesModelAssociationModel(id string) *BnsVpcV1ApiListRouteTablesModelAssociationModel {
	this := BnsVpcV1ApiListRouteTablesModelAssociationModel{}
	this.Id = id
	return &this
}

// NewBnsVpcV1ApiListRouteTablesModelAssociationModelWithDefaults instantiates a new BnsVpcV1ApiListRouteTablesModelAssociationModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBnsVpcV1ApiListRouteTablesModelAssociationModelWithDefaults() *BnsVpcV1ApiListRouteTablesModelAssociationModel {
	this := BnsVpcV1ApiListRouteTablesModelAssociationModel{}
	return &this
}

// GetId returns the Id field value
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) SetId(v string) {
	o.Id = v
}

// GetProvisioningStatus returns the ProvisioningStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) GetProvisioningStatus() ProvisioningStatus {
	if o == nil || IsNil(o.ProvisioningStatus.Get()) {
		var ret ProvisioningStatus
		return ret
	}
	return *o.ProvisioningStatus.Get()
}

// GetProvisioningStatusOk returns a tuple with the ProvisioningStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) GetProvisioningStatusOk() (*ProvisioningStatus, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProvisioningStatus.Get(), o.ProvisioningStatus.IsSet()
}

// HasProvisioningStatus returns a boolean if a field has been set.
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) HasProvisioningStatus() bool {
	if o != nil && o.ProvisioningStatus.IsSet() {
		return true
	}

	return false
}

// SetProvisioningStatus gets a reference to the given NullableProvisioningStatus and assigns it to the ProvisioningStatus field.
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) SetProvisioningStatus(v ProvisioningStatus) {
	o.ProvisioningStatus.Set(&v)
}

// SetProvisioningStatusNil sets the value for ProvisioningStatus to be an explicit nil
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) SetProvisioningStatusNil() {
	o.ProvisioningStatus.Set(nil)
}

// UnsetProvisioningStatus ensures that no value is present for ProvisioningStatus, not even an explicit nil
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) UnsetProvisioningStatus() {
	o.ProvisioningStatus.Unset()
}

// GetVpcId returns the VpcId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) GetVpcId() string {
	if o == nil || IsNil(o.VpcId.Get()) {
		var ret string
		return ret
	}
	return *o.VpcId.Get()
}

// GetVpcIdOk returns a tuple with the VpcId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) GetVpcIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VpcId.Get(), o.VpcId.IsSet()
}

// HasVpcId returns a boolean if a field has been set.
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) HasVpcId() bool {
	if o != nil && o.VpcId.IsSet() {
		return true
	}

	return false
}

// SetVpcId gets a reference to the given NullableString and assigns it to the VpcId field.
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) SetVpcId(v string) {
	o.VpcId.Set(&v)
}

// SetVpcIdNil sets the value for VpcId to be an explicit nil
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) SetVpcIdNil() {
	o.VpcId.Set(nil)
}

// UnsetVpcId ensures that no value is present for VpcId, not even an explicit nil
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) UnsetVpcId() {
	o.VpcId.Unset()
}

// GetVpcName returns the VpcName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) GetVpcName() string {
	if o == nil || IsNil(o.VpcName.Get()) {
		var ret string
		return ret
	}
	return *o.VpcName.Get()
}

// GetVpcNameOk returns a tuple with the VpcName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) GetVpcNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VpcName.Get(), o.VpcName.IsSet()
}

// HasVpcName returns a boolean if a field has been set.
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) HasVpcName() bool {
	if o != nil && o.VpcName.IsSet() {
		return true
	}

	return false
}

// SetVpcName gets a reference to the given NullableString and assigns it to the VpcName field.
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) SetVpcName(v string) {
	o.VpcName.Set(&v)
}

// SetVpcNameNil sets the value for VpcName to be an explicit nil
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) SetVpcNameNil() {
	o.VpcName.Set(nil)
}

// UnsetVpcName ensures that no value is present for VpcName, not even an explicit nil
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) UnsetVpcName() {
	o.VpcName.Unset()
}

// GetSubnetId returns the SubnetId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) GetSubnetId() string {
	if o == nil || IsNil(o.SubnetId.Get()) {
		var ret string
		return ret
	}
	return *o.SubnetId.Get()
}

// GetSubnetIdOk returns a tuple with the SubnetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) GetSubnetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubnetId.Get(), o.SubnetId.IsSet()
}

// HasSubnetId returns a boolean if a field has been set.
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) HasSubnetId() bool {
	if o != nil && o.SubnetId.IsSet() {
		return true
	}

	return false
}

// SetSubnetId gets a reference to the given NullableString and assigns it to the SubnetId field.
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) SetSubnetId(v string) {
	o.SubnetId.Set(&v)
}

// SetSubnetIdNil sets the value for SubnetId to be an explicit nil
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) SetSubnetIdNil() {
	o.SubnetId.Set(nil)
}

// UnsetSubnetId ensures that no value is present for SubnetId, not even an explicit nil
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) UnsetSubnetId() {
	o.SubnetId.Unset()
}

// GetSubnetName returns the SubnetName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) GetSubnetName() string {
	if o == nil || IsNil(o.SubnetName.Get()) {
		var ret string
		return ret
	}
	return *o.SubnetName.Get()
}

// GetSubnetNameOk returns a tuple with the SubnetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) GetSubnetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubnetName.Get(), o.SubnetName.IsSet()
}

// HasSubnetName returns a boolean if a field has been set.
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) HasSubnetName() bool {
	if o != nil && o.SubnetName.IsSet() {
		return true
	}

	return false
}

// SetSubnetName gets a reference to the given NullableString and assigns it to the SubnetName field.
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) SetSubnetName(v string) {
	o.SubnetName.Set(&v)
}

// SetSubnetNameNil sets the value for SubnetName to be an explicit nil
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) SetSubnetNameNil() {
	o.SubnetName.Set(nil)
}

// UnsetSubnetName ensures that no value is present for SubnetName, not even an explicit nil
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) UnsetSubnetName() {
	o.SubnetName.Unset()
}

// GetSubnetCidrBlock returns the SubnetCidrBlock field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) GetSubnetCidrBlock() string {
	if o == nil || IsNil(o.SubnetCidrBlock.Get()) {
		var ret string
		return ret
	}
	return *o.SubnetCidrBlock.Get()
}

// GetSubnetCidrBlockOk returns a tuple with the SubnetCidrBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) GetSubnetCidrBlockOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubnetCidrBlock.Get(), o.SubnetCidrBlock.IsSet()
}

// HasSubnetCidrBlock returns a boolean if a field has been set.
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) HasSubnetCidrBlock() bool {
	if o != nil && o.SubnetCidrBlock.IsSet() {
		return true
	}

	return false
}

// SetSubnetCidrBlock gets a reference to the given NullableString and assigns it to the SubnetCidrBlock field.
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) SetSubnetCidrBlock(v string) {
	o.SubnetCidrBlock.Set(&v)
}

// SetSubnetCidrBlockNil sets the value for SubnetCidrBlock to be an explicit nil
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) SetSubnetCidrBlockNil() {
	o.SubnetCidrBlock.Set(nil)
}

// UnsetSubnetCidrBlock ensures that no value is present for SubnetCidrBlock, not even an explicit nil
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) UnsetSubnetCidrBlock() {
	o.SubnetCidrBlock.Unset()
}

// GetAvailabilityZone returns the AvailabilityZone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) GetAvailabilityZone() AvailabilityZone {
	if o == nil || IsNil(o.AvailabilityZone.Get()) {
		var ret AvailabilityZone
		return ret
	}
	return *o.AvailabilityZone.Get()
}

// GetAvailabilityZoneOk returns a tuple with the AvailabilityZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) GetAvailabilityZoneOk() (*AvailabilityZone, bool) {
	if o == nil {
		return nil, false
	}
	return o.AvailabilityZone.Get(), o.AvailabilityZone.IsSet()
}

// HasAvailabilityZone returns a boolean if a field has been set.
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) HasAvailabilityZone() bool {
	if o != nil && o.AvailabilityZone.IsSet() {
		return true
	}

	return false
}

// SetAvailabilityZone gets a reference to the given NullableAvailabilityZone and assigns it to the AvailabilityZone field.
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) SetAvailabilityZone(v AvailabilityZone) {
	o.AvailabilityZone.Set(&v)
}

// SetAvailabilityZoneNil sets the value for AvailabilityZone to be an explicit nil
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) SetAvailabilityZoneNil() {
	o.AvailabilityZone.Set(nil)
}

// UnsetAvailabilityZone ensures that no value is present for AvailabilityZone, not even an explicit nil
func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) UnsetAvailabilityZone() {
	o.AvailabilityZone.Unset()
}

func (o BnsVpcV1ApiListRouteTablesModelAssociationModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BnsVpcV1ApiListRouteTablesModelAssociationModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if o.ProvisioningStatus.IsSet() {
		toSerialize["provisioning_status"] = o.ProvisioningStatus.Get()
	}
	if o.VpcId.IsSet() {
		toSerialize["vpc_id"] = o.VpcId.Get()
	}
	if o.VpcName.IsSet() {
		toSerialize["vpc_name"] = o.VpcName.Get()
	}
	if o.SubnetId.IsSet() {
		toSerialize["subnet_id"] = o.SubnetId.Get()
	}
	if o.SubnetName.IsSet() {
		toSerialize["subnet_name"] = o.SubnetName.Get()
	}
	if o.SubnetCidrBlock.IsSet() {
		toSerialize["subnet_cidr_block"] = o.SubnetCidrBlock.Get()
	}
	if o.AvailabilityZone.IsSet() {
		toSerialize["availability_zone"] = o.AvailabilityZone.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BnsVpcV1ApiListRouteTablesModelAssociationModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBnsVpcV1ApiListRouteTablesModelAssociationModel := _BnsVpcV1ApiListRouteTablesModelAssociationModel{}

	err = json.Unmarshal(data, &varBnsVpcV1ApiListRouteTablesModelAssociationModel)

	if err != nil {
		return err
	}

	*o = BnsVpcV1ApiListRouteTablesModelAssociationModel(varBnsVpcV1ApiListRouteTablesModelAssociationModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "provisioning_status")
		delete(additionalProperties, "vpc_id")
		delete(additionalProperties, "vpc_name")
		delete(additionalProperties, "subnet_id")
		delete(additionalProperties, "subnet_name")
		delete(additionalProperties, "subnet_cidr_block")
		delete(additionalProperties, "availability_zone")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBnsVpcV1ApiListRouteTablesModelAssociationModel struct {
	value *BnsVpcV1ApiListRouteTablesModelAssociationModel
	isSet bool
}

func (v NullableBnsVpcV1ApiListRouteTablesModelAssociationModel) Get() *BnsVpcV1ApiListRouteTablesModelAssociationModel {
	return v.value
}

func (v *NullableBnsVpcV1ApiListRouteTablesModelAssociationModel) Set(val *BnsVpcV1ApiListRouteTablesModelAssociationModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBnsVpcV1ApiListRouteTablesModelAssociationModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBnsVpcV1ApiListRouteTablesModelAssociationModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBnsVpcV1ApiListRouteTablesModelAssociationModel(val *BnsVpcV1ApiListRouteTablesModelAssociationModel) *NullableBnsVpcV1ApiListRouteTablesModelAssociationModel {
	return &NullableBnsVpcV1ApiListRouteTablesModelAssociationModel{value: val, isSet: true}
}

func (v NullableBnsVpcV1ApiListRouteTablesModelAssociationModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBnsVpcV1ApiListRouteTablesModelAssociationModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
