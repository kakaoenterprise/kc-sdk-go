/*
Beyond Networking Service(BNS) VPC API

BNS VPC API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpc

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the BnsVpcV1ApiUpdateSubnetModelSubnetModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BnsVpcV1ApiUpdateSubnetModelSubnetModel{}

// BnsVpcV1ApiUpdateSubnetModelSubnetModel struct for BnsVpcV1ApiUpdateSubnetModelSubnetModel
type BnsVpcV1ApiUpdateSubnetModelSubnetModel struct {
	// 서브넷 ID
	Id string `json:"id"`
	// 서브넷의 이름
	Name string `json:"name"`
	// 서브넷이 속한 VPC의 ID
	VpcId string `json:"vpc_id"`
	// 프로비저닝 상태
	ProvisioningStatus ProvisioningStatus `json:"provisioning_status"`
	// 서브넷이 위치한 가용 영역
	AvailabilityZone AvailabilityZone `json:"availability_zone"`
	// 서브넷의 IPv4 CIDR 블록
	CidrBlock string `json:"cidr_block"`
	// 서브넷이 속한 프로젝트의 ID
	ProjectId string `json:"project_id"`
	// 리소스가 생성된 시간 <br/> - ISO_8601 형식  <br/> - UTC 기준
	CreatedAt time.Time `json:"created_at"`
	// 리소스가 마지막으로 수정된 시간 <br/> - ISO_8601 형식  <br/> - UTC 기준
	UpdatedAt            time.Time `json:"updated_at"`
	AdditionalProperties map[string]interface{}
}

type _BnsVpcV1ApiUpdateSubnetModelSubnetModel BnsVpcV1ApiUpdateSubnetModelSubnetModel

// NewBnsVpcV1ApiUpdateSubnetModelSubnetModel instantiates a new BnsVpcV1ApiUpdateSubnetModelSubnetModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBnsVpcV1ApiUpdateSubnetModelSubnetModel(id string, name string, vpcId string, provisioningStatus ProvisioningStatus, availabilityZone AvailabilityZone, cidrBlock string, projectId string, createdAt time.Time, updatedAt time.Time) *BnsVpcV1ApiUpdateSubnetModelSubnetModel {
	this := BnsVpcV1ApiUpdateSubnetModelSubnetModel{}
	this.Id = id
	this.Name = name
	this.VpcId = vpcId
	this.ProvisioningStatus = provisioningStatus
	this.AvailabilityZone = availabilityZone
	this.CidrBlock = cidrBlock
	this.ProjectId = projectId
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewBnsVpcV1ApiUpdateSubnetModelSubnetModelWithDefaults instantiates a new BnsVpcV1ApiUpdateSubnetModelSubnetModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBnsVpcV1ApiUpdateSubnetModelSubnetModelWithDefaults() *BnsVpcV1ApiUpdateSubnetModelSubnetModel {
	this := BnsVpcV1ApiUpdateSubnetModelSubnetModel{}
	return &this
}

// GetId returns the Id field value
func (o *BnsVpcV1ApiUpdateSubnetModelSubnetModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BnsVpcV1ApiUpdateSubnetModelSubnetModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BnsVpcV1ApiUpdateSubnetModelSubnetModel) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *BnsVpcV1ApiUpdateSubnetModelSubnetModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BnsVpcV1ApiUpdateSubnetModelSubnetModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BnsVpcV1ApiUpdateSubnetModelSubnetModel) SetName(v string) {
	o.Name = v
}

// GetVpcId returns the VpcId field value
func (o *BnsVpcV1ApiUpdateSubnetModelSubnetModel) GetVpcId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VpcId
}

// GetVpcIdOk returns a tuple with the VpcId field value
// and a boolean to check if the value has been set.
func (o *BnsVpcV1ApiUpdateSubnetModelSubnetModel) GetVpcIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VpcId, true
}

// SetVpcId sets field value
func (o *BnsVpcV1ApiUpdateSubnetModelSubnetModel) SetVpcId(v string) {
	o.VpcId = v
}

// GetProvisioningStatus returns the ProvisioningStatus field value
func (o *BnsVpcV1ApiUpdateSubnetModelSubnetModel) GetProvisioningStatus() ProvisioningStatus {
	if o == nil {
		var ret ProvisioningStatus
		return ret
	}

	return o.ProvisioningStatus
}

// GetProvisioningStatusOk returns a tuple with the ProvisioningStatus field value
// and a boolean to check if the value has been set.
func (o *BnsVpcV1ApiUpdateSubnetModelSubnetModel) GetProvisioningStatusOk() (*ProvisioningStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProvisioningStatus, true
}

// SetProvisioningStatus sets field value
func (o *BnsVpcV1ApiUpdateSubnetModelSubnetModel) SetProvisioningStatus(v ProvisioningStatus) {
	o.ProvisioningStatus = v
}

// GetAvailabilityZone returns the AvailabilityZone field value
func (o *BnsVpcV1ApiUpdateSubnetModelSubnetModel) GetAvailabilityZone() AvailabilityZone {
	if o == nil {
		var ret AvailabilityZone
		return ret
	}

	return o.AvailabilityZone
}

// GetAvailabilityZoneOk returns a tuple with the AvailabilityZone field value
// and a boolean to check if the value has been set.
func (o *BnsVpcV1ApiUpdateSubnetModelSubnetModel) GetAvailabilityZoneOk() (*AvailabilityZone, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvailabilityZone, true
}

// SetAvailabilityZone sets field value
func (o *BnsVpcV1ApiUpdateSubnetModelSubnetModel) SetAvailabilityZone(v AvailabilityZone) {
	o.AvailabilityZone = v
}

// GetCidrBlock returns the CidrBlock field value
func (o *BnsVpcV1ApiUpdateSubnetModelSubnetModel) GetCidrBlock() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CidrBlock
}

// GetCidrBlockOk returns a tuple with the CidrBlock field value
// and a boolean to check if the value has been set.
func (o *BnsVpcV1ApiUpdateSubnetModelSubnetModel) GetCidrBlockOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CidrBlock, true
}

// SetCidrBlock sets field value
func (o *BnsVpcV1ApiUpdateSubnetModelSubnetModel) SetCidrBlock(v string) {
	o.CidrBlock = v
}

// GetProjectId returns the ProjectId field value
func (o *BnsVpcV1ApiUpdateSubnetModelSubnetModel) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *BnsVpcV1ApiUpdateSubnetModelSubnetModel) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *BnsVpcV1ApiUpdateSubnetModelSubnetModel) SetProjectId(v string) {
	o.ProjectId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *BnsVpcV1ApiUpdateSubnetModelSubnetModel) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *BnsVpcV1ApiUpdateSubnetModelSubnetModel) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *BnsVpcV1ApiUpdateSubnetModelSubnetModel) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *BnsVpcV1ApiUpdateSubnetModelSubnetModel) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *BnsVpcV1ApiUpdateSubnetModelSubnetModel) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *BnsVpcV1ApiUpdateSubnetModelSubnetModel) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o BnsVpcV1ApiUpdateSubnetModelSubnetModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BnsVpcV1ApiUpdateSubnetModelSubnetModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["vpc_id"] = o.VpcId
	toSerialize["provisioning_status"] = o.ProvisioningStatus
	toSerialize["availability_zone"] = o.AvailabilityZone
	toSerialize["cidr_block"] = o.CidrBlock
	toSerialize["project_id"] = o.ProjectId
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BnsVpcV1ApiUpdateSubnetModelSubnetModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"vpc_id",
		"provisioning_status",
		"availability_zone",
		"cidr_block",
		"project_id",
		"created_at",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBnsVpcV1ApiUpdateSubnetModelSubnetModel := _BnsVpcV1ApiUpdateSubnetModelSubnetModel{}

	err = json.Unmarshal(data, &varBnsVpcV1ApiUpdateSubnetModelSubnetModel)

	if err != nil {
		return err
	}

	*o = BnsVpcV1ApiUpdateSubnetModelSubnetModel(varBnsVpcV1ApiUpdateSubnetModelSubnetModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "vpc_id")
		delete(additionalProperties, "provisioning_status")
		delete(additionalProperties, "availability_zone")
		delete(additionalProperties, "cidr_block")
		delete(additionalProperties, "project_id")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBnsVpcV1ApiUpdateSubnetModelSubnetModel struct {
	value *BnsVpcV1ApiUpdateSubnetModelSubnetModel
	isSet bool
}

func (v NullableBnsVpcV1ApiUpdateSubnetModelSubnetModel) Get() *BnsVpcV1ApiUpdateSubnetModelSubnetModel {
	return v.value
}

func (v *NullableBnsVpcV1ApiUpdateSubnetModelSubnetModel) Set(val *BnsVpcV1ApiUpdateSubnetModelSubnetModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBnsVpcV1ApiUpdateSubnetModelSubnetModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBnsVpcV1ApiUpdateSubnetModelSubnetModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBnsVpcV1ApiUpdateSubnetModelSubnetModel(val *BnsVpcV1ApiUpdateSubnetModelSubnetModel) *NullableBnsVpcV1ApiUpdateSubnetModelSubnetModel {
	return &NullableBnsVpcV1ApiUpdateSubnetModelSubnetModel{value: val, isSet: true}
}

func (v NullableBnsVpcV1ApiUpdateSubnetModelSubnetModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBnsVpcV1ApiUpdateSubnetModelSubnetModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
