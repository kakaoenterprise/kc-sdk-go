/*
Beyond Networking Service(BNS) VPC API

BNS VPC API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpc

import (
	"encoding/json"
	"fmt"
)

// checks if the BodyCreateVpc type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BodyCreateVpc{}

// BodyCreateVpc struct for BodyCreateVpc
type BodyCreateVpc struct {
	Vpc                  CreateVPCModel `json:"vpc"`
	AdditionalProperties map[string]interface{}
}

type _BodyCreateVpc BodyCreateVpc

// NewBodyCreateVpc instantiates a new BodyCreateVpc object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBodyCreateVpc(vpc CreateVPCModel) *BodyCreateVpc {
	this := BodyCreateVpc{}
	this.Vpc = vpc
	return &this
}

// NewBodyCreateVpcWithDefaults instantiates a new BodyCreateVpc object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBodyCreateVpcWithDefaults() *BodyCreateVpc {
	this := BodyCreateVpc{}
	return &this
}

// GetVpc returns the Vpc field value
func (o *BodyCreateVpc) GetVpc() CreateVPCModel {
	if o == nil {
		var ret CreateVPCModel
		return ret
	}

	return o.Vpc
}

// GetVpcOk returns a tuple with the Vpc field value
// and a boolean to check if the value has been set.
func (o *BodyCreateVpc) GetVpcOk() (*CreateVPCModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Vpc, true
}

// SetVpc sets field value
func (o *BodyCreateVpc) SetVpc(v CreateVPCModel) {
	o.Vpc = v
}

func (o BodyCreateVpc) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BodyCreateVpc) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["vpc"] = o.Vpc

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BodyCreateVpc) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"vpc",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBodyCreateVpc := _BodyCreateVpc{}

	err = json.Unmarshal(data, &varBodyCreateVpc)

	if err != nil {
		return err
	}

	*o = BodyCreateVpc(varBodyCreateVpc)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "vpc")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBodyCreateVpc struct {
	value *BodyCreateVpc
	isSet bool
}

func (v NullableBodyCreateVpc) Get() *BodyCreateVpc {
	return v.value
}

func (v *NullableBodyCreateVpc) Set(val *BodyCreateVpc) {
	v.value = val
	v.isSet = true
}

func (v NullableBodyCreateVpc) IsSet() bool {
	return v.isSet
}

func (v *NullableBodyCreateVpc) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBodyCreateVpc(val *BodyCreateVpc) *NullableBodyCreateVpc {
	return &NullableBodyCreateVpc{value: val, isSet: true}
}

func (v NullableBodyCreateVpc) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBodyCreateVpc) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
