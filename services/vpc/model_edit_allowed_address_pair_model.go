/*
Beyond Networking Service(BNS) VPC API

BNS VPC API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpc

import (
	"encoding/json"
)

// checks if the EditAllowedAddressPairModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EditAllowedAddressPairModel{}

// EditAllowedAddressPairModel struct for EditAllowedAddressPairModel
type EditAllowedAddressPairModel struct {
	IpAddress            NullableString `json:"ip_address,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EditAllowedAddressPairModel EditAllowedAddressPairModel

// NewEditAllowedAddressPairModel instantiates a new EditAllowedAddressPairModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditAllowedAddressPairModel() *EditAllowedAddressPairModel {
	this := EditAllowedAddressPairModel{}
	return &this
}

// NewEditAllowedAddressPairModelWithDefaults instantiates a new EditAllowedAddressPairModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditAllowedAddressPairModelWithDefaults() *EditAllowedAddressPairModel {
	this := EditAllowedAddressPairModel{}
	return &this
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditAllowedAddressPairModel) GetIpAddress() string {
	if o == nil || IsNil(o.IpAddress.Get()) {
		var ret string
		return ret
	}
	return *o.IpAddress.Get()
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditAllowedAddressPairModel) GetIpAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IpAddress.Get(), o.IpAddress.IsSet()
}

// HasIpAddress returns a boolean if a field has been set.
func (o *EditAllowedAddressPairModel) HasIpAddress() bool {
	if o != nil && o.IpAddress.IsSet() {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given NullableString and assigns it to the IpAddress field.
func (o *EditAllowedAddressPairModel) SetIpAddress(v string) {
	o.IpAddress.Set(&v)
}

// SetIpAddressNil sets the value for IpAddress to be an explicit nil
func (o *EditAllowedAddressPairModel) SetIpAddressNil() {
	o.IpAddress.Set(nil)
}

// UnsetIpAddress ensures that no value is present for IpAddress, not even an explicit nil
func (o *EditAllowedAddressPairModel) UnsetIpAddress() {
	o.IpAddress.Unset()
}

func (o EditAllowedAddressPairModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EditAllowedAddressPairModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.IpAddress.IsSet() {
		toSerialize["ip_address"] = o.IpAddress.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EditAllowedAddressPairModel) UnmarshalJSON(data []byte) (err error) {
	varEditAllowedAddressPairModel := _EditAllowedAddressPairModel{}

	err = json.Unmarshal(data, &varEditAllowedAddressPairModel)

	if err != nil {
		return err
	}

	*o = EditAllowedAddressPairModel(varEditAllowedAddressPairModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ip_address")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEditAllowedAddressPairModel struct {
	value *EditAllowedAddressPairModel
	isSet bool
}

func (v NullableEditAllowedAddressPairModel) Get() *EditAllowedAddressPairModel {
	return v.value
}

func (v *NullableEditAllowedAddressPairModel) Set(val *EditAllowedAddressPairModel) {
	v.value = val
	v.isSet = true
}

func (v NullableEditAllowedAddressPairModel) IsSet() bool {
	return v.isSet
}

func (v *NullableEditAllowedAddressPairModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditAllowedAddressPairModel(val *EditAllowedAddressPairModel) *NullableEditAllowedAddressPairModel {
	return &NullableEditAllowedAddressPairModel{value: val, isSet: true}
}

func (v NullableEditAllowedAddressPairModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditAllowedAddressPairModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
