/*
Beyond Networking Service(BNS) VPC API

BNS VPC API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpc

import (
	"encoding/json"
)

// checks if the EditNetworkInterfaceModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EditNetworkInterfaceModel{}

// EditNetworkInterfaceModel struct for EditNetworkInterfaceModel
type EditNetworkInterfaceModel struct {
	Name                 NullableString `json:"name,omitempty"`
	Description          NullableString `json:"description,omitempty"`
	SecurityGroups       []string       `json:"security_groups,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EditNetworkInterfaceModel EditNetworkInterfaceModel

// NewEditNetworkInterfaceModel instantiates a new EditNetworkInterfaceModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditNetworkInterfaceModel() *EditNetworkInterfaceModel {
	this := EditNetworkInterfaceModel{}
	return &this
}

// NewEditNetworkInterfaceModelWithDefaults instantiates a new EditNetworkInterfaceModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditNetworkInterfaceModelWithDefaults() *EditNetworkInterfaceModel {
	this := EditNetworkInterfaceModel{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditNetworkInterfaceModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditNetworkInterfaceModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *EditNetworkInterfaceModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *EditNetworkInterfaceModel) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *EditNetworkInterfaceModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *EditNetworkInterfaceModel) UnsetName() {
	o.Name.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditNetworkInterfaceModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditNetworkInterfaceModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *EditNetworkInterfaceModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *EditNetworkInterfaceModel) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *EditNetworkInterfaceModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *EditNetworkInterfaceModel) UnsetDescription() {
	o.Description.Unset()
}

// GetSecurityGroups returns the SecurityGroups field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditNetworkInterfaceModel) GetSecurityGroups() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.SecurityGroups
}

// GetSecurityGroupsOk returns a tuple with the SecurityGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditNetworkInterfaceModel) GetSecurityGroupsOk() ([]string, bool) {
	if o == nil || IsNil(o.SecurityGroups) {
		return nil, false
	}
	return o.SecurityGroups, true
}

// HasSecurityGroups returns a boolean if a field has been set.
func (o *EditNetworkInterfaceModel) HasSecurityGroups() bool {
	if o != nil && !IsNil(o.SecurityGroups) {
		return true
	}

	return false
}

// SetSecurityGroups gets a reference to the given []string and assigns it to the SecurityGroups field.
func (o *EditNetworkInterfaceModel) SetSecurityGroups(v []string) {
	o.SecurityGroups = v
}

func (o EditNetworkInterfaceModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EditNetworkInterfaceModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.SecurityGroups != nil {
		toSerialize["security_groups"] = o.SecurityGroups
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EditNetworkInterfaceModel) UnmarshalJSON(data []byte) (err error) {
	varEditNetworkInterfaceModel := _EditNetworkInterfaceModel{}

	err = json.Unmarshal(data, &varEditNetworkInterfaceModel)

	if err != nil {
		return err
	}

	*o = EditNetworkInterfaceModel(varEditNetworkInterfaceModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "security_groups")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEditNetworkInterfaceModel struct {
	value *EditNetworkInterfaceModel
	isSet bool
}

func (v NullableEditNetworkInterfaceModel) Get() *EditNetworkInterfaceModel {
	return v.value
}

func (v *NullableEditNetworkInterfaceModel) Set(val *EditNetworkInterfaceModel) {
	v.value = val
	v.isSet = true
}

func (v NullableEditNetworkInterfaceModel) IsSet() bool {
	return v.isSet
}

func (v *NullableEditNetworkInterfaceModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditNetworkInterfaceModel(val *EditNetworkInterfaceModel) *NullableEditNetworkInterfaceModel {
	return &NullableEditNetworkInterfaceModel{value: val, isSet: true}
}

func (v NullableEditNetworkInterfaceModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditNetworkInterfaceModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
