/*
Beyond Networking Service(BNS) VPC API

BNS VPC API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpc

import (
	"encoding/json"
)

// checks if the ResponseSubnetSharedProjectListModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseSubnetSharedProjectListModel{}

// ResponseSubnetSharedProjectListModel struct for ResponseSubnetSharedProjectListModel
type ResponseSubnetSharedProjectListModel struct {
	Projects             []SubnetSharedProjectModel `json:"projects,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ResponseSubnetSharedProjectListModel ResponseSubnetSharedProjectListModel

// NewResponseSubnetSharedProjectListModel instantiates a new ResponseSubnetSharedProjectListModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseSubnetSharedProjectListModel() *ResponseSubnetSharedProjectListModel {
	this := ResponseSubnetSharedProjectListModel{}
	return &this
}

// NewResponseSubnetSharedProjectListModelWithDefaults instantiates a new ResponseSubnetSharedProjectListModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseSubnetSharedProjectListModelWithDefaults() *ResponseSubnetSharedProjectListModel {
	this := ResponseSubnetSharedProjectListModel{}
	return &this
}

// GetProjects returns the Projects field value if set, zero value otherwise.
func (o *ResponseSubnetSharedProjectListModel) GetProjects() []SubnetSharedProjectModel {
	if o == nil || IsNil(o.Projects) {
		var ret []SubnetSharedProjectModel
		return ret
	}
	return o.Projects
}

// GetProjectsOk returns a tuple with the Projects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseSubnetSharedProjectListModel) GetProjectsOk() ([]SubnetSharedProjectModel, bool) {
	if o == nil || IsNil(o.Projects) {
		return nil, false
	}
	return o.Projects, true
}

// HasProjects returns a boolean if a field has been set.
func (o *ResponseSubnetSharedProjectListModel) HasProjects() bool {
	if o != nil && !IsNil(o.Projects) {
		return true
	}

	return false
}

// SetProjects gets a reference to the given []SubnetSharedProjectModel and assigns it to the Projects field.
func (o *ResponseSubnetSharedProjectListModel) SetProjects(v []SubnetSharedProjectModel) {
	o.Projects = v
}

func (o ResponseSubnetSharedProjectListModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseSubnetSharedProjectListModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Projects) {
		toSerialize["projects"] = o.Projects
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ResponseSubnetSharedProjectListModel) UnmarshalJSON(data []byte) (err error) {
	varResponseSubnetSharedProjectListModel := _ResponseSubnetSharedProjectListModel{}

	err = json.Unmarshal(data, &varResponseSubnetSharedProjectListModel)

	if err != nil {
		return err
	}

	*o = ResponseSubnetSharedProjectListModel(varResponseSubnetSharedProjectListModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "projects")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableResponseSubnetSharedProjectListModel struct {
	value *ResponseSubnetSharedProjectListModel
	isSet bool
}

func (v NullableResponseSubnetSharedProjectListModel) Get() *ResponseSubnetSharedProjectListModel {
	return v.value
}

func (v *NullableResponseSubnetSharedProjectListModel) Set(val *ResponseSubnetSharedProjectListModel) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseSubnetSharedProjectListModel) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseSubnetSharedProjectListModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseSubnetSharedProjectListModel(val *ResponseSubnetSharedProjectListModel) *NullableResponseSubnetSharedProjectListModel {
	return &NullableResponseSubnetSharedProjectListModel{value: val, isSet: true}
}

func (v NullableResponseSubnetSharedProjectListModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseSubnetSharedProjectListModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
